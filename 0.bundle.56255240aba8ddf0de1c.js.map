{"version":3,"sources":["webpack:///../../src/fable-library/Util.ts","webpack:///../../src/fable-library/Types.ts","webpack:///../../src/fable-library/Reflection.ts","webpack:///../../src/fable-library/Option.ts","webpack:///../../../src/fable-library/lib/big.js","webpack:///../../src/fable-library/Decimal.ts","webpack:///../../src/fable-library/Int32.ts","webpack:///../../../src/fable-library/lib/long.js","webpack:///../../src/fable-library/Long.ts","webpack:///../../src/fable-library/Seq.ts","webpack:///../../src/fable-library/Date.ts","webpack:///../../src/fable-library/RegExp.ts","webpack:///../../src/fable-library/String.ts","webpack:///./.fable/fable-library.2.4.10/MutableMap.js","webpack:///./.fable/fable-library.2.4.10/Map.js","webpack:///./.fable/fable-library.2.4.10/MutableSet.js","webpack:///./.fable/fable-library.2.4.10/Set.js","webpack:///./.fable/fable-library.2.4.10/Array.js","webpack:///./.fable/fable-library.2.4.10/List.js","webpack:///../../src/fable-library/AsyncBuilder.ts","webpack:///../../src/fable-library/Async.ts","webpack:///../../src/fable-library/Observable.ts","webpack:///../../src/fable-library/Event.ts","webpack:///../../src/fable-library/Timer.ts","webpack:///.fable/Fable.Elmish.3.0.6/prelude.fs","webpack:///.fable/Fable.Elmish.3.0.6/cmd.fs","webpack:///.fable/Feliz.MaterialUI.0.8.2/Mui.fs","webpack:///.fable/Feliz.0.67.1/React.fs","webpack:///docs/Pickers/Examples/Date/Basic.fs","webpack:///docs/Pickers/Examples/Date/KeyboardInput.fs","webpack:///docs/Pickers/Examples/Date/DifferentViews.fs","webpack:///docs/Pickers/Examples/Date/InlineMode.fs","webpack:///docs/Pickers/Examples/Date/StaticMode.fs","webpack:///docs/Pickers/Examples/Date/Customization.fs","webpack:///.fable/Fable.Promise.2.0.0/Promise.fs","webpack:///.fable/Fable.Promise.2.0.0/PromiseImpl.fs","webpack:///docs/Pickers/Examples/Date/DynamicData.fs","webpack:///.fable/Fable.SimpleHttp.2.6.0/Http.fs","webpack:///.fable/Feliz.ElmishComponents.0.2.10/Components.fs","webpack:///.fable/Fable.React.5.3.5/Fable.React.Helpers.fs","webpack:///.fable/Fable.Elmish.React.3.0.1/common.fs","webpack:///.fable/Feliz.Router.1.5.2/Router.fs","webpack:///.fable/Fable.Elmish.3.0.6/ring.fs","webpack:///.fable/Fable.Elmish.3.0.6/program.fs","webpack:///.fable/Fable.Elmish.React.3.0.1/react.fs","webpack:///docs/App.fs","webpack:///.fable/Fable.React.5.3.5/Fable.React.FunctionComponent.fs"],"names":["Union","prototype","this","name","rm","s","n","P","x","e","y","Long","$this","other","i","MutableMap$00602","declare","pairs","comparer","this$","FSharpRef","contents","Map","iterate","pair","MutableMap$00602$$Add$$5BDDA1","MutableMap$00602$$TryFindIndex$$2B595","this$$$1","k","h","GetHashCode","matchValue","tryGetValue","findIndex","pair$$1","Equals","MutableMap$00602$$TryFind$$2B595","this$$$2","k$$1","matchValue$$1","getItemFromDict","MutableMap$00602$$Clear","this$$$4","clear","MutableMap$00602$$get_Count","this$$$5","sumBy","pairs$$2","length","values","GetZero","Add","$x$$2","$y$$3","this$$$8","k$$4","v$$1","matchValue$$4","msg","toText","printf","clo1","Error","push","set","MutableMap$00602$$Remove$$2B595","this$$$10","k$$6","matchValue$$6","splice","Symbol","iterator","this$$$11","toIterator","getEnumerator","delay","collect","pairs$$3","map","pair$$3","item","Clear","Contains","item$$1","matchValue$$7","equals","CopyTo","array","arrayIndex","iterateIndexed","i$$10","Object","defineProperty","Remove","item$$2","matchValue$$8","k$$7","entries","get","k$$8","this$$$6","k$$2","matchValue$$2","MutableMap$00602$$get_Item$$2B595","has","k$$9","this$$$9","k$$5","matchValue$$5","MutableMap$00602$$ContainsKey$$2B595","keys","pair$$5","k$$10","v$$2","this$$$7","k$$3","v","matchValue$$3","MutableMap$00602$$set_Item$$5BDDA1","pair$$6","MapTree$00602","tag","fields","call","MapTreeModule$$$size","MapTreeModule$$$sizeAux","$acc$$5","$m$$6","acc","m","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","hl","hr","MapTreeModule$$$rebalance","t1","t2","t1h","t2h","MapTreeModule$$$add","m$$3","c","Compare","c$$1","MapTreeModule$$$find","$comparer$$1$$23","$k$$3$$24","$m$$4$$25","comparer$$1","m$$4","c$$3","MapTreeModule$$$mem","$comparer$$10$$59","$k$$12$$60","$m$$8$$61","comparer$$10","k$$12","m$$8","c$$8","MapTreeModule$002EMapIterator$00602","arg1","arg2","stack","started","Record","MapTreeModule$$$collapseLHS","$stack$$111","tail","List","head","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","unfold","en$$1","MoveNext","Current","i$$3","MapTreeModule$$$moveNext","Reset","Dispose","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","FSharpMap$$get_Item$$2B595","__$$8","k$$29","FSharpMap$$get_Count","__$$20","FSharpMap$$ContainsKey$$2B595","__$$21","k$$31","ofArray","comparer$$20","comparer$$15","arr","res$$2","patternInput$$3","MapTreeModule$$$ofArray","toString","join","map$$2","kv","clo2","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3692","structuralHash","Math","abs","that","CompareTo","obj","res$$4","finished","e1","e2","kvp1","kvp2","c$$10","compare","isDisposable","_arg1$$1","k$$34","k$$35","kv$$1","k$$36","v$$26","kv$$2","MutableSet$00601","items","MutableSet$00601$$Add$$2B595","MutableSet$00601$$TryFindIndex$$2B595","MutableSet$00601$$Clear","MutableSet$00601$$get_Count","MutableSet$00601$$Contains$$2B595","MutableSet$00601$$Remove$$2B595","values$$1","value$$2","i$$8","item$$3","add","add_","x$$1","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$104","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","comparer$$18","s1","s2","$comparer$$17$$112","$l1$$113","$l2$$114","SetTreeModule$$$compareStacks","$target$$115","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","l1","l2","c$$7","c$$9","i$$1","SetTreeModule$$$moveNext","FSharpSet","comparer$$22","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","f$$1","source$$1","cons$$2","ArrayBuffer","isView","len$$1","target$$2","i$$4","equalsWith","comparer$$13","array1$$7","array2$$7","comparer$$12","array1$$6","array2$$6","i$$41","result$$14","length1","length2","compareWith","ofList","source$$8","cons$$32","from","fold","$f$$2$$19","$state$$1$$20","$xs$$8$$21","f$$2","state$$1","xs$$8","reverse","xs$$9","acc$$1","x$$6","ofSeq","xs$$12","fold$$1","acc$$3","x$$9","xs$$27","acc$$9","_arg1$$7","append","xs$$28","ys$$10","acc$$10","x$$15","f$$16","xs$$31","acc$$11","f$$24","xs$$46","unitVar0","x$$24","xs$$50","res$$1","i$$9","count","tryPickIndexed","f$$29","xs$$52","$f$$28$$120","$i$$10$$121","$_arg1$$9$$122","tryPickIndexedAux","f$$28","_arg1$$9","result","tryFind","f$$33","xs$$56","_arg1$$11","x$$32","some","filter","f$$42","xs$$71","acc$$17","x$$37","skip","i$$16","xs$$115","$target$$242","i$$20","xs$$119","$i$$17$$240","$xs$$116$$241","i$$17","xs$$116","skipInner","takeSplitAux","$error$$246","$i$$21$$247","$acc$$25$$248","$xs$$121$$249","error","i$$21","acc$$25","xs$$121","map$$1","x$$21","String","res","that$$1","text","ex","console","o","interval","callback","t","returnVal","Start","dispatch","cmd","sub","el","properties","reactElement","renderElement","withKey","props","propsWithKey","f","initial","render","functionComponent","patternInput","elems","value","delegateArg0","delegateArg1","date","value$$6","cons$$14","ar","arg00","theme","dayWrapper","day","customDayHighlight","nonCurrentMonthDay","highlightNonCurrentMonthDay","highlight","firstHighlight","typography","palette","color","styles","useStyles","startOfWeek","delegateArg2","delegateArg3","start'","end'","endOfWeek","dayIsBetween","isWithinInterval","isFirstDay","isSameDay","isLastDay","wrapperClasses","dayClasses","xs","names","format","isValid","d","PromiseBuilder","generator","p","f1","f2","er","success","fail","isSelected","list","eq","$xs$$76$$162","xs$$76","loop$$1","HttpMethod","BodyContent","ResponseContent","delimiter","input","url","defaultRequest","httpVerb","req","tupledArg","xhr","serializeMethod","chooser$$2","cons$$30","readyState","responseText","responseType","statusCode","status","content","response","splitAt","getAllResponseHeaders","headerLine","x$$5","value$$13","x$$4","forLoopVar","setRequestHeader","mimeType","overrideMimeType","send","initialState","_arg4","_arg3","subscriber","prevProps","prevState","areEqual","equal","view","state","comp","lazyViewWith","nextProps","_nextState","path","collect$$1","segment","query","nextState","routeMode","onChange","ev","urlSegments","window","location","hash","pathname","search","arg10","customNavigationEvent","size","target","targetIndex","fill","max","__","rix'","wix'","ix","source$$7","wix","setState","program","arg","rb","reentered","syncDispatch","nextMsg","lazyView2With","placeholderId","model","document","getElementById","b","buildTheme","Dark","Light","zIndex","mixins","field","def","option","localStorage","getItem","defaultArg","asBool","newB","init","CurrentTab","update","arg0","g","rawPath","parts","arg20","codeProps","sampleName","sampleApp","samples","tuple","code","codeBlockRenderer'","fullSizeCard","githubPath","githubButton","children","githubText","types","renderers","codeBlockRenderer","renderMarkdown","one","start","task","ofSuccess","resolvePath","request","method","centeredSpinner","key","fullKey","loadMarkdown","loadMarkdown'","displayName","memoizeWith","elemType","memoElement","unselectable","elements","xValue","sidebar","menuItem","nestedMenuItem","extendedPath","basePath","nestedMenuList'","examples","currentPath","rest","list2","tryTakePath","num","i$$22","xs$$123","$target$$252","i$$25","xs$$124","contributing","currentTheme","getTheme","root","appBar","title","titleButton","drawer","classNames","drawerPaper","toolbar","element","modifiedProperties","prop","application","eventHandler","app","render'","withReactSynchronousUsing","runWith"],"mappings":"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","file":"0.bundle.56255240aba8ddf0de1c.js","sourcesContent":["// tslint:disable:ban-types\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        }\n    }\n    return target;\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (typeof comparer.Compare === \"function\") {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (typeof x.GetHashCode === \"function\") {\n                return x.GetHashCode();\n            }\n            else if (isArray(x)) {\n                const ar = x;\n                const len = ar.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(ar[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function isArray(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (typeof x.Equals === \"function\") {\n        return x.Equals(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (typeof x.CompareTo === \"function\") {\n        return x.CompareTo(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && compareArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArray(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArray(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return null;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n//# sourceMappingURL=Util.js.map","import { combineHashCodes, compare, compareArrays, equalArrays, equals, identityHash, numberHash, structuralHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n    return;\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map((x) => String(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + String(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map((x) => String(x)).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    const hashes = this.fields.map((x) => structuralHash(x));\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n    return;\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map((k) => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map((k) => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\n// EXCEPTIONS\nexport const Exception = declare(function Exception(msg) {\n    this.stack = Error().stack;\n    this.message = msg;\n});\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter((k) => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map((k) => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map((k) => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n    this.message = \"The match cases were incomplete\";\n}, FSharpException);\nexport const Attribute = declare(function Attribute() { return; });\n//# sourceMappingURL=Types.js.map","import { anonRecord as makeAnonRecord, Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, constructor, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.constructor = constructor;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function type(fullname, generics) {\n    return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n    return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function anonRecord(...fields) {\n    return new TypeInfo(\"\", null, null, () => fields);\n}\nexport function union(fullname, generics, constructor, cases) {\n    const t = new TypeInfo(fullname, generics, constructor, null, () => cases().map((x, i) => typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enumType(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], null, null, null, enumCases);\n}\nexport const obj = new TypeInfo(\"System.Object\");\nexport const unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char = new TypeInfo(\"System.Char\");\nexport const string = new TypeInfo(\"System.String\");\nexport const bool = new TypeInfo(\"System.Boolean\");\nexport const int8 = new TypeInfo(\"System.SByte\");\nexport const uint8 = new TypeInfo(\"System.Byte\");\nexport const int16 = new TypeInfo(\"System.Int16\");\nexport const uint16 = new TypeInfo(\"System.UInt16\");\nexport const int32 = new TypeInfo(\"System.Int32\");\nexport const uint32 = new TypeInfo(\"System.UInt32\");\nexport const float32 = new TypeInfo(\"System.Single\");\nexport const float64 = new TypeInfo(\"System.Double\");\nexport const decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    return isArray(t) ? t.generics[0] : null;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj));\n}\nexport function getEnumUnderlyingType(t) {\n    return t.generics[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t)) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t)) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [null, v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str) {\n    try {\n        const v = parseEnum(t, str);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, null];\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null;\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t)) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t)) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields.map((t, i) => [\"Data\" + i, t]);\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return new uci.declaringType.constructor(uci.tag, uci.name, ...values);\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.constructor != null\n        ? new t.constructor(...values)\n        : makeAnonRecord(fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {}));\n}\nexport function makeTuple(values, t) {\n    return values;\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n//# sourceMappingURL=Reflection.js.map","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    x = (x === undefined) ? null : x;\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\nexport function map(f, arg) {\n    return arg == null ? arg : some(f(value(arg)));\n}\nexport function mapMultiple(predicate, ...args) {\n    return args.every((x) => x != null) ? predicate.apply(null, args) : null;\n}\nexport function bind(f, arg) {\n    return arg == null ? arg : f(value(arg));\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n// CHOICE\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\n// RESULT\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n//# sourceMappingURL=Option.js.map","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n//# sourceMappingURL=big.js.map","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return null;\n        }\n    };\n}\n//# sourceMappingURL=Decimal.js.map","export var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [_all, sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [_all, sign, prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n//# sourceMappingURL=Int32.js.map","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n//# sourceMappingURL=long.js.map","import { isValid } from \"./Int32\";\nimport * as Long from \"./lib/long\";\nexport default Long.Long;\nexport const get_Zero = Long.ZERO;\nexport const get_One = Long.ONE;\nexport const op_Addition = Long.add;\nexport const op_Subtraction = Long.subtract;\nexport const op_Multiply = Long.multiply;\nexport const op_Division = Long.divide;\nexport const op_Modulus = Long.modulo;\nexport const op_UnaryNegation = Long.negate;\nexport const op_LeftShift = Long.shiftLeft;\nexport const op_RightShift = Long.shiftRight;\nexport const op_RightShiftUnsigned = Long.shiftRightUnsigned;\nexport const op_BitwiseAnd = Long.and;\nexport const op_BitwiseOr = Long.or;\nexport const op_ExclusiveOr = Long.xor;\nexport const op_LogicalNot = Long.not;\nexport const op_LessThan = Long.lessThan;\nexport const op_LessThanOrEqual = Long.lessThanOrEqual;\nexport const op_GreaterThan = Long.greaterThan;\nexport const op_GreaterThanOrEqual = Long.greaterThanOrEqual;\nexport const op_Equality = Long.equals;\nexport const op_Inequality = Long.notEquals;\nexport const equals = Long.equals;\nexport const compare = Long.compare;\nexport const fromInt = Long.fromInt;\nexport const fromBits = Long.fromBits;\nexport const fromBytes = Long.fromBytes;\nexport const fromNumber = Long.fromNumber;\nexport const fromString = Long.fromString;\nexport const fromValue = Long.fromValue;\nexport const toInt = Long.toInt;\nexport const toBytes = Long.toBytes;\nexport const toNumber = Long.toNumber;\nexport const toString = Long.toString;\nexport const getLowBits = Long.getLowBits;\nexport const getHighBits = Long.getHighBits;\nexport const getLowBitsUnsigned = Long.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = Long.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && Long.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return Long.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return Long.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, Long.ZERO];\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(Long.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return Long.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = Long.compare(step, unsigned ? Long.UZERO : Long.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = Long.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return null;\n        }\n    };\n}\n//# sourceMappingURL=Long.js.map","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            let cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => void 0);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : null, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => f(x), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => f(x, y), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => f(i, x), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => f(i, x, y), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan((last, next) => [last[1], next], [0, 0], xs));\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            return {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                },\n            };\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return {\n        [Symbol.iterator]: () => {\n            let window = [];\n            const iter = source[Symbol.iterator]();\n            return {\n                next: () => {\n                    let cur;\n                    while (window.length < windowSize) {\n                        if ((cur = iter.next()).done) {\n                            return { done: true };\n                        }\n                        window.push(cur.value);\n                    }\n                    const value = window;\n                    window = window.slice(1);\n                    return { done: false, value };\n                },\n            };\n        },\n    };\n}\n//# sourceMappingURL=Seq.js.map","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    const d = new Date(date.getTime() + date.offset);\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(date.offset);\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, date.offset);\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + date.offset, kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate = null;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v == null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\" ? add(d, -that) : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n//# sourceMappingURL=Date.js.map","export function create(pattern, options) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit !== 0) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n//# sourceMappingURL=RegExp.js.map","import { toString as dateToString } from \"./Date\";\nimport Decimal from \"./Decimal\";\nimport Long, { compare as compareLong, fromBytes as longFromBytes, op_Multiply as multiplyLong, toBytes as longToBytes, toString as longToString } from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumber(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return compareLong(x, -1);\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return multiplyLong(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return longToString(x.unsigned ? x : longFromBytes(longToBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        let sign = \"\";\n        if (isNumber(rep)) {\n            if (format.toLowerCase() !== \"x\") {\n                if (isLessThan(rep, 0)) {\n                    rep = multiply(rep, -1);\n                    sign = \"-\";\n                }\n                else {\n                    if (flags.indexOf(\" \") >= 0) {\n                        sign = \" \";\n                    }\n                    else if (flags.indexOf(\"+\") >= 0) {\n                        sign = \"+\";\n                    }\n                }\n            }\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 6;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default: // AOid\n                    rep = String(rep);\n                    break;\n            }\n        }\n        padLength = parseInt(padLength, 10);\n        if (!isNaN(padLength)) {\n            const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n            const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n            const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n            if (ch === \"0\") {\n                rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n                rep = sign + rep;\n            }\n            else {\n                rep = padLeft(sign + rep, padLength, ch, minusFlag);\n            }\n        }\n        else {\n            rep = sign + rep;\n        }\n        const once = prefix + rep;\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumber(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n    if (count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\n//# sourceMappingURL=String.js.map","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { type } from \"./Reflection.js\";\nimport { equals, getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { toText, printf } from \"./String.js\";\nexport const MutableMap$00602 = declare(function Fable_Collections_MutableMap(pairs, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1[\"entries@23\"] = new Map([]);\n  $this$$1[\"init@20-1\"] = 1;\n  iterate(function (pair) {\n    MutableMap$00602$$Add$$5BDDA1(this$.contents, pair[0], pair[1]);\n  }, pairs);\n});\nexport function MutableMap$00602$reflection($gen$$4, $gen$$5) {\n  return type(\"Fable.Collections.MutableMap`2\", [$gen$$4, $gen$$5]);\n}\nexport function MutableMap$00602$$$$002Ector$$6623D9B3(pairs, comparer) {\n  return this instanceof MutableMap$00602 ? MutableMap$00602.call(this, pairs, comparer) : new MutableMap$00602(pairs, comparer);\n}\n\nfunction MutableMap$00602$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1[\"entries@23\"], h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (pair$$1) {\n      return this$$$1.comparer.Equals(k, pair$$1[0]);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nexport function MutableMap$00602$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableMap$00602$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$10;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$10 = 0;\n    } else {\n      $target$$10 = 1;\n    }\n  } else {\n    $target$$10 = 1;\n  }\n\n  switch ($target$$10) {\n    case 0:\n      {\n        return getItemFromDict(this$$$2[\"entries@23\"], matchValue$$1[1])[matchValue$$1[2]];\n      }\n\n    case 1:\n      {\n        return null;\n      }\n  }\n}\nexport function MutableMap$00602$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableMap$00602$$Clear(this$$$4) {\n  this$$$4[\"entries@23\"].clear();\n}\nexport function MutableMap$00602$$get_Count(this$$$5) {\n  const source = this$$$5[\"entries@23\"].values();\n  return sumBy(function projection(pairs$$2) {\n    return pairs$$2.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableMap$00602$$get_Item$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableMap$00602$$TryFind$$2B595(this$$$6, k$$2);\n\n  if (matchValue$$2 != null) {\n    const pair$$2 = matchValue$$2;\n    return pair$$2[1];\n  } else {\n    throw new Error(\"The item was not found in collection\");\n  }\n}\nexport function MutableMap$00602$$set_Item$$5BDDA1(this$$$7, k$$3, v) {\n  const matchValue$$3 = MutableMap$00602$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$20;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 1;\n    }\n  } else {\n    $target$$20 = 1;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        getItemFromDict(this$$$7[\"entries@23\"], matchValue$$3[1])[matchValue$$3[2]] = [k$$3, v];\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$3[0]) {\n          const value = getItemFromDict(this$$$7[\"entries@23\"], matchValue$$3[1]).push([k$$3, v]);\n          null, null;\n        } else {\n          this$$$7[\"entries@23\"].set(matchValue$$3[1], [[k$$3, v]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$Add$$5BDDA1(this$$$8, k$$4, v$$1) {\n  const matchValue$$4 = MutableMap$00602$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$24;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$24 = 0;\n    } else {\n      $target$$24 = 1;\n    }\n  } else {\n    $target$$24 = 1;\n  }\n\n  switch ($target$$24) {\n    case 0:\n      {\n        let msg;\n        const clo1 = toText(printf(\"An item with the same key has already been added. Key: %A\"));\n        msg = clo1(k$$4);\n        throw new Error(msg);\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$4[0]) {\n          const value$$1 = getItemFromDict(this$$$8[\"entries@23\"], matchValue$$4[1]).push([k$$4, v$$1]);\n          null, null;\n        } else {\n          this$$$8[\"entries@23\"].set(matchValue$$4[1], [[k$$4, v$$1]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$ContainsKey$$2B595(this$$$9, k$$5) {\n  const matchValue$$5 = MutableMap$00602$$TryFindIndex$$2B595(this$$$9, k$$5);\n  var $target$$27;\n\n  if (matchValue$$5[0]) {\n    if (matchValue$$5[2] > -1) {\n      $target$$27 = 0;\n    } else {\n      $target$$27 = 1;\n    }\n  } else {\n    $target$$27 = 1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableMap$00602$$Remove$$2B595(this$$$10, k$$6) {\n  const matchValue$$6 = MutableMap$00602$$TryFindIndex$$2B595(this$$$10, k$$6);\n  var $target$$30;\n\n  if (matchValue$$6[0]) {\n    if (matchValue$$6[2] > -1) {\n      $target$$30 = 0;\n    } else {\n      $target$$30 = 1;\n    }\n  } else {\n    $target$$30 = 1;\n  }\n\n  switch ($target$$30) {\n    case 0:\n      {\n        getItemFromDict(this$$$10[\"entries@23\"], matchValue$$6[1]).splice(matchValue$$6[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableMap$00602.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$11 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (pairs$$3) {\n      return map(function (pair$$3) {\n        return pair$$3;\n      }, pairs$$3);\n    }, this$$$11[\"entries@23\"].values());\n  }), getEnumerator(elems)));\n};\n\nMutableMap$00602.prototype.Add = function (item) {\n  const this$$$12 = this;\n  MutableMap$00602$$Add$$5BDDA1(this$$$12, item[0], item[1]);\n};\n\nMutableMap$00602.prototype.Clear = function () {\n  const this$$$13 = this;\n  MutableMap$00602$$Clear(this$$$13);\n};\n\nMutableMap$00602.prototype.Contains = function (item$$1) {\n  var p;\n  const this$$$14 = this;\n  const matchValue$$7 = MutableMap$00602$$TryFind$$2B595(this$$$14, item$$1[0]);\n  var $target$$31;\n\n  if (matchValue$$7 != null) {\n    if (p = matchValue$$7, equals(p[1], item$$1[1])) {\n      $target$$31 = 0;\n    } else {\n      $target$$31 = 1;\n    }\n  } else {\n    $target$$31 = 1;\n  }\n\n  switch ($target$$31) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n};\n\nMutableMap$00602.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$15 = this;\n  iterateIndexed(function action(i$$10, e) {\n    array[arrayIndex + i$$10] = e;\n  }, this$$$15);\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$16 = this;\n    return MutableMap$00602$$get_Count(this$$$16) | 0;\n  }\n});\nObject.defineProperty(MutableMap$00602.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableMap$00602.prototype.Remove = function (item$$2) {\n  const this$$$18 = this;\n  const matchValue$$8 = MutableMap$00602$$TryFind$$2B595(this$$$18, item$$2[0]);\n\n  if (matchValue$$8 != null) {\n    const pair$$4 = matchValue$$8;\n\n    if (equals(pair$$4[1], item$$2[1])) {\n      const value$$2 = MutableMap$00602$$Remove$$2B595(this$$$18, item$$2[0]);\n      value$$2, null;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$19 = this;\n    return MutableMap$00602$$get_Count(this$$$19) | 0;\n  }\n});\n\nMutableMap$00602.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableMap$00602$$Clear(this$$$20);\n};\n\nMutableMap$00602.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableMap$00602$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableMap$00602.prototype.entries = function () {\n  const this$$$22 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$22);\n};\n\nMutableMap$00602.prototype.get = function (k$$8) {\n  const this$$$23 = this;\n  return MutableMap$00602$$get_Item$$2B595(this$$$23, k$$8);\n};\n\nMutableMap$00602.prototype.has = function (k$$9) {\n  const this$$$24 = this;\n  return MutableMap$00602$$ContainsKey$$2B595(this$$$24, k$$9);\n};\n\nMutableMap$00602.prototype.keys = function () {\n  const this$$$25 = this;\n  return map(function mapping$$1(pair$$5) {\n    return pair$$5[0];\n  }, this$$$25);\n};\n\nMutableMap$00602.prototype.set = function (k$$10, v$$2) {\n  const this$$$26 = this;\n  MutableMap$00602$$set_Item$$5BDDA1(this$$$26, k$$10, v$$2);\n  return this$$$26;\n};\n\nMutableMap$00602.prototype.values = function () {\n  const this$$$27 = this;\n  return map(function mapping$$2(pair$$6) {\n    return pair$$6[1];\n  }, this$$$27);\n};","import { Record, List, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union, int32 } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$2, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, toText, printf } from \"./String.js\";\nimport { MutableMap$00602$$$$002Ector$$6623D9B3 as MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3 } from \"./MutableMap\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [$gen$$3, $gen$$4]], [\"MapNode\", [$gen$$3, $gen$$4, MapTree$00602$reflection($gen$$3, $gen$$4), MapTree$00602$reflection($gen$$3, $gen$$4), int32]]]);\n}\nexport function MapTreeModule$$$sizeAux($acc$$5, $m$$6) {\n  MapTreeModule$$$sizeAux: while (true) {\n    const acc = $acc$$5,\n          m = $m$$6;\n\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          $acc$$5 = MapTreeModule$$$sizeAux(acc + 1, m.fields[2]);\n          $m$$6 = m.fields[3];\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        return _arg1.fields[4] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  var $target$$14;\n\n  if (l$$1.tag === 0) {\n    if (r$$1.tag === 0) {\n      $target$$14 = 0;\n    } else {\n      $target$$14 = 1;\n    }\n  } else {\n    $target$$14 = 1;\n  }\n\n  switch ($target$$14) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      if (MapTreeModule$$$height(t2.fields[2]) > t1h + 1) {\n        if (t2.fields[2].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2].fields[2]), t2.fields[2].fields[0], t2.fields[2].fields[1], MapTreeModule$$$mk(t2.fields[2].fields[3], t2.fields[0], t2.fields[1], t2.fields[3]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2]), t2.fields[0], t2.fields[1], t2.fields[3]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      if (MapTreeModule$$$height(t1.fields[3]) > t2h + 1) {\n        if (t1.fields[3].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], t1.fields[3].fields[2]), t1.fields[3].fields[0], t1.fields[3].fields[1], MapTreeModule$$$mk(t1.fields[3].fields[3], k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], MapTreeModule$$$mk(t1.fields[3], k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const c = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[2]), m$$3.fields[0], m$$3.fields[1], m$$3.fields[3]);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3.fields[2], m$$3.fields[3], m$$3.fields[4]);\n        } else {\n          return MapTreeModule$$$rebalance(m$$3.fields[2], m$$3.fields[0], m$$3.fields[1], MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find($comparer$$1$$23, $k$$3$$24, $m$$4$$25) {\n  MapTreeModule$$$find: while (true) {\n    const comparer$$1 = $comparer$$1$$23,\n          k$$3 = $k$$3$$24,\n          m$$4 = $m$$4$$25;\n\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const c$$2 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$2 === 0) {\n            return m$$4.fields[1];\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const c$$3 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$3 < 0) {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[2];\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return m$$4.fields[1];\n          } else {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[3];\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind($comparer$$2$$26, $k$$4$$27, $m$$5$$28) {\n  MapTreeModule$$$tryFind: while (true) {\n    const comparer$$2 = $comparer$$2$$26,\n          k$$4 = $k$$4$$27,\n          m$$5 = $m$$5$$28;\n\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const c$$4 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$4 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          const c$$5 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$5 < 0) {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[2];\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[3];\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($comparer$$4$$35, $f$$1$$36, $s$$37, $acc_0$$38, $acc_1$$39) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          f$$1 = $f$$1$$36,\n          s = $s$$37,\n          acc_0 = $acc_0$$38,\n          acc_1 = $acc_1$$39;\n\n    switch (s.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc_0, acc_1);\n        }\n\n      case 2:\n        {\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, s.fields[3], acc_0, acc_1);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc$$2[0], acc$$2[1]);\n          $comparer$$4$$35 = comparer$$4;\n          $f$$1$$36 = f$$1;\n          $s$$37 = s.fields[2];\n          $acc_0$$38 = acc$$3[0];\n          $acc_1$$39 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return [acc_0, acc_1];\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($comparer$$7$$48, $f$$4$$49, $s$$2$$50, $acc$$5$$51) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$48,\n          f$$4 = $f$$4$$49,\n          s$$2 = $s$$2$$50,\n          acc$$5 = $acc$$5$$51;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$5);\n        }\n\n      case 2:\n        {\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, s$$2.fields[2], acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$6);\n          $comparer$$7$$48 = comparer$$7;\n          $f$$4$$49 = f$$4;\n          $s$$2$$50 = s$$2.fields[3];\n          $acc$$5$$51 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        return [m$$6.fields[0], m$$6.fields[1], new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        if (m$$6.fields[2].tag === 0) {\n          return [m$$6.fields[0], m$$6.fields[1], m$$6.fields[3]];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(m$$6.fields[2]);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], m$$6.fields[0], m$$6.fields[1], m$$6.fields[3])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const c$$6 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const c$$7 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[2]), m$$7.fields[0], m$$7.fields[1], m$$7.fields[3]);\n        } else if (c$$7 === 0) {\n          if (m$$7.fields[2].tag === 0) {\n            return m$$7.fields[3];\n          } else if (m$$7.fields[3].tag === 0) {\n            return m$$7.fields[2];\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(m$$7.fields[3]);\n            return MapTreeModule$$$mk(m$$7.fields[2], patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(m$$7.fields[2], m$$7.fields[0], m$$7.fields[1], MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem($comparer$$10$$59, $k$$12$$60, $m$$8$$61) {\n  MapTreeModule$$$mem: while (true) {\n    const comparer$$10 = $comparer$$10$$59,\n          k$$12 = $k$$12$$60,\n          m$$8 = $m$$8$$61;\n\n    switch (m$$8.tag) {\n      case 1:\n        {\n          return comparer$$10.Compare(k$$12, m$$8.fields[0]) === 0;\n        }\n\n      case 2:\n        {\n          const c$$8 = comparer$$10.Compare(k$$12, m$$8.fields[0]) | 0;\n\n          if (c$$8 < 0) {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[2];\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[3];\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($f$$6$$62, $m$$9$$63) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $f$$6$$62,\n          m$$9 = $m$$9$$63;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          break;\n        }\n\n      case 2:\n        {\n          MapTreeModule$$$iter(f$$6, m$$9.fields[2]);\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          $f$$6$$62 = f$$6;\n          $m$$9$$63 = m$$9.fields[3];\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($f$$7$$64, $m$$10$$65) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $f$$7$$64,\n          m$$10 = $m$$10$$65;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          return f$$7(m$$10.fields[0], m$$10.fields[1]);\n        }\n\n      case 2:\n        {\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, m$$10.fields[2]);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(m$$10.fields[0], m$$10.fields[1]);\n\n            if (matchValue$$3 == null) {\n              $f$$7$$64 = f$$7;\n              $m$$10$$65 = m$$10.fields[3];\n              continue MapTreeModule$$$tryPick;\n            } else {\n              return matchValue$$3;\n            }\n          } else {\n            return matchValue$$2;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($f$$8$$66, $m$$11$$67) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $f$$8$$66,\n          m$$11 = $m$$11$$67;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          return f$$8(m$$11.fields[0], m$$11.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$exists(f$$8, m$$11.fields[2]) ? true : f$$8(m$$11.fields[0], m$$11.fields[1])) {\n            return true;\n          } else {\n            $f$$8$$66 = f$$8;\n            $m$$11$$67 = m$$11.fields[3];\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($f$$9$$68, $m$$12$$69) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $f$$9$$68,\n          m$$12 = $m$$12$$69;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          return f$$9(m$$12.fields[0], m$$12.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$forall(f$$9, m$$12.fields[2]) ? f$$9(m$$12.fields[0], m$$12.fields[1]) : false) {\n            $f$$9$$68 = f$$9;\n            $m$$12$$69 = m$$12.fields[3];\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$13.fields[0], f$$10(m$$13.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2 = MapTreeModule$$$map(f$$10, m$$13.fields[2]);\n        const v2$$16 = f$$10(m$$13.fields[1]);\n        const r2 = MapTreeModule$$$map(f$$10, m$$13.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$13.fields[0], v2$$16, l2, r2, m$$13.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$14.fields[0], f$$11(m$$14.fields[0], m$$14.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[2]);\n        const v2$$17 = f$$11(m$$14.fields[0], m$$14.fields[1]);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$14.fields[0], v2$$17, l2$$1, r2$$1, m$$14.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($f$$12$$74, $m$$15$$75, $x$$1$$76) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $f$$12$$74,\n          m$$15 = $m$$15$$75,\n          x$$1 = $x$$1$$76;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          return f$$12(m$$15.fields[0], m$$15.fields[1], x$$1);\n        }\n\n      case 2:\n        {\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, m$$15.fields[3], x$$1);\n          const x$$3 = f$$12(m$$15.fields[0], m$$15.fields[1], x$$2);\n          $f$$12$$74 = f$$12;\n          $m$$15$$75 = m$$15.fields[2];\n          $x$$1$$76 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($f$$13$$77, $x$$4$$78, $m$$16$$79) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $f$$13$$77,\n          x$$4 = $x$$4$$78,\n          m$$16 = $m$$16$$79;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          return f$$13(x$$4, m$$16.fields[0], m$$16.fields[1]);\n        }\n\n      case 2:\n        {\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, m$$16.fields[2]);\n          const x$$6 = f$$13(x$$5, m$$16.fields[0], m$$16.fields[1]);\n          $f$$13$$77 = f$$13;\n          $x$$4$$78 = x$$6;\n          $m$$16$$79 = m$$16.fields[3];\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const cLoKey = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const cLoKey$$1 = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[2], x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[3], x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop($m$$19$$92, $acc$$8$$93) {\n  MapTreeModule$$$loop: while (true) {\n    const m$$19 = $m$$19$$92,\n          acc$$8 = $acc$$8$$93;\n\n    switch (m$$19.tag) {\n      case 1:\n        {\n          return new List([m$$19.fields[0], m$$19.fields[1]], acc$$8);\n        }\n\n      case 2:\n        {\n          $m$$19$$92 = m$$19.fields[2];\n          $acc$$8$$93 = new List([m$$19.fields[0], m$$19.fields[1]], MapTreeModule$$$loop(m$$19.fields[3], acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator($comparer$$14$$97, $acc$$10$$98, $e$$99) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$14 = $comparer$$14$$97,\n          acc$$10 = $acc$$10$$98,\n          e = $e$$99;\n\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      $comparer$$14$$97 = comparer$$14;\n      $acc$$10$$98 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      $e$$99 = e;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$109, $gen$$110) {\n  return record(\"Map.MapTreeModule.MapIterator`2\", [$gen$$109, $gen$$110], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list(MapTree$00602$reflection($gen$$109, $gen$$110))], [\"started\", bool]]);\n}\nexport function MapTreeModule$$$collapseLHS($stack$$111) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$111;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        $stack$$111 = new List(stack.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), new List(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        $stack$$111 = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$115, $gen$$116) {\n  return type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$115, $gen$$116]);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$reflection($gen$$120, $gen$$121) {\n  return type(\"Map.FSharpMap\", [$gen$$120, $gen$$121]);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"map [\" + (strings = (map$$2(function mapping(kv) {\n    const clo1 = toText(printf(\"(%A, %A)\"));\n    const clo2 = clo1(kv[0]);\n    return clo2(kv[1]);\n  }, this$)), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const patternInput$$5 = e$$1.Current;\n    const activePatternResult3692 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3692[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3692[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(obj));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    }\n  }\n};\n\nObject.defineProperty(FSharpMap.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$3 = this;\n    return FSharpMap$$get_Count(this$$$3) | 0;\n  }\n});\n\nFSharpMap.prototype.clear = function () {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.delete = function (_arg1$$1) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.entries = function () {\n  const this$$$4 = this;\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$4));\n};\n\nFSharpMap.prototype.get = function (k$$34) {\n  const this$$$5 = this;\n  return FSharpMap$$get_Item$$2B595(this$$$5, k$$34);\n};\n\nFSharpMap.prototype.has = function (k$$35) {\n  const this$$$6 = this;\n  return FSharpMap$$ContainsKey$$2B595(this$$$6, k$$35);\n};\n\nFSharpMap.prototype.keys = function () {\n  const this$$$7 = this;\n  const source$$1 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$7));\n  return map$$2(function mapping$$1(kv$$1) {\n    return kv$$1[0];\n  }, source$$1);\n};\n\nFSharpMap.prototype.set = function (k$$36, v$$26) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.values = function () {\n  const this$$$8 = this;\n  const source$$2 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$8));\n  return map$$2(function mapping$$2(kv$$2) {\n    return kv$$2[1];\n  }, source$$2);\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$37, v$$27, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$37, v$$27);\n}\nexport function find(k$$38, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$38);\n}\nexport function tryFind(k$$39, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$39);\n}\nexport function remove(k$$40, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$40);\n}\nexport function containsKey(k$$41, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$41);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  let _arg1$$2;\n\n  const m$$42 = FSharpMap$$get_Tree(m$$41);\n  _arg1$$2 = MapTreeModule$$$tryPick(function f$$39(k$$42, v$$28) {\n    if (f$$38(k$$42, v$$28)) {\n      return some(k$$42);\n    } else {\n      return null;\n    }\n  }, m$$42);\n\n  if (_arg1$$2 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$43 = value$$3(_arg1$$2);\n    return k$$43;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  const m$$44 = FSharpMap$$get_Tree(m$$43);\n  return MapTreeModule$$$tryPick(function f$$41(k$$44, v$$29) {\n    if (f$$40(k$$44, v$$29)) {\n      return some(k$$44);\n    } else {\n      return null;\n    }\n  }, m$$44);\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  let res$$6;\n  const len = FSharpMap$$get_Count(m$$46) | 0;\n  res$$6 = new Array(len);\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$45) {\n      return MapTreeModule$$$find(comparer$$22, k$$45, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      const source$$3 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$3(kv$$3) {\n        return kv$$3[0];\n      }, source$$3);\n    },\n\n    set(k$$46, v$$30) {\n      const this$$$9 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$46, v$$30, tree$$1);\n      return this$$$9;\n    },\n\n    values() {\n      const source$$4 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$4(kv$$4) {\n        return kv$$4[1];\n      }, source$$4);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$5, comparer$$23) {\n  const map$$1 = MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3(source$$5, comparer$$23);\n  return map$$1;\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$31) {\n    const key = projection(v$$31);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$31);\n    } else {\n      const value = dict.set(key, [v$$31]);\n      value, null;\n    }\n  }, xs);\n  return map$$2(function mapping$$5(kv$$5) {\n    return [kv$$5[0], kv$$5[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    const value$$2 = dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n    value$$2, null;\n  }, xs$$1);\n  return map$$2(function mapping$$6(kv$$6) {\n    return [kv$$6[0], kv$$6[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { some } from \"./Option.js\";\nexport const MutableSet$00601 = declare(function Fable_Collections_MutableSet(items, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1[\"entries@24\"] = new Map([]);\n  $this$$1[\"init@21-2\"] = 1;\n  iterate(function (item) {\n    const value = MutableSet$00601$$Add$$2B595(this$.contents, item);\n    value, null;\n  }, items);\n});\nexport function MutableSet$00601$reflection($gen$$4) {\n  return type(\"Fable.Collections.MutableSet`1\", [$gen$$4]);\n}\nexport function MutableSet$00601$$$$002Ector$$Z6150332D(items, comparer) {\n  return this instanceof MutableSet$00601 ? MutableSet$00601.call(this, items, comparer) : new MutableSet$00601(items, comparer);\n}\n\nfunction MutableSet$00601$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1[\"entries@24\"], h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v) {\n      return this$$$1.comparer.Equals(k, v);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nfunction MutableSet$00601$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableSet$00601$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$9;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 1;\n    }\n  } else {\n    $target$$9 = 1;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return some(getItemFromDict(this$$$2[\"entries@24\"], matchValue$$1[1])[matchValue$$1[2]]);\n      }\n\n    case 1:\n      {\n        return null;\n      }\n  }\n}\n\nexport function MutableSet$00601$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableSet$00601$$Clear(this$$$4) {\n  this$$$4[\"entries@24\"].clear();\n}\nexport function MutableSet$00601$$get_Count(this$$$5) {\n  const source = this$$$5[\"entries@24\"].values();\n  return sumBy(function projection(pairs) {\n    return pairs.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableSet$00601$$Add$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableSet$00601$$TryFindIndex$$2B595(this$$$6, k$$2);\n  var $target$$16;\n\n  if (matchValue$$2[0]) {\n    if (matchValue$$2[2] > -1) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return false;\n      }\n\n    case 1:\n      {\n        if (matchValue$$2[0]) {\n          const value$$1 = getItemFromDict(this$$$6[\"entries@24\"], matchValue$$2[1]).push(k$$2);\n          null, null;\n          return true;\n        } else {\n          this$$$6[\"entries@24\"].set(matchValue$$2[1], [k$$2]);\n          return true;\n        }\n      }\n  }\n}\nexport function MutableSet$00601$$Contains$$2B595(this$$$7, k$$3) {\n  const matchValue$$3 = MutableSet$00601$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$19;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$19 = 0;\n    } else {\n      $target$$19 = 1;\n    }\n  } else {\n    $target$$19 = 1;\n  }\n\n  switch ($target$$19) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableSet$00601$$Remove$$2B595(this$$$8, k$$4) {\n  const matchValue$$4 = MutableSet$00601$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$22;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$22 = 0;\n    } else {\n      $target$$22 = 1;\n    }\n  } else {\n    $target$$22 = 1;\n  }\n\n  switch ($target$$22) {\n    case 0:\n      {\n        getItemFromDict(this$$$8[\"entries@24\"], matchValue$$4[1]).splice(matchValue$$4[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableSet$00601.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$9 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (values$$1) {\n      return map(function (value$$2) {\n        return value$$2;\n      }, values$$1);\n    }, this$$$9[\"entries@24\"].values());\n  }), getEnumerator(elems)));\n};\n\nMutableSet$00601.prototype.Add = function (item$$1) {\n  const this$$$10 = this;\n  const value$$3 = MutableSet$00601$$Add$$2B595(this$$$10, item$$1);\n  value$$3, null;\n};\n\nMutableSet$00601.prototype.Clear = function () {\n  const this$$$11 = this;\n  MutableSet$00601$$Clear(this$$$11);\n};\n\nMutableSet$00601.prototype.Contains = function (item$$2) {\n  const this$$$12 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$12, item$$2);\n};\n\nMutableSet$00601.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$13 = this;\n  iterateIndexed(function action(i$$8, e) {\n    array[arrayIndex + i$$8] = e;\n  }, this$$$13);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$14 = this;\n    return MutableSet$00601$$get_Count(this$$$14) | 0;\n  }\n});\nObject.defineProperty(MutableSet$00601.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableSet$00601.prototype.Remove = function (item$$3) {\n  const this$$$16 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$16, item$$3);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$17 = this;\n    return MutableSet$00601$$get_Count(this$$$17) | 0;\n  }\n});\n\nMutableSet$00601.prototype.add = function (k$$5) {\n  const this$$$18 = this;\n  const value$$4 = MutableSet$00601$$Add$$2B595(this$$$18, k$$5);\n  value$$4, null;\n  return this$$$18;\n};\n\nMutableSet$00601.prototype.add_ = function (k$$6) {\n  const this$$$19 = this;\n  return MutableSet$00601$$Add$$2B595(this$$$19, k$$6);\n};\n\nMutableSet$00601.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableSet$00601$$Clear(this$$$20);\n};\n\nMutableSet$00601.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableSet$00601.prototype.has = function (k$$8) {\n  const this$$$22 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$22, k$$8);\n};\n\nMutableSet$00601.prototype.keys = function () {\n  const this$$$23 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$23);\n};\n\nMutableSet$00601.prototype.values = function () {\n  const this$$$24 = this;\n  return map(function mapping$$1(x$$1) {\n    return x$$1;\n  }, this$$$24);\n};\n\nMutableSet$00601.prototype.entries = function () {\n  const this$$$25 = this;\n  return map(function mapping$$2(v$$1) {\n    return [v$$1, v$$1];\n  }, this$$$25);\n};","import { List, Record, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union as union$$1, int32 } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, delay, collect, singleton as singleton$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { MutableSet$00601$$Add$$2B595 as MutableSet$002400601$0024$0024Add$0024$00242B595, MutableSet$00601$$$$002Ector$$Z6150332D as MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D } from \"./MutableSet\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union$$1(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [$gen$$3, SetTree$00601$reflection($gen$$3), SetTree$00601$reflection($gen$$3), int32]], [\"SetOne\", [$gen$$3]]]);\n}\nexport function SetTreeModule$$$countAux($s$$4, $acc$$5) {\n  SetTreeModule$$$countAux: while (true) {\n    const s = $s$$4,\n          acc = $acc$$5;\n\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          $s$$4 = s.fields[1];\n          $acc$$5 = SetTreeModule$$$countAux(s.fields[2], acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        return t.fields[3] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  var $target$$16;\n\n  if (l$$2.tag === 0) {\n    if (r$$2.tag === 0) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      if (SetTreeModule$$$height(t2.fields[1]) > t1h + 1) {\n        if (t2.fields[1].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1].fields[1]), t2.fields[1].fields[0], SetTreeModule$$$mk(t2.fields[1].fields[2], t2.fields[0], t2.fields[2]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1]), t2.fields[0], t2.fields[2]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      if (SetTreeModule$$$height(t1.fields[2]) > t2h + 1) {\n        if (t1.fields[2].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1.fields[1], t1.fields[0], t1.fields[2].fields[1]), t1.fields[2].fields[0], SetTreeModule$$$mk(t1.fields[2].fields[2], k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1.fields[1], t1.fields[0], SetTreeModule$$$mk(t1.fields[2], k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const c = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, t$$1.fields[1]), t$$1.fields[0], t$$1.fields[2]);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(t$$1.fields[1], t$$1.fields[0], SetTreeModule$$$add(comparer, k$$2, t$$1.fields[2]));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  var $target$$27, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (t1$$1.tag === 2) {\n    if (t2$$1.tag === 0) {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    } else if (t2$$1.tag === 2) {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    } else {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    }\n  } else if (t1$$1.tag === 1) {\n    if (t2$$1.tag === 2) {\n      $target$$27 = 3;\n      k2$$2 = t2$$1.fields[0];\n      t1$$3 = t1$$1;\n    } else if (t2$$1.tag === 1) {\n      $target$$27 = 4;\n      h1 = t1$$1.fields[3];\n      h2 = t2$$1.fields[3];\n      k1$$1 = t1$$1.fields[0];\n      k2$$3 = t2$$1.fields[0];\n      t11 = t1$$1.fields[1];\n      t12 = t1$$1.fields[2];\n      t21 = t2$$1.fields[1];\n      t22 = t2$$1.fields[2];\n    } else {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    }\n  } else {\n    $target$$27 = 0;\n    t2$$2 = t2$$1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const c$$3 = comparer$$2.Compare(t$$2.fields[0], pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const c$$2 = comparer$$2.Compare(pivot, t$$2.fields[0]) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[1]);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], t$$2.fields[0], t$$2.fields[2])];\n        } else if (c$$2 === 0) {\n          return [t$$2.fields[1], true, t$$2.fields[2]];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[2]);\n          return [SetTreeModule$$$balance(comparer$$2, t$$2.fields[1], t$$2.fields[0], patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        return [t$$3.fields[0], new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        if (t$$3.fields[1].tag === 0) {\n          return [t$$3.fields[0], t$$3.fields[2]];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(t$$3.fields[1]);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], t$$3.fields[0], t$$3.fields[2])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const c$$4 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const c$$5 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[1]), t$$4.fields[0], t$$4.fields[2]);\n        } else if (c$$5 === 0) {\n          if (t$$4.fields[1].tag === 0) {\n            return t$$4.fields[2];\n          } else if (t$$4.fields[2].tag === 0) {\n            return t$$4.fields[1];\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(t$$4.fields[2]);\n            return SetTreeModule$$$mk(t$$4.fields[1], patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(t$$4.fields[1], t$$4.fields[0], SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[2]));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem($comparer$$4$$35, $k$$5$$36, $t$$5$$37) {\n  SetTreeModule$$$mem: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          k$$5 = $k$$5$$36,\n          t$$5 = $t$$5$$37;\n\n    switch (t$$5.tag) {\n      case 2:\n        {\n          return comparer$$4.Compare(k$$5, t$$5.fields[0]) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const c$$6 = comparer$$4.Compare(k$$5, t$$5.fields[0]) | 0;\n\n          if (c$$6 < 0) {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[1];\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[2];\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($f$$38, $t$$6$$39) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $f$$38,\n          t$$6 = $t$$6$$39;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          f(t$$6.fields[0]);\n          break;\n        }\n\n      case 0:\n        {\n          break;\n        }\n\n      default:\n        {\n          SetTreeModule$$$iter(f, t$$6.fields[1]);\n          f(t$$6.fields[0]);\n          $f$$38 = f;\n          $t$$6$$39 = t$$6.fields[2];\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($f$$1$$40, $m$$1$$41, $x$$1$$42) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $f$$1$$40,\n          m$$1 = $m$$1$$41,\n          x$$1 = $x$$1$$42;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          return f$$1(m$$1.fields[0], x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          $f$$1$$40 = f$$1;\n          $m$$1$$41 = m$$1.fields[1];\n          $x$$1$$42 = f$$1(m$$1.fields[0], SetTreeModule$$$foldBack(f$$1, m$$1.fields[2], x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($f$$2$$43, $x$$2$$44, $m$$2$$45) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $f$$2$$43,\n          x$$2 = $x$$2$$44,\n          m$$2 = $m$$2$$45;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          return f$$2(x$$2, m$$2.fields[0]);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, m$$2.fields[1]);\n          const x$$4 = f$$2(x$$3, m$$2.fields[0]);\n          $f$$2$$43 = f$$2;\n          $x$$2$$44 = x$$4;\n          $m$$2$$45 = m$$2.fields[2];\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($f$$3$$46, $m$$3$$47) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $f$$3$$46,\n          m$$3 = $m$$3$$47;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          return f$$3(m$$3.fields[0]);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          if (f$$3(m$$3.fields[0]) ? SetTreeModule$$$forall(f$$3, m$$3.fields[1]) : false) {\n            $f$$3$$46 = f$$3;\n            $m$$3$$47 = m$$3.fields[2];\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($f$$4$$48, $m$$4$$49) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $f$$4$$48,\n          m$$4 = $m$$4$$49;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          return f$$4(m$$4.fields[0]);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          if (f$$4(m$$4.fields[0]) ? true : SetTreeModule$$$exists(f$$4, m$$4.fields[1])) {\n            return true;\n          } else {\n            $f$$4$$48 = f$$4;\n            $m$$4$$49 = m$$4.fields[2];\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($comparer$$7$$57, $f$$5$$58, $s$$2$$59, $acc$$1$$60) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$57,\n          f$$5 = $f$$5$$58,\n          s$$2 = $s$$2$$59,\n          acc$$1 = $acc$$1$$60;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          if (f$$5(s$$2.fields[0])) {\n            return SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const acc$$2 = f$$5(s$$2.fields[0]) ? SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1) : acc$$1;\n          $comparer$$7$$57 = comparer$$7;\n          $f$$5$$58 = f$$5;\n          $s$$2$$59 = s$$2.fields[1];\n          $acc$$1$$60 = SetTreeModule$$$filterAux(comparer$$7, f$$5, s$$2.fields[2], acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux($comparer$$9$$64, $m$$6$$65, $acc$$3$$66) {\n  SetTreeModule$$$diffAux: while (true) {\n    const comparer$$9 = $comparer$$9$$64,\n          m$$6 = $m$$6$$65,\n          acc$$3 = $acc$$3$$66;\n\n    switch (m$$6.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          $comparer$$9$$64 = comparer$$9;\n          $m$$6$$65 = m$$6.fields[1];\n          $acc$$3$$66 = SetTreeModule$$$diffAux(comparer$$9, m$$6.fields[2], SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  var $target$$73, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (t1$$4.tag === 0) {\n    $target$$73 = 1;\n    t$$7 = t2$$4;\n  } else if (t1$$4.tag === 2) {\n    if (t2$$4.tag === 0) {\n      $target$$73 = 2;\n      t$$8 = t1$$4;\n    } else if (t2$$4.tag === 2) {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    } else {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    }\n  } else if (t2$$4.tag === 0) {\n    $target$$73 = 2;\n    t$$8 = t1$$4;\n  } else if (t2$$4.tag === 2) {\n    $target$$73 = 4;\n    k2$$17 = t2$$4.fields[0];\n    t1$$5 = t1$$4;\n  } else {\n    $target$$73 = 0;\n    h1$$1 = t1$$4.fields[3];\n    h2$$1 = t2$$4.fields[3];\n    k1$$4 = t1$$4.fields[0];\n    k2$$16 = t2$$4.fields[0];\n    t11$$2 = t1$$4.fields[1];\n    t12$$2 = t1$$4.fields[2];\n    t21$$1 = t2$$4.fields[1];\n    t22$$1 = t2$$4.fields[2];\n  }\n\n  switch ($target$$73) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux($comparer$$12$$74, $b$$3$$75, $m$$7$$76, $acc$$4$$77) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    const comparer$$12 = $comparer$$12$$74,\n          b$$3 = $b$$3$$75,\n          m$$7 = $m$$7$$76,\n          acc$$4 = $acc$$4$$77;\n\n    switch (m$$7.tag) {\n      case 2:\n        {\n          if (SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7.fields[2], acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3) ? SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$5) : acc$$5;\n          $comparer$$12$$74 = comparer$$12;\n          $b$$3$$75 = b$$3;\n          $m$$7$$76 = m$$7.fields[1];\n          $acc$$4$$77 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($comparer$$15$$86, $f$$8$$87, $s$$4$$88, $acc_0$$89, $acc_1$$90) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $comparer$$15$$86,\n          f$$8 = $f$$8$$87,\n          s$$4 = $s$$4$$88,\n          acc_0 = $acc_0$$89,\n          acc_1 = $acc_1$$90;\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc_0, acc_1);\n        }\n\n      case 0:\n        {\n          return [acc_0, acc_1];\n        }\n\n      default:\n        {\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, s$$4.fields[2], acc_0, acc_1);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc$$8[0], acc$$8[1]);\n          $comparer$$15$$86 = comparer$$15;\n          $f$$8$$87 = f$$8;\n          $s$$4$$88 = s$$4.fields[1];\n          $acc_0$$89 = acc$$9[0];\n          $acc_1$$90 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], s$$6.fields[1], s$$6.fields[2]]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux($s$$7$$95, $n$$1$$96) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    const s$$7 = $s$$7$$95,\n          n$$1 = $n$$1$$96;\n\n    switch (s$$7.tag) {\n      case 2:\n        {\n          return s$$7.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          $s$$7$$95 = s$$7.fields[1];\n          $n$$1$$96 = s$$7.fields[0];\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        return some(s$$8.fields[0]);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$minimumElementAux(s$$8.fields[1], s$$8.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux($s$$9$$98, $n$$2$$99) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    const s$$9 = $s$$9$$98,\n          n$$2 = $n$$2$$99;\n\n    switch (s$$9.tag) {\n      case 2:\n        {\n          return s$$9.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          $s$$9$$98 = s$$9.fields[2];\n          $n$$2$$99 = s$$9.fields[0];\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        return some(s$$10.fields[0]);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$maximumElementAux(s$$10.fields[2], s$$10.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$103) {\n  return record(\"Set.SetTreeModule.SetIterator`1\", [$gen$$103], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list(SetTree$00601$reflection($gen$$103))], [\"started\", bool]]);\n}\nexport function SetTreeModule$$$collapseLHS($stack$$104) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$104;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        $stack$$104 = new List(stack.head.fields[1], new List(SetTreeModule$$$SetOne(stack.head.fields[0]), new List(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        $stack$$104 = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$108) {\n  return type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$108]);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks($comparer$$17$$112, $l1$$113, $l2$$114) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const comparer$$17 = $comparer$$17$$112,\n          l1 = $l1$$113,\n          l2 = $l2$$114;\n    var $target$$115, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (l1.tail != null) {\n      if (l2.tail != null) {\n        if (l2.head.tag === 2) {\n          if (l1.head.tag === 2) {\n            $target$$115 = 4;\n            n1k = l1.head.fields[0];\n            n2k = l2.head.fields[0];\n            t1$$7 = l1.tail;\n            t2$$7 = l2.tail;\n          } else if (l1.head.tag === 1) {\n            if (l1.head.fields[1].tag === 0) {\n              $target$$115 = 6;\n              emp = l1.head.fields[1];\n              n1k$$2 = l1.head.fields[0];\n              n1r = l1.head.fields[2];\n              n2k$$2 = l2.head.fields[0];\n              t1$$9 = l1.tail;\n              t2$$9 = l2.tail;\n            } else {\n              $target$$115 = 9;\n              n1k$$5 = l1.head.fields[0];\n              n1l = l1.head.fields[1];\n              n1r$$2 = l1.head.fields[2];\n              t1$$12 = l1.tail;\n            }\n          } else {\n            $target$$115 = 10;\n            n2k$$4 = l2.head.fields[0];\n            t2$$11 = l2.tail;\n          }\n        } else if (l2.head.tag === 1) {\n          if (l2.head.fields[1].tag === 0) {\n            if (l1.head.tag === 2) {\n              $target$$115 = 5;\n              n1k$$1 = l1.head.fields[0];\n              n2k$$1 = l2.head.fields[0];\n              n2r = l2.head.fields[2];\n              t1$$8 = l1.tail;\n              t2$$8 = l2.tail;\n            } else if (l1.head.tag === 1) {\n              if (l1.head.fields[1].tag === 0) {\n                $target$$115 = 7;\n                n1k$$3 = l1.head.fields[0];\n                n1r$$1 = l1.head.fields[2];\n                n2k$$3 = l2.head.fields[0];\n                n2r$$1 = l2.head.fields[2];\n                t1$$10 = l1.tail;\n                t2$$10 = l2.tail;\n              } else {\n                $target$$115 = 9;\n                n1k$$5 = l1.head.fields[0];\n                n1l = l1.head.fields[1];\n                n1r$$2 = l1.head.fields[2];\n                t1$$12 = l1.tail;\n              }\n            } else {\n              $target$$115 = 11;\n              n2k$$5 = l2.head.fields[0];\n              n2l = l2.head.fields[1];\n              n2r$$2 = l2.head.fields[2];\n              t2$$12 = l2.tail;\n            }\n          } else if (l1.head.tag === 2) {\n            $target$$115 = 8;\n            n1k$$4 = l1.head.fields[0];\n            t1$$11 = l1.tail;\n          } else if (l1.head.tag === 1) {\n            $target$$115 = 9;\n            n1k$$5 = l1.head.fields[0];\n            n1l = l1.head.fields[1];\n            n1r$$2 = l1.head.fields[2];\n            t1$$12 = l1.tail;\n          } else {\n            $target$$115 = 11;\n            n2k$$5 = l2.head.fields[0];\n            n2l = l2.head.fields[1];\n            n2r$$2 = l2.head.fields[2];\n            t2$$12 = l2.tail;\n          }\n        } else if (l1.head.tag === 2) {\n          $target$$115 = 8;\n          n1k$$4 = l1.head.fields[0];\n          t1$$11 = l1.tail;\n        } else if (l1.head.tag === 1) {\n          $target$$115 = 9;\n          n1k$$5 = l1.head.fields[0];\n          n1l = l1.head.fields[1];\n          n1r$$2 = l1.head.fields[2];\n          t1$$12 = l1.tail;\n        } else {\n          $target$$115 = 3;\n          t1$$6 = l1.tail;\n          t2$$6 = l2.tail;\n        }\n      } else {\n        $target$$115 = 2;\n      }\n    } else if (l2.tail != null) {\n      $target$$115 = 1;\n    } else {\n      $target$$115 = 0;\n    }\n\n    switch ($target$$115) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = t1$$6;\n          $l2$$114 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = t1$$7;\n            $l2$$114 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            $l2$$114 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r, t1$$9);\n            $l2$$114 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r$$1, t1$$10);\n            $l2$$114 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  if (s1.tag === 0) {\n    if (s2.tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (s2.tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop($m$$8$$120, $acc$$10$$121) {\n  SetTreeModule$$$loop: while (true) {\n    const m$$8 = $m$$8$$120,\n          acc$$10 = $acc$$10$$121;\n\n    switch (m$$8.tag) {\n      case 2:\n        {\n          return new List(m$$8.fields[0], acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          $m$$8$$120 = m$$8.fields[1];\n          $acc$$10$$121 = new List(m$$8.fields[0], SetTreeModule$$$loop(m$$8.fields[2], acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator($comparer$$19$$126, $acc$$11$$127, $e$$128) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$19 = $comparer$$19$$126,\n          acc$$11 = $acc$$11$$127,\n          e = $e$$128;\n\n    if (e.MoveNext()) {\n      $comparer$$19$$126 = comparer$$19;\n      $acc$$11$$127 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      $e$$128 = e;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$reflection($gen$$133) {\n  return type(\"Set.FSharpSet\", [$gen$$133]);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  const matchValue$$10 = FSharpSet$$get_Tree(s$$27);\n\n  if (matchValue$$10.tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  const matchValue$$11 = FSharpSet$$get_Tree(s$$28);\n\n  if (matchValue$$11.tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$7597B8F7(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  const matchValue$$12 = FSharpSet$$get_Tree(a$$4);\n\n  if (matchValue$$12.tag === 0) {\n    return a$$4;\n  } else {\n    const matchValue$$13 = FSharpSet$$get_Tree(b$$5);\n\n    if (matchValue$$13.tag === 0) {\n      return a$$4;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n    }\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  const matchValue$$14 = FSharpSet$$get_Tree(b$$6);\n\n  if (matchValue$$14.tag === 0) {\n    return a$$5;\n  } else {\n    const matchValue$$15 = FSharpSet$$get_Tree(a$$5);\n\n    if (matchValue$$15.tag === 0) {\n      return b$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n    }\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  const matchValue$$16 = FSharpSet$$get_Tree(b$$7);\n\n  if (matchValue$$16.tag === 0) {\n    return b$$7;\n  } else {\n    const matchValue$$17 = FSharpSet$$get_Tree(a$$6);\n\n    if (matchValue$$17.tag === 0) {\n      return a$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n    }\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"set [\" + (strings = map$$1(function (x$$21) {\n    let copyOfStruct = x$$21;\n    return String(copyOfStruct);\n  }, this$), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const x$$22 = res | 0;\n    const y$$4 = structuralHash(e$$1.Current) | 0;\n    res = (x$$22 << 1) + y$$4 + 631;\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$7597B8F7(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    keys() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    entries() {\n      const source = SetTreeModule$$$toSeq(tree$$1);\n      return map$$1(function mapping(v) {\n        return [v, v];\n      }, source);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$1, comparer$$32) {\n  const set = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(source$$1, comparer$$32);\n  return set;\n}\nexport function distinct(xs, comparer$$33) {\n  return delay(function () {\n    const set$$1 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$33);\n    return collect(function (x$$37) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$1, x$$37) ? singleton$$1(x$$37) : empty$$1();\n    }, xs);\n  });\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  return delay(function () {\n    const set$$2 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$34);\n    return collect(function (x$$38) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$2, projection(x$$38)) ? singleton$$1(x$$38) : empty$$1();\n    }, xs$$1);\n  });\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$39) {\n    return acc$$14.add(x$$39);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$40) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$40)) {\n      const value = s1$$5.delete(x$$40);\n      value, null;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$41) {\n    const value$$1 = s1$$6.delete(x$$41);\n    value$$1, null;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import { defaultArg, value as value$$13, some } from \"./Option.js\";\nimport { min as min$$1, compare, addToDict, addToSet, getItemFromDict, tryGetValue, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\nimport { iterate as iterate$$1 } from \"./Seq.js\";\n\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\n\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return null;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    let acc = state;\n    const res = new cons$$7(matchValue);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(matchValue$$1);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  var arr$$3;\n  const arrays$$1 = Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (arr$$3 = arrays$$1[0], ArrayBuffer.isView(arr$$3)) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$4 = arrays$$1[idx];\n            totalLength = totalLength + arr$$4.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$5 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$5.length - 1; j++) {\n              result$$4[totalIdx] = arr$$5[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], eq);\n  const keys = [];\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n      const value$$3 = keys.push(key);\n      value$$3, null;\n    }\n  }\n\n  const result$$5 = map(function (key$$1) {\n    return [key$$1, getItemFromDict(dict, key$$1)];\n  }, keys, Array);\n  return result$$5;\n}\nexport function distinctBy(projection$$1, array$$17, eq$$1) {\n  const hashSet = createMutable$$1([], eq$$1);\n  return filter(function predicate$$2($arg$$3) {\n    const arg00 = projection$$1($arg$$3);\n    return addToSet(arg00, hashSet);\n  }, array$$17);\n}\nexport function distinct(array$$19, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$19, eq$$2);\n}\nexport function where(predicate$$3, array$$20) {\n  return array$$20.filter(predicate$$3);\n}\nexport function contains(value$$4, array$$22, eq$$3) {\n  const loop = function loop($i$$12$$79) {\n    loop: while (true) {\n      const i$$12 = $i$$12$$79;\n\n      if (i$$12 >= array$$22.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$4, array$$22[i$$12])) {\n        return true;\n      } else {\n        $i$$12$$79 = i$$12 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$23, eq$$4) {\n  if (array$$23.length === 0) {\n    return array$$23;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, eq$$4);\n    return array$$23.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$26, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], eq$$5);\n  const keys$$1 = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$26.length - 1; idx$$3++) {\n    const v = array$$26[idx$$3];\n    const key$$2 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$2, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$2, new List(v, new List()));\n      const value$$5 = keys$$1.push(key$$2);\n      value$$5, null;\n    }\n  }\n\n  const result$$6 = map(function (key$$3) {\n    var array$$28;\n    return [key$$3, (array$$28 = cons$$11.from(getItemFromDict(dict$$1, key$$3)), (array$$28.reverse()))];\n  }, keys$$1, Array);\n  return result$$6;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$6, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$6;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$7 = new cons$$15(count$$8);\n\n  for (let i$$13 = 0; i$$13 <= count$$8 - 1; i$$13++) {\n    result$$7[i$$13] = initializer(i$$13);\n  }\n\n  return result$$7;\n}\nexport function pairwise(array$$30) {\n  if (array$$30.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$30.length - 1 | 0;\n    const result$$8 = new Array(count$$9);\n\n    for (let i$$14 = 0; i$$14 <= count$$9 - 1; i$$14++) {\n      result$$8[i$$14] = [array$$30[i$$14], array$$30[i$$14 + 1]];\n    }\n\n    return result$$8;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$9 = new cons$$16(count$$10);\n\n  for (let i$$15 = 0; i$$15 <= result$$9.length - 1; i$$15++) {\n    result$$9[i$$15] = initial;\n  }\n\n  return result$$9;\n}\nexport function copy(array$$31, cons$$17) {\n  return array$$31.slice();\n}\nexport function reverse(array$$33, cons$$18) {\n  const array$$35 = array$$33.slice();\n  return array$$35.reverse();\n}\nexport function scan(folder, state$$2, array$$37, cons$$19) {\n  const res$$2 = new cons$$19(array$$37.length + 1);\n  res$$2[0] = state$$2;\n\n  for (let i$$16 = 0; i$$16 <= array$$37.length - 1; i$$16++) {\n    res$$2[i$$16 + 1] = folder(res$$2[i$$16], array$$37[i$$16]);\n  }\n\n  return res$$2;\n}\nexport function scanBack(folder$$1, array$$38, state$$3, cons$$20) {\n  const res$$3 = new cons$$20(array$$38.length + 1);\n  res$$3[array$$38.length] = state$$3;\n\n  for (let i$$17 = array$$38.length - 1; i$$17 >= 0; i$$17--) {\n    res$$3[i$$17] = folder$$1(array$$38[i$$17], res$$3[i$$17 + 1]);\n  }\n\n  return res$$3;\n}\nexport function skip(count$$11, array$$39, cons$$21) {\n  if (count$$11 > array$$39.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$11 === array$$39.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$39.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$41, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$41.length ? predicate$$7(array$$41[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$41.length) {\n    return new cons$$23(0);\n  } else {\n    const count$$15 = count$$14 | 0;\n    return array$$41.slice(count$$15);\n  }\n}\nexport function take(count$$16, array$$43, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  if (count$$16 > array$$43.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$45, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$45.length ? predicate$$8(array$$45[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    const count$$19 = count$$18 | 0;\n    return array$$45.slice(0, 0 + count$$19);\n  }\n}\nexport function addRangeInPlace(range, array$$47) {\n  iterate$$1(function (x$$3) {\n    const value$$7 = array$$47.push(x$$3);\n    value$$7, null;\n  }, range);\n}\nexport function removeInPlace(item$$4, array$$49) {\n  const i$$18 = array$$49.indexOf(item$$4);\n\n  if (i$$18 > -1) {\n    const value$$8 = array$$49.splice(i$$18, 1);\n    value$$8, null;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$52) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$19 = array$$52.findIndex(predicate$$9);\n\n    if (i$$19 > -1) {\n      const value$$9 = array$$52.splice(i$$19, 1);\n      value$$9, null;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$3, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$20 = sourceIndex; i$$20 <= sourceIndex + count$$21 - 1; i$$20++) {\n    target$$4[i$$20 + diff] = source$$3[i$$20];\n  }\n}\nexport function partition(f$$6, source$$4, cons$$29) {\n  const len$$7 = source$$4.length | 0;\n  const res1 = new cons$$29(len$$7);\n  const res2 = new cons$$29(len$$7);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$21 = 0; i$$21 <= len$$7 - 1; i$$21++) {\n    if (f$$6(source$$4[i$$21])) {\n      res1[iTrue] = source$$4[i$$21];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$4[i$$21];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\nexport function find(predicate$$11, array$$57) {\n  const matchValue$$5 = array$$57.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    return indexNotFound();\n  } else {\n    const res$$4 = value$$13(matchValue$$5);\n    return res$$4;\n  }\n}\nexport function tryFind(predicate$$13, array$$59) {\n  return array$$59.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$61) {\n  const matchValue$$6 = array$$61.findIndex(predicate$$15);\n\n  if (matchValue$$6 > -1) {\n    return matchValue$$6 | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$63) {\n  const matchValue$$7 = array$$63.findIndex(predicate$$17);\n\n  if (matchValue$$7 > -1) {\n    return matchValue$$7;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$65) {\n  const loop$$1 = function loop$$1($i$$22$$147) {\n    loop$$1: while (true) {\n      const i$$22 = $i$$22$$147;\n\n      if (i$$22 >= array$$65.length) {\n        return indexNotFound();\n      } else {\n        const matchValue$$8 = chooser(array$$65[i$$22]);\n\n        if (matchValue$$8 != null) {\n          const res$$5 = value$$13(matchValue$$8);\n          return res$$5;\n        } else {\n          $i$$22$$147 = i$$22 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$66) {\n  const loop$$2 = function loop$$2($i$$23$$150) {\n    loop$$2: while (true) {\n      const i$$23 = $i$$23$$150;\n\n      if (i$$23 >= array$$66.length) {\n        return null;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$66[i$$23]);\n\n        if (matchValue$$9 == null) {\n          $i$$23$$150 = i$$23 + 1;\n          continue loop$$2;\n        } else {\n          return matchValue$$9;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$67) {\n  const loop$$3 = function loop$$3($i$$24$$153) {\n    loop$$3: while (true) {\n      const i$$24 = $i$$24$$153;\n\n      if (i$$24 < 0) {\n        return indexNotFound();\n      } else if (predicate$$19(array$$67[i$$24])) {\n        return array$$67[i$$24];\n      } else {\n        $i$$24$$153 = i$$24 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$67.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$68) {\n  const loop$$4 = function loop$$4($i$$25$$156) {\n    loop$$4: while (true) {\n      const i$$25 = $i$$25$$156;\n\n      if (i$$25 < 0) {\n        return null;\n      } else if (predicate$$20(array$$68[i$$25])) {\n        return some(array$$68[i$$25]);\n      } else {\n        $i$$25$$156 = i$$25 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$68.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$69) {\n  const loop$$5 = function loop$$5($i$$26$$159) {\n    loop$$5: while (true) {\n      const i$$26 = $i$$26$$159;\n\n      if (i$$26 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$69[i$$26])) {\n        return i$$26 | 0;\n      } else {\n        $i$$26$$159 = i$$26 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$69.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$70) {\n  const loop$$6 = function loop$$6($i$$27$$162) {\n    loop$$6: while (true) {\n      const i$$27 = $i$$27$$162;\n\n      if (i$$27 < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate$$22(array$$70[i$$27])) {\n        return i$$27 | 0;\n      } else {\n        $i$$27$$162 = i$$27 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$70.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$71) {\n  const loop$$7 = function loop$$7($i$$28$$165) {\n    loop$$7: while (true) {\n      const i$$28 = $i$$28$$165;\n\n      if (i$$28 < 0) {\n        return null;\n      } else if (predicate$$23(array$$71[i$$28])) {\n        return i$$28;\n      } else {\n        $i$$28$$165 = i$$28 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$71.length - 1);\n}\nexport function choose(chooser$$2, array$$72, cons$$30) {\n  const arr$$6 = array$$72.filter(function f$$7(x$$4) {\n    const option = chooser$$2(x$$4);\n    return option != null;\n  });\n  return map(function g(x$$5) {\n    const option$$1 = chooser$$2(x$$5);\n    return value$$13(option$$1);\n  }, arr$$6, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$74) {\n  return array$$74.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$76) {\n  return array$$76.reduce(function (delegateArg0$$2, delegateArg1$$2) {\n    return folder$$4(delegateArg0$$2, delegateArg1$$2);\n  }, state$$6);\n}\nexport function iterate(action, array$$78) {\n  for (let i$$30 = 0; i$$30 <= array$$78.length - 1; i$$30++) {\n    action(array$$78[i$$30]);\n  }\n}\nexport function iterateIndexed(action$$1, array$$79) {\n  for (let i$$31 = 0; i$$31 <= array$$79.length - 1; i$$31++) {\n    action$$1(i$$31, array$$79[i$$31]);\n  }\n}\nexport function iterate2(action$$2, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$32 = 0; i$$32 <= array1$$2.length - 1; i$$32++) {\n    action$$2(array1$$2[i$$32], array2$$2[i$$32]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$33 = 0; i$$33 <= array1$$3.length - 1; i$$33++) {\n    action$$3(i$$33, array1$$3[i$$33], array2$$3[i$$33]);\n  }\n}\nexport function isEmpty(array$$80) {\n  return array$$80.length === 0;\n}\nexport function forAll(predicate$$25, array$$81) {\n  return array$$81.every(predicate$$25);\n}\nexport function permute(f$$8, array$$83) {\n  const size = array$$83.length | 0;\n  const res$$7 = new array$$83.constructor(array$$83.length);\n  const checkFlags = new Array(size);\n  iterateIndexed(function (i$$34, x$$8) {\n    const j$$1 = f$$8(i$$34) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$7[j$$1] = x$$8;\n    checkFlags[j$$1] = 1;\n  }, array$$83);\n  const isValid = forAll(function (y) {\n    return 1 === y;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$7;\n}\nexport function setSlice(target$$5, lower, upper, source$$5) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  if (ArrayBuffer.isView(target$$5) ? source$$5.length <= length : false) {\n    const target$$6 = target$$5;\n    const source$$6 = source$$5;\n    return target$$6.set(source$$6, lower$$1);\n  } else {\n    for (let i$$35 = 0; i$$35 <= length; i$$35++) {\n      target$$5[i$$35 + lower$$1] = source$$5[i$$35];\n    }\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$10, y$$1) {\n    return comparer.Compare(projection$$3(x$$10), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$11, y$$2) {\n    return comparer$$1.Compare(x$$11, y$$2);\n  });\n}\n\nfunction copyArray(array$$84) {\n  const result$$10 = new array$$84.constructor(array$$84.length);\n\n  for (let i$$36 = 0; i$$36 <= array$$84.length - 1; i$$36++) {\n    result$$10[i$$36] = array$$84[i$$36];\n  }\n\n  return result$$10;\n}\n\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = copyArray(xs$$2);\n  xs$$3.sort(function comparer$$3(x$$12, y$$3) {\n    return comparer$$2.Compare(x$$12, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = copyArray(xs$$4);\n  xs$$5.sort(function comparer$$5(x$$13, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$13), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = copyArray(xs$$6);\n  xs$$7.sort(function comparer$$7(x$$14, y$$5) {\n    return comparer$$6.Compare(x$$14, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = copyArray(xs$$8);\n  xs$$9.sort(function comparer$$9(x$$15, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$15), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = copyArray(xs$$10);\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$8 = [];\n\n  const loop$$8 = function loop$$8($state$$9$$224) {\n    loop$$8: while (true) {\n      const state$$9 = $state$$9$$224;\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$16 = matchValue$$10[0];\n        const s$0027$$2 = matchValue$$10[1];\n        const value$$10 = res$$8.push(x$$16);\n        value$$10, null;\n        $state$$9$$224 = s$0027$$2;\n        continue loop$$8;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$8;\n}\nexport function unzip(array$$86) {\n  const len$$9 = array$$86.length | 0;\n  const res1$$1 = new Array(len$$9);\n  const res2$$1 = new Array(len$$9);\n  iterateIndexed(function (i$$37, tupledArg) {\n    res1$$1[i$$37] = tupledArg[0];\n    res2$$1[i$$37] = tupledArg[1];\n  }, array$$86);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$87) {\n  const len$$12 = array$$87.length | 0;\n  const res1$$2 = new Array(len$$12);\n  const res2$$2 = new Array(len$$12);\n  const res3 = new Array(len$$12);\n  iterateIndexed(function (i$$38, tupledArg$$1) {\n    res1$$2[i$$38] = tupledArg$$1[0];\n    res2$$2[i$$38] = tupledArg$$1[1];\n    res3[i$$38] = tupledArg$$1[2];\n  }, array$$87);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  let result$$11;\n  const len$$16 = array1$$4.length | 0;\n  result$$11 = new Array(len$$16);\n\n  for (let i$$39 = 0; i$$39 <= array1$$4.length - 1; i$$39++) {\n    result$$11[i$$39] = [array1$$4[i$$39], array2$$4[i$$39]];\n  }\n\n  return result$$11;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  let result$$12;\n  const len$$17 = array1$$5.length | 0;\n  result$$12 = new Array(len$$17);\n\n  for (let i$$40 = 0; i$$40 <= array1$$5.length - 1; i$$40++) {\n    result$$12[i$$40] = [array1$$5[i$$40], array2$$5[i$$40], array3[i$$40]];\n  }\n\n  return result$$12;\n}\nexport function chunkBySize(chunkSize, array$$88) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n\n  if (array$$88.length === 0) {\n    return [[]];\n  } else {\n    const result$$13 = [];\n\n    for (let x$$17 = 0; x$$17 <= ~~Math.ceil(array$$88.length / chunkSize) - 1; x$$17++) {\n      const start$$8 = x$$17 * chunkSize | 0;\n      const slice = array$$88.slice(start$$8, start$$8 + chunkSize);\n      const value$$11 = result$$13.push(slice);\n      value$$11, null;\n    }\n\n    return result$$13;\n  }\n}\nexport function splitAt(index$$4, array$$91) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  }\n\n  if (index$$4 > array$$91.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  }\n\n  return [array$$91.slice(0, 0 + index$$4), array$$91.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$41 = 0;\n    let result$$14 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$41 < length1 ? result$$14 === 0 : false) {\n        result$$14 = comparer$$12(array1$$6[i$$41], array2$$6[i$$41]);\n        i$$41 = i$$41 + 1;\n      }\n\n      return result$$14 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$94) {\n  if (array$$94.length === 1) {\n    return array$$94[0];\n  } else if (array$$94.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$95) {\n  if (array$$95.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$95[0];\n  }\n}\nexport function tryHead(array$$96) {\n  if (array$$96.length === 0) {\n    return null;\n  } else {\n    return some(array$$96[0]);\n  }\n}\nexport function tail(array$$97) {\n  if (array$$97.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n\n  return array$$97.slice(1);\n}\nexport function item(index$$5, array$$99) {\n  return array$$99[index$$5];\n}\nexport function tryItem(index$$6, array$$100) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$100.length) {\n    return null;\n  } else {\n    return some(array$$100[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$101, state$$10) {\n  return array$$101.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$103, state$$12) {\n  return array$$103.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (let i$$43 = 0; i$$43 <= array1$$8.length - 1; i$$43++) {\n    acc$$6 = folder$$10(i$$43, acc$$6, array1$$8[i$$43], array2$$8[i$$43]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$20, y$$7) {\n    return folder$$11(acc$$7, x$$20, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$44 = 1; i$$44 <= size$$1; i$$44++) {\n    acc$$8 = folder$$12(i$$44 - 1, array1$$10[size$$1 - i$$44], array2$$10[size$$1 - i$$44], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$21, y$$8, acc$$9) {\n    return f$$9(x$$21, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$105) {\n  if (array$$105.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$105.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$107) {\n  if (array$$107.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$107.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$27, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$22, y$$9) {\n    return acc$$10 ? predicate$$27(x$$22, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($predicate$$28$$279, $array$$109$$280, $index$$7$$281) {\n  existsOffset: while (true) {\n    const predicate$$28 = $predicate$$28$$279,\n          array$$109 = $array$$109$$280,\n          index$$7 = $index$$7$$281;\n\n    if (index$$7 === array$$109.length) {\n      return false;\n    } else if (predicate$$28(array$$109[index$$7])) {\n      return true;\n    } else {\n      $predicate$$28$$279 = predicate$$28;\n      $array$$109$$280 = array$$109;\n      $index$$7$$281 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$29, array$$110) {\n  return existsOffset(predicate$$29, array$$110, 0);\n}\nexport function existsOffset2($predicate$$30$$284, $array1$$13$$285, $array2$$13$$286, $index$$8$$287) {\n  existsOffset2: while (true) {\n    const predicate$$30 = $predicate$$30$$284,\n          array1$$13 = $array1$$13$$285,\n          array2$$13 = $array2$$13$$286,\n          index$$8 = $index$$8$$287;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$30(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $predicate$$30$$284 = predicate$$30;\n      $array1$$13$$285 = array1$$13;\n      $array2$$13$$286 = array2$$13;\n      $index$$8$$287 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$31, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$31, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$111, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$45 = 0; i$$45 <= array$$111.length - 1; i$$45++) {\n    acc$$11 = adder.Add(acc$$11, array$$111[i$$45]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$112, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$46 = 0; i$$46 <= array$$112.length - 1; i$$46++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$112[i$$46]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$23, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$23)) > 0 ? y$$10 : x$$23;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$24, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$24) > 0 ? y$$11 : x$$24;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$25, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$25)) > 0 ? x$$25 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$26, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$26) > 0 ? x$$26 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$113, averager) {\n  if (array$$113.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$113.length - 1; i$$47++) {\n    total = averager.Add(total, array$$113[i$$47]);\n  }\n\n  return averager.DivideByInt(total, array$$113.length);\n}\nexport function averageBy(projection$$9, array$$114, averager$$1) {\n  if (array$$114.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$48 = 0; i$$48 <= array$$114.length - 1; i$$48++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$114[i$$48]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$114.length);\n}\nexport function ofSeq(source$$7, cons$$31) {\n  return cons$$31.from(source$$7);\n}\nexport function ofList(source$$8, cons$$32) {\n  return cons$$32.from(source$$8);\n}\nexport function toList(source$$9) {\n  const len$$18 = source$$9.length | 0;\n  let target$$7 = new List();\n\n  for (let i$$49 = len$$18 - 1; i$$49 >= 0; i$$49--) {\n    target$$7 = new List(source$$9[i$$49], target$$7);\n  }\n\n  return target$$7;\n}\nexport function windowed(windowSize, source$$10) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$9;\n  const len$$19 = max$$1(comparePrimitives, 0, source$$10.length - windowSize) | 0;\n  res$$9 = new Array(len$$19);\n\n  for (let i$$50 = windowSize; i$$50 <= source$$10.length; i$$50++) {\n    res$$9[i$$50 - windowSize] = source$$10.slice(i$$50 - windowSize, i$$50 - 1 + 1);\n  }\n\n  return res$$9;\n}\nexport function splitInto(chunks, array$$115) {\n  if (chunks < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: chunks\");\n  }\n\n  if (array$$115.length === 0) {\n    return [[]];\n  } else {\n    const result$$15 = [];\n    const chunks$$1 = min$$1(comparePrimitives, chunks, array$$115.length) | 0;\n    const minChunkSize = ~~(array$$115.length / chunks$$1) | 0;\n    const chunksWithExtraItem = array$$115.length % chunks$$1 | 0;\n\n    for (let i$$51 = 0; i$$51 <= chunks$$1 - 1; i$$51++) {\n      const chunkSize$$1 = (i$$51 < chunksWithExtraItem ? minChunkSize + 1 : minChunkSize) | 0;\n      const start$$11 = i$$51 * minChunkSize + min$$1(comparePrimitives, chunksWithExtraItem, i$$51) | 0;\n      const slice$$1 = array$$115.slice(start$$11, start$$11 + chunkSize$$1);\n      const value$$12 = result$$15.push(slice$$1);\n      value$$12, null;\n    }\n\n    return result$$15;\n  }\n}","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { List } from \"./Types.js\";\nimport { collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { partialApply, getItemFromDict, addToDict, tryGetValue, addToSet, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { splitInto as splitInto$$1, chunkBySize as chunkBySize$$1, permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    return _arg1.head;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    return some(_arg1$$1.head);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    return _arg1$$2.tail;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last($_arg1$$3$$5) {\n  last: while (true) {\n    const _arg1$$3 = $_arg1$$3$$5;\n\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        $_arg1$$3$$5 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast($_arg1$$4$$6) {\n  tryLast: while (true) {\n    const _arg1$$4 = $_arg1$$4$$6;\n\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        $_arg1$$4$$6 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop($xs$$4$$10, $ys$$1$$11) {\n      loop: while (true) {\n        const xs$$4 = $xs$$4$$10,\n              ys$$1 = $ys$$1$$11;\n\n        if (xs$$4.tail != null) {\n          if (ys$$1.tail != null) {\n            const matchValue$$1 = comparer(xs$$4.head, ys$$1.head) | 0;\n\n            if (matchValue$$1 === 0) {\n              $xs$$4$$10 = xs$$4.tail;\n              $ys$$1$$11 = ys$$1.tail;\n              continue loop;\n            } else {\n              return matchValue$$1 | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (ys$$1.tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($f$$12, $i$$13, $acc$$14, $_arg1$$5$$15) {\n  foldIndexedAux: while (true) {\n    const f = $f$$12,\n          i = $i$$13,\n          acc = $acc$$14,\n          _arg1$$5 = $_arg1$$5$$15;\n\n    if (_arg1$$5.tail != null) {\n      $f$$12 = f;\n      $i$$13 = i + 1;\n      $acc$$14 = f(i, acc, _arg1$$5.head);\n      $_arg1$$5$$15 = _arg1$$5.tail;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($f$$2$$19, $state$$1$$20, $xs$$8$$21) {\n  fold: while (true) {\n    const f$$2 = $f$$2$$19,\n          state$$1 = $state$$1$$20,\n          xs$$8 = $xs$$8$$21;\n\n    if (xs$$8.tail != null) {\n      $f$$2$$19 = f$$2;\n      $state$$1$$20 = f$$2(state$$1, xs$$8.head);\n      $xs$$8$$21 = xs$$8.tail;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  const xs$$13 = fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12);\n  return reverse(xs$$13);\n}\nexport function concat(lists) {\n  const xs$$15 = fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists);\n  return reverse(xs$$15);\n}\nexport function foldIndexed2Aux($f$$5$$31, $i$$1$$32, $acc$$5$$33, $bs$$34, $cs$$35) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $f$$5$$31,\n          i$$1 = $i$$1$$32,\n          acc$$5 = $acc$$5$$33,\n          bs = $bs$$34,\n          cs = $cs$$35;\n    var $target$$36, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (bs.tail != null) {\n      if (cs.tail != null) {\n        $target$$36 = 1;\n        x$$11 = bs.head;\n        xs$$16 = bs.tail;\n        y$$1 = cs.head;\n        ys$$3 = cs.tail;\n      } else {\n        $target$$36 = 2;\n      }\n    } else if (cs.tail == null) {\n      $target$$36 = 0;\n    } else {\n      $target$$36 = 2;\n    }\n\n    switch ($target$$36) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $f$$5$$31 = f$$5;\n          $i$$1$$32 = i$$1 + 1;\n          $acc$$5$$33 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $bs$$34 = xs$$16;\n          $cs$$35 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner($acc$$6$$51, $state$$8$$52) {\n    unfoldInner: while (true) {\n      const acc$$6 = $acc$$6$$51,\n            state$$8 = $state$$8$$52;\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        $acc$$6$$51 = new List(x$$12, acc$$6);\n        $state$$8$$52 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($f$$10$$53, $i$$2$$54, $acc$$7$$55, $bs$$1$$56, $cs$$1$$57, $ds$$58) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $f$$10$$53,\n          i$$2 = $i$$2$$54,\n          acc$$7 = $acc$$7$$55,\n          bs$$1 = $bs$$1$$56,\n          cs$$1 = $cs$$1$$57,\n          ds = $ds$$58;\n    var $target$$59, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (bs$$1.tail != null) {\n      if (cs$$1.tail != null) {\n        if (ds.tail != null) {\n          $target$$59 = 1;\n          x$$13 = bs$$1.head;\n          xs$$20 = bs$$1.tail;\n          y$$2 = cs$$1.head;\n          ys$$7 = cs$$1.tail;\n          z = ds.head;\n          zs = ds.tail;\n        } else {\n          $target$$59 = 2;\n        }\n      } else {\n        $target$$59 = 2;\n      }\n    } else if (cs$$1.tail == null) {\n      if (ds.tail == null) {\n        $target$$59 = 0;\n      } else {\n        $target$$59 = 2;\n      }\n    } else {\n      $target$$59 = 2;\n    }\n\n    switch ($target$$59) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $f$$10$$53 = f$$10;\n          $i$$2$$54 = i$$2 + 1;\n          $acc$$7$$55 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $bs$$1$$56 = xs$$20;\n          $cs$$1$$57 = ys$$7;\n          $ds$$58 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  const xs$$24 = scan$$1(f$$13, state$$11, xs$$23);\n  return ofSeq(xs$$24);\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  const xs$$26 = scanBack$$1(f$$14, xs$$25, state$$12);\n  return ofSeq(xs$$26);\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  const xs$$30 = collect$$1(f$$15, xs$$29);\n  return ofSeq(xs$$30);\n}\nexport function map(f$$16, xs$$31) {\n  const xs$$32 = fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31);\n  return reverse(xs$$32);\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  const xs$$34 = foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33);\n  return reverse(xs$$34);\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  const xs$$37 = fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11);\n  return reverse(xs$$37);\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  const xs$$39 = foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12);\n  return reverse(xs$$39);\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  const xs$$41 = fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3);\n  return reverse(xs$$41);\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  const xs$$43 = foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4);\n  return reverse(xs$$43);\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const patternInput$$1 = fold(function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  }, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($f$$28$$120, $i$$10$$121, $_arg1$$9$$122) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $f$$28$$120,\n          i$$10 = $i$$10$$121,\n          _arg1$$9 = $_arg1$$9$$122;\n\n    if (_arg1$$9.tail != null) {\n      const result = f$$28(i$$10, _arg1$$9.head);\n\n      if (result == null) {\n        $f$$28$$120 = f$$28;\n        $i$$10$$121 = i$$10 + 1;\n        $_arg1$$9$$122 = _arg1$$9.tail;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : null;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  let xs$$61;\n  xs$$61 = reverse(xs$$59);\n  return find(f$$36, xs$$61);\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  let xs$$64;\n  xs$$64 = reverse(xs$$62);\n  return tryFind(f$$37, xs$$64);\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : null;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  const array = ofList(xs$$66, Array);\n  return tryFindIndexBack$$1(f$$39, array);\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  const array$$1 = ofList(xs$$68, Array);\n  return findIndexBack$$1(f$$41, array$$1) | 0;\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  const xs$$72 = fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71);\n  return reverse(xs$$72);\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  const xs$$75 = fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74);\n  return reverse(xs$$75);\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1($xs$$76$$162) {\n    loop$$1: while (true) {\n      const xs$$76 = $xs$$76$$162;\n\n      if (xs$$76.tail != null) {\n        if (eq.Equals(value, xs$$76.head)) {\n          return true;\n        } else {\n          $xs$$76$$162 = xs$$76.tail;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, eq$$1);\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 1; i$$15 <= n$$2; i$$15++) {\n    xs$$78 = new List(f$$46(n$$2 - i$$15), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    return fold(f$$47, _arg1$$16.head, _arg1$$16.tail);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    return foldBack(f$$48, _arg1$$17.tail, _arg1$$17.head);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($f$$51$$180, $_arg1$$18$$181) {\n  exists: while (true) {\n    const f$$51 = $f$$51$$180,\n          _arg1$$18 = $_arg1$$18$$181;\n\n    if (_arg1$$18.tail != null) {\n      if (f$$51(_arg1$$18.head)) {\n        return true;\n      } else {\n        $f$$51$$180 = f$$51;\n        $_arg1$$18$$181 = _arg1$$18.tail;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($f$$52$$182, $bs$$2$$183, $cs$$2$$184) {\n  exists2: while (true) {\n    const f$$52 = $f$$52$$182,\n          bs$$2 = $bs$$2$$183,\n          cs$$2 = $cs$$2$$184;\n    var $target$$185, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (bs$$2.tail != null) {\n      if (cs$$2.tail != null) {\n        $target$$185 = 1;\n        x$$44 = bs$$2.head;\n        xs$$82 = bs$$2.tail;\n        y$$12 = cs$$2.head;\n        ys$$18 = cs$$2.tail;\n      } else {\n        $target$$185 = 2;\n      }\n    } else if (cs$$2.tail == null) {\n      $target$$185 = 0;\n    } else {\n      $target$$185 = 2;\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $f$$52$$182 = f$$52;\n            $bs$$2$$183 = xs$$82;\n            $cs$$2$$184 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  let xs$$89;\n  const xs$$88 = ofList(xs$$87, Array);\n  xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  });\n  xs$$89 = xs$$88;\n  return ofArray(xs$$89);\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  let xs$$92;\n  const xs$$91 = ofList(xs$$90, Array);\n  xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  });\n  xs$$92 = xs$$91;\n  return ofArray(xs$$92);\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  let xs$$95;\n  const xs$$94 = ofList(xs$$93, Array);\n  xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  });\n  xs$$95 = xs$$94;\n  return ofArray(xs$$95);\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  let xs$$98;\n  const xs$$97 = ofList(xs$$96, Array);\n  xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  });\n  xs$$98 = xs$$97;\n  return ofArray(xs$$98);\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  let xs$$101;\n  const xs$$100 = ofList(xs$$99, Array);\n  xs$$100.sort(comparer$$9);\n  xs$$101 = xs$$100;\n  return ofArray(xs$$101);\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  let xs$$110;\n  let array$$3;\n  array$$3 = ofList(xs$$109, Array);\n  xs$$110 = permute$$1(f$$55, array$$3);\n  return ofArray(xs$$110);\n}\nexport function chunkBySize(chunkSize, xs$$111) {\n  let xs$$114;\n  let xs$$112;\n  let array$$4;\n  array$$4 = ofList(xs$$111, Array);\n  xs$$112 = chunkBySize$$1(chunkSize, array$$4);\n  xs$$114 = ofArray(xs$$112);\n  return map(function f$$56(xs$$113) {\n    return ofArray(xs$$113);\n  }, xs$$114);\n}\nexport function skip(i$$16, xs$$115) {\n  const skipInner = function skipInner($i$$17$$240, $xs$$116$$241) {\n    skipInner: while (true) {\n      const i$$17 = $i$$17$$240,\n            xs$$116 = $xs$$116$$241;\n\n      if (i$$17 === 0) {\n        return xs$$116;\n      } else if (xs$$116.tail != null) {\n        $i$$17$$240 = i$$17 - 1;\n        $xs$$116$$241 = xs$$116.tail;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  if (i$$16 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$242, i$$20, xs$$119;\n\n    if (i$$16 === 0) {\n      $target$$242 = 0;\n    } else if (i$$16 === 1) {\n      if (xs$$115.tail != null) {\n        $target$$242 = 1;\n      } else {\n        $target$$242 = 2;\n        i$$20 = i$$16;\n        xs$$119 = xs$$115;\n      }\n    } else {\n      $target$$242 = 2;\n      i$$20 = i$$16;\n      xs$$119 = xs$$115;\n    }\n\n    switch ($target$$242) {\n      case 0:\n        {\n          return xs$$115;\n        }\n\n      case 1:\n        {\n          return xs$$115.tail;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$119);\n        }\n    }\n  }\n}\nexport function skipWhile($predicate$$243, $xs$$120$$244) {\n  skipWhile: while (true) {\n    const predicate = $predicate$$243,\n          xs$$120 = $xs$$120$$244;\n    var $target$$245, h$$4, t$$4;\n\n    if (xs$$120.tail != null) {\n      if (predicate(xs$$120.head)) {\n        $target$$245 = 0;\n        h$$4 = xs$$120.head;\n        t$$4 = xs$$120.tail;\n      } else {\n        $target$$245 = 1;\n      }\n    } else {\n      $target$$245 = 1;\n    }\n\n    switch ($target$$245) {\n      case 0:\n        {\n          $predicate$$243 = predicate;\n          $xs$$120$$244 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$120;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux($error$$246, $i$$21$$247, $acc$$25$$248, $xs$$121$$249) {\n  takeSplitAux: while (true) {\n    const error = $error$$246,\n          i$$21 = $i$$21$$247,\n          acc$$25 = $acc$$25$$248,\n          xs$$121 = $xs$$121$$249;\n\n    if (i$$21 === 0) {\n      return [reverse(acc$$25), xs$$121];\n    } else if (xs$$121.tail != null) {\n      $error$$246 = error;\n      $i$$21$$247 = i$$21 - 1;\n      $acc$$25$$248 = new List(xs$$121.head, acc$$25);\n      $xs$$121$$249 = xs$$121.tail;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$121];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$123) {\n  if (i$$22 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$252, i$$25, xs$$124;\n\n    if (i$$22 === 0) {\n      $target$$252 = 0;\n    } else if (i$$22 === 1) {\n      if (xs$$123.tail != null) {\n        $target$$252 = 1;\n      } else {\n        $target$$252 = 2;\n        i$$25 = i$$22;\n        xs$$124 = xs$$123;\n      }\n    } else {\n      $target$$252 = 2;\n      i$$25 = i$$22;\n      xs$$124 = xs$$123;\n    }\n\n    switch ($target$$252) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$123.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple = takeSplitAux(true, i$$25, new List(), xs$$124);\n          return tuple[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$125) {\n  if (xs$$125.tail != null) {\n    if (xs$$125.tail.tail == null) {\n      if (predicate$$1(xs$$125.head)) {\n        return xs$$125;\n      } else {\n        return xs$$125.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$125.head)) {\n        return new List();\n      } else {\n        return new List(xs$$125.head, takeWhile(predicate$$1, xs$$125.tail));\n      }\n    }\n  } else {\n    return xs$$125;\n  }\n}\nexport function truncate(i$$26, xs$$127) {\n  if (i$$26 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$257, i$$29, xs$$128;\n\n    if (i$$26 === 0) {\n      $target$$257 = 0;\n    } else if (i$$26 === 1) {\n      if (xs$$127.tail != null) {\n        $target$$257 = 1;\n      } else {\n        $target$$257 = 2;\n        i$$29 = i$$26;\n        xs$$128 = xs$$127;\n      }\n    } else {\n      $target$$257 = 2;\n      i$$29 = i$$26;\n      xs$$128 = xs$$127;\n    }\n\n    switch ($target$$257) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$127.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple$$1 = takeSplitAux(false, i$$29, new List(), xs$$128);\n          return tuple$$1[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$129) {\n  if (i$$30 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$260, i$$33, xs$$131;\n\n    if (i$$30 === 0) {\n      $target$$260 = 0;\n    } else if (i$$30 === 1) {\n      if (xs$$129.tail != null) {\n        $target$$260 = 1;\n      } else {\n        $target$$260 = 2;\n        i$$33 = i$$30;\n        xs$$131 = xs$$129;\n      }\n    } else {\n      $target$$260 = 2;\n      i$$33 = i$$30;\n      xs$$131 = xs$$129;\n    }\n\n    switch ($target$$260) {\n      case 0:\n        {\n          return [new List(), xs$$129];\n        }\n\n      case 1:\n        {\n          return [new List(xs$$129.head, new List()), xs$$129.tail];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$131);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$132) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    let lastIndex = -1 | 0;\n    let res$$2;\n    const state$$13 = new List();\n    res$$2 = foldIndexed(function f$$57(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, state$$13, xs$$132);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$134, eq$$2) {\n  const hashSet = createMutable([], eq$$2);\n  return filter(function f$$58($arg$$1) {\n    const arg00$$1 = projection$$4($arg$$1);\n    return addToSet(arg00$$1, hashSet);\n  }, xs$$134);\n}\nexport function distinct(xs$$136, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$136, eq$$3);\n}\nexport function exactlyOne(xs$$137) {\n  if (xs$$137.tail != null) {\n    if (xs$$137.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$137.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$139, eq$$4) {\n  const dict = createMutable$$1([], eq$$4);\n  let keys = new List();\n  iterate(function f$$59(v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys = new List(key, keys);\n    }\n  }, xs$$139);\n  let result$$1 = new List();\n  const xs$$141 = keys;\n  iterate(function f$$60(key$$1) {\n    result$$1 = new List([key$$1, reverse(getItemFromDict(dict, key$$1))], result$$1);\n  }, xs$$141);\n  return result$$1;\n}\nexport function countBy(projection$$6, xs$$142, eq$$5) {\n  const dict$$1 = createMutable$$1([], eq$$5);\n  let keys$$1 = new List();\n  iterate(function f$$61(v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, 0);\n\n    if (matchValue$$17[0]) {\n      dict$$1.set(key$$2, matchValue$$17[1] + 1);\n    } else {\n      dict$$1.set(key$$2, 1);\n      keys$$1 = new List(key$$2, keys$$1);\n    }\n  }, xs$$142);\n  let result$$2 = new List();\n  const xs$$144 = keys$$1;\n  iterate(function f$$62(key$$3) {\n    result$$2 = new List([key$$3, getItemFromDict(dict$$1, key$$3)], result$$2);\n  }, xs$$144);\n  return result$$2;\n}\nexport function where(predicate$$2, xs$$145) {\n  return filter(predicate$$2, xs$$145);\n}\nexport function pairwise(xs$$146) {\n  const inner = function inner($xs$$147$$287, $acc$$27$$288, $x1$$1$$289) {\n    inner: while (true) {\n      const xs$$147 = $xs$$147$$287,\n            acc$$27 = $acc$$27$$288,\n            x1$$1 = $x1$$1$$289;\n\n      if (xs$$147.tail != null) {\n        let copyOfStruct = acc$$27;\n        copyOfStruct.push([x1$$1, xs$$147.head]);\n        $xs$$147$$287 = xs$$147.tail;\n        $acc$$27$$288 = acc$$27;\n        $x1$$1$$289 = xs$$147.head;\n        continue inner;\n      } else {\n        return ofArray(acc$$27);\n      }\n\n      break;\n    }\n  };\n\n  var $target$$290, x1$$2, x2$$2, xs$$149;\n\n  if (xs$$146.tail != null) {\n    if (xs$$146.tail.tail != null) {\n      $target$$290 = 1;\n      x1$$2 = xs$$146.head;\n      x2$$2 = xs$$146.tail.head;\n      xs$$149 = xs$$146.tail.tail;\n    } else {\n      $target$$290 = 0;\n    }\n  } else {\n    $target$$290 = 0;\n  }\n\n  switch ($target$$290) {\n    case 0:\n      {\n        return new List();\n      }\n\n    case 1:\n      {\n        const acc$$28 = [];\n        acc$$28.push([x1$$2, x2$$2]);\n        const clo1 = partialApply(2, inner, [xs$$149]);\n        const clo2 = clo1(acc$$28);\n        return clo2(x2$$2);\n      }\n  }\n}\nexport function windowed(windowSize, source) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$3 = new List();\n\n  for (let i$$35 = length(source); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source), res$$3);\n  }\n\n  return res$$3;\n}\nexport function splitInto(chunks, source$$1) {\n  let xs$$152;\n  let xs$$150;\n  let array$$5;\n  array$$5 = ofList(source$$1, Array);\n  xs$$150 = splitInto$$1(chunks, array$$5);\n  xs$$152 = ofArray(xs$$150);\n  return map(function f$$63(xs$$151) {\n    return ofArray(xs$$151);\n  }, xs$$152);\n}","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n//# sourceMappingURL=AsyncBuilder.js.map","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport default class Async {\n}\nfunction emptyContinuation(x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1(x)),\n            onError: (ex) => ctx.onSuccess(choice2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = null;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\n//# sourceMappingURL=Async.js.map","import { tryValueIfChoice1, tryValueIfChoice2, value } from \"./Option\";\nexport class Observer {\n    constructor(onNext, onError, onCompleted) {\n        this.OnNext = onNext;\n        this.OnError = onError || ((e) => { return; });\n        this.OnCompleted = onCompleted || (() => { return; });\n    }\n}\nclass Observable {\n    constructor(subscribe) {\n        this.Subscribe = subscribe;\n    }\n}\nexport function protect(f, succeed, fail) {\n    try {\n        return succeed(f());\n    }\n    catch (e) {\n        fail(e);\n    }\n}\nexport function add(callback, source) {\n    source.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)));\n}\nexport function filter(predicate, source) {\n    return choose((x) => predicate(x) ? x : null, source);\n}\nexport function map(mapping, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => {\n        protect(() => mapping(t), observer.OnNext, observer.OnError);\n    }, observer.OnError, observer.OnCompleted)));\n}\nexport function merge(source1, source2) {\n    return new Observable((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    });\n}\nexport function pairwise(source) {\n    return new Observable((observer) => {\n        let last = null;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function partition(predicate, source) {\n    return [filter(predicate, source), filter((x) => !predicate(x), source)];\n}\nexport function scan(collector, state, source) {\n    return new Observable((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function split(splitter, source) {\n    return [choose((v) => tryValueIfChoice1(splitter(v)), source), choose((v) => tryValueIfChoice2(splitter(v)), source)];\n}\nexport function subscribe(callback, source) {\n    return source.Subscribe(new Observer(callback));\n}\n//# sourceMappingURL=Observable.js.map","import { Observer, protect } from \"./Observable\";\nimport { some, tryValueIfChoice1, tryValueIfChoice2, value } from \"./Option\";\nimport { iterate as seqIterate } from \"./Seq\";\nexport default class Event {\n    constructor(_subscriber, delegates) {\n        this._subscriber = _subscriber;\n        this.delegates = delegates || new Array();\n    }\n    Add(f) {\n        this._addHandler(f);\n    }\n    // IEvent<T> methods\n    get Publish() {\n        return this;\n    }\n    Trigger(value) {\n        seqIterate((f) => f(value), this.delegates);\n    }\n    // IDelegateEvent<T> methods\n    AddHandler(handler) {\n        if (this._dotnetDelegates == null) {\n            this._dotnetDelegates = new Map();\n        }\n        const f = (x) => handler(null, x);\n        this._dotnetDelegates.set(handler, f);\n        this._addHandler(f);\n    }\n    RemoveHandler(handler) {\n        if (this._dotnetDelegates != null) {\n            const f = this._dotnetDelegates.get(handler);\n            if (f != null) {\n                this._dotnetDelegates.delete(handler);\n                this._removeHandler(f);\n            }\n        }\n    }\n    // IObservable<T> methods\n    Subscribe(arg) {\n        return typeof arg === \"function\"\n            ? this._subscribeFromCallback(arg)\n            : this._subscribeFromObserver(arg);\n    }\n    _addHandler(f) {\n        this.delegates.push(f);\n    }\n    _removeHandler(f) {\n        const index = this.delegates.indexOf(f);\n        if (index > -1) {\n            this.delegates.splice(index, 1);\n        }\n    }\n    _subscribeFromObserver(observer) {\n        if (this._subscriber) {\n            return this._subscriber(observer);\n        }\n        const callback = observer.OnNext;\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n    _subscribeFromCallback(callback) {\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n}\nexport function add(callback, sourceEvent) {\n    sourceEvent.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function filter(predicate, sourceEvent) {\n    return choose((x) => predicate(x) ? some(x) : null, sourceEvent);\n}\nexport function map(mapping, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => mapping(t), observer.OnNext, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function merge(event1, event2) {\n    const source1 = event1;\n    const source2 = event2;\n    return new Event((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    }, source1.delegates.concat(source2.delegates));\n}\nexport function pairwise(sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        let last = null;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function partition(predicate, sourceEvent) {\n    return [filter(predicate, sourceEvent), filter((x) => !predicate(x), sourceEvent)];\n}\nexport function scan(collector, state, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function split(splitter, sourceEvent) {\n    return [\n        choose((v) => tryValueIfChoice1(splitter(v)), sourceEvent),\n        choose((v) => tryValueIfChoice2(splitter(v)), sourceEvent),\n    ];\n}\n//# sourceMappingURL=Event.js.map","import Event from \"./Event\";\nexport default class Timer {\n    constructor(interval) {\n        this.Interval = interval > 0 ? interval : 100;\n        this.AutoReset = true;\n        this._elapsed = new Event();\n    }\n    get Elapsed() {\n        return this._elapsed;\n    }\n    get Enabled() {\n        return this._enabled;\n    }\n    set Enabled(x) {\n        if (!this._isDisposed && this._enabled !== x) {\n            this._enabled = x;\n            if (this._enabled) {\n                if (this.AutoReset) {\n                    this._intervalId = setInterval(() => {\n                        if (!this.AutoReset) {\n                            this.Enabled = false;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n                else {\n                    this._timeoutId = setTimeout(() => {\n                        this.Enabled = false;\n                        this._timeoutId = 0;\n                        if (this.AutoReset) {\n                            this.Enabled = true;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n            }\n            else {\n                if (this._timeoutId) {\n                    clearTimeout(this._timeoutId);\n                    this._timeoutId = 0;\n                }\n                if (this._intervalId) {\n                    clearInterval(this._intervalId);\n                    this._intervalId = 0;\n                }\n            }\n        }\n    }\n    Dispose() {\n        this.Enabled = false;\n        this._isDisposed = true;\n    }\n    Close() {\n        this.Dispose();\n    }\n    Start() {\n        this.Enabled = true;\n    }\n    Stop() {\n        this.Enabled = false;\n    }\n}\n//# sourceMappingURL=Timer.js.map","namespace Elmish\n\n(**\nLog\n---------\nBasic cross-platform logging API.\n\n*)\nmodule internal Log =\n\n#if FABLE_COMPILER\n    open Fable.Core.JS\n\n    let onError (text: string, ex: exn) = console.error (text,ex)\n    let toConsole(text: string, o: #obj) = console.log(text,o)\n\n#else\n#if NETSTANDARD2_0\n    let onError (text: string, ex: exn) = System.Diagnostics.Trace.TraceError(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#else\n    let onError (text: string, ex: exn) = System.Console.Error.WriteLine(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#endif\n#endif\n\n#if FABLE_COMPILER\nmodule internal Timer =\n    open System.Timers\n    let delay interval callback =\n        let t = new Timer(float interval, AutoReset = false)\n        t.Elapsed.Add callback\n        t.Enabled <- true\n        t.Start()\n#endif\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>) =\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch x\n                    | _ -> ()\n                }\n            [bind >> start]\n\n    module OfAsync =\n#if FABLE_COMPILER\n        let start x = Timer.delay 0 (fun _ -> Async.StartImmediate x)\n#else\n        let inline start x = Async.Start x\n#endif    \n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","namespace Feliz.MaterialUI\n\n(*////////////////////////////////\n/// THIS FILE IS AUTO-GENERATED //\n////////////////////////////////*)\n\nopen System.ComponentModel\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Fable.React\nopen Feliz\n\n[<AutoOpen; EditorBrowsable(EditorBrowsableState.Never)>]\nmodule MuiHelpers =\n\n  let reactElement (el: ReactElementType) (props: 'a) : ReactElement =\n    import \"createElement\" \"react\"\n\n  let reactElementTag (tag: string) (props: 'a) : ReactElement =\n    import \"createElement\" \"react\"\n\n  let createElement (el: ReactElementType) (properties: IReactProperty seq) : ReactElement =\n    reactElement el (createObj !!properties)\n\n  let createElementTag (tag: string) (properties: IReactProperty seq) : ReactElement =\n    reactElementTag tag (createObj !!properties)\n\n[<Erase>]\ntype Mui =\n\n  static member inline themeProvider props = createElement (import \"ThemeProvider\" \"@material-ui/core/styles\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline appBar props = createElement (importDefault \"@material-ui/core/AppBar\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline appBar (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/AppBar\") [ Feliz.MaterialUI.appBar.children (children :> ReactElement seq) ]\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline autocomplete props = createElement (importDefault \"@material-ui/lab/Autocomplete\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline avatar props = createElement (importDefault \"@material-ui/core/Avatar\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline avatar (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Avatar\") [ Feliz.MaterialUI.avatar.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline backdrop props = createElement (importDefault \"@material-ui/core/Backdrop\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline backdrop (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Backdrop\") [ Feliz.MaterialUI.backdrop.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline badge props = createElement (importDefault \"@material-ui/core/Badge\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline badge (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Badge\") [ Feliz.MaterialUI.badge.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline bottomNavigation props = createElement (importDefault \"@material-ui/core/BottomNavigation\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline bottomNavigation (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/BottomNavigation\") [ Feliz.MaterialUI.bottomNavigation.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline bottomNavigationAction props = createElement (importDefault \"@material-ui/core/BottomNavigationAction\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline breadcrumbs props = createElement (importDefault \"@material-ui/core/Breadcrumbs\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline breadcrumbs (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Breadcrumbs\") [ Feliz.MaterialUI.breadcrumbs.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline button props = createElement (importDefault \"@material-ui/core/Button\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline button (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Button\") [ Feliz.MaterialUI.button.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline buttonBase props = createElement (importDefault \"@material-ui/core/ButtonBase\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline buttonBase (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ButtonBase\") [ Feliz.MaterialUI.buttonBase.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline buttonGroup props = createElement (importDefault \"@material-ui/core/ButtonGroup\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline buttonGroup (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ButtonGroup\") [ Feliz.MaterialUI.buttonGroup.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline card props = createElement (importDefault \"@material-ui/core/Card\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline card (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Card\") [ Feliz.MaterialUI.card.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline cardActionArea props = createElement (importDefault \"@material-ui/core/CardActionArea\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline cardActionArea (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/CardActionArea\") [ Feliz.MaterialUI.cardActionArea.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardActions props = createElement (importDefault \"@material-ui/core/CardActions\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardActions (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/CardActions\") [ Feliz.MaterialUI.cardActions.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardContent props = createElement (importDefault \"@material-ui/core/CardContent\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardContent (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/CardContent\") [ Feliz.MaterialUI.cardContent.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardHeader props = createElement (importDefault \"@material-ui/core/CardHeader\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardMedia props = createElement (importDefault \"@material-ui/core/CardMedia\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline cardMedia (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/CardMedia\") [ Feliz.MaterialUI.cardMedia.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([IconButton](https://material-ui.com/api/icon-button/)).\n  static member inline checkbox props = createElement (importDefault \"@material-ui/core/Checkbox\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline chip props = createElement (importDefault \"@material-ui/core/Chip\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline circularProgress props = createElement (importDefault \"@material-ui/core/CircularProgress\") props\n\n  /// The component cannot hold a ref.\n  static member inline clickAwayListener props = createElement (importDefault \"@material-ui/core/ClickAwayListener\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition/#Transition-props)).\n  static member inline collapse props = createElement (importDefault \"@material-ui/core/Collapse\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition/#Transition-props)).\n  static member inline collapse (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Collapse\") [ Feliz.MaterialUI.collapse.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline container props = createElement (importDefault \"@material-ui/core/Container\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline container (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Container\") [ Feliz.MaterialUI.container.children (children :> ReactElement seq) ]\n\n  /// The component cannot hold a ref.\n  static member inline cssBaseline props = createElement (importDefault \"@material-ui/core/CssBaseline\") props\n\n  /// The component cannot hold a ref.\n  static member inline cssBaseline (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/CssBaseline\") [ Feliz.MaterialUI.cssBaseline.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Modal](https://material-ui.com/api/modal/)).\n  static member inline dialog props = createElement (importDefault \"@material-ui/core/Dialog\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Modal](https://material-ui.com/api/modal/)).\n  static member inline dialog (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Dialog\") [ Feliz.MaterialUI.dialog.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogActions props = createElement (importDefault \"@material-ui/core/DialogActions\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogActions (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/DialogActions\") [ Feliz.MaterialUI.dialogActions.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogContent props = createElement (importDefault \"@material-ui/core/DialogContent\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogContent (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/DialogContent\") [ Feliz.MaterialUI.dialogContent.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Typography](https://material-ui.com/api/typography/)).\n  static member inline dialogContentText props = createElement (importDefault \"@material-ui/core/DialogContentText\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Typography](https://material-ui.com/api/typography/)).\n  static member inline dialogContentText (text: string) = createElement (importDefault \"@material-ui/core/DialogContentText\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Typography](https://material-ui.com/api/typography/)).\n  static member inline dialogContentText (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/DialogContentText\") [ Feliz.MaterialUI.dialogContentText.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogTitle props = createElement (importDefault \"@material-ui/core/DialogTitle\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogTitle (text: string) = createElement (importDefault \"@material-ui/core/DialogTitle\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline dialogTitle (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/DialogTitle\") [ Feliz.MaterialUI.dialogTitle.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline divider props = createElement (importDefault \"@material-ui/core/Divider\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline drawer props = createElement (importDefault \"@material-ui/core/Drawer\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline drawer (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Drawer\") [ Feliz.MaterialUI.drawer.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline expansionPanel props = createElement (importDefault \"@material-ui/core/ExpansionPanel\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline expansionPanel (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ExpansionPanel\") [ Feliz.MaterialUI.expansionPanel.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline expansionPanelActions props = createElement (importDefault \"@material-ui/core/ExpansionPanelActions\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline expansionPanelActions (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ExpansionPanelActions\") [ Feliz.MaterialUI.expansionPanelActions.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline expansionPanelDetails props = createElement (importDefault \"@material-ui/core/ExpansionPanelDetails\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline expansionPanelDetails (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ExpansionPanelDetails\") [ Feliz.MaterialUI.expansionPanelDetails.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline expansionPanelSummary props = createElement (importDefault \"@material-ui/core/ExpansionPanelSummary\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline expansionPanelSummary (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ExpansionPanelSummary\") [ Feliz.MaterialUI.expansionPanelSummary.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline fab props = createElement (importDefault \"@material-ui/core/Fab\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline fab (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Fab\") [ Feliz.MaterialUI.fab.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition/#Transition-props)).\n  static member inline fade props = createElement (importDefault \"@material-ui/core/Fade\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([InputBase](https://material-ui.com/api/input-base/)).\n  static member inline filledInput props = createElement (importDefault \"@material-ui/core/FilledInput\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formControl props = createElement (importDefault \"@material-ui/core/FormControl\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formControl (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/FormControl\") [ Feliz.MaterialUI.formControl.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formControlLabel props = createElement (importDefault \"@material-ui/core/FormControlLabel\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formGroup props = createElement (importDefault \"@material-ui/core/FormGroup\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formGroup (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/FormGroup\") [ Feliz.MaterialUI.formGroup.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formHelperText props = createElement (importDefault \"@material-ui/core/FormHelperText\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formHelperText (text: string) = createElement (importDefault \"@material-ui/core/FormHelperText\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formHelperText (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/FormHelperText\") [ Feliz.MaterialUI.formHelperText.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formLabel props = createElement (importDefault \"@material-ui/core/FormLabel\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formLabel (text: string) = createElement (importDefault \"@material-ui/core/FormLabel\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline formLabel (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/FormLabel\") [ Feliz.MaterialUI.formLabel.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline grid props = createElement (importDefault \"@material-ui/core/Grid\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline grid (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Grid\") [ Feliz.MaterialUI.grid.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline gridList props = createElement (importDefault \"@material-ui/core/GridList\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline gridList (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/GridList\") [ Feliz.MaterialUI.gridList.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline gridListTile props = createElement (importDefault \"@material-ui/core/GridListTile\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline gridListTile (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/GridListTile\") [ Feliz.MaterialUI.gridListTile.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline gridListTileBar props = createElement (importDefault \"@material-ui/core/GridListTileBar\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition/#Transition-props)).\n  static member inline grow props = createElement (importDefault \"@material-ui/core/Grow\") props\n\n  /// The component cannot hold a ref.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline hidden props = createElement (importDefault \"@material-ui/core/Hidden\") props\n\n  /// The component cannot hold a ref.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline hidden (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Hidden\") [ Feliz.MaterialUI.hidden.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline icon props = createElement (importDefault \"@material-ui/core/Icon\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline icon (name: string) = createElement (importDefault \"@material-ui/core/Icon\") [ prop.children (Html.text name) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline icon (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Icon\") [ Feliz.MaterialUI.icon.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline iconButton props = createElement (importDefault \"@material-ui/core/IconButton\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline iconButton (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/IconButton\") [ Feliz.MaterialUI.iconButton.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([InputBase](https://material-ui.com/api/input-base/)).\n  static member inline input props = createElement (importDefault \"@material-ui/core/Input\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline inputAdornment props = createElement (importDefault \"@material-ui/core/InputAdornment\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline inputAdornment (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/InputAdornment\") [ Feliz.MaterialUI.inputAdornment.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline inputBase props = createElement (importDefault \"@material-ui/core/InputBase\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([FormLabel](https://material-ui.com/api/form-label/)).\n  static member inline inputLabel props = createElement (importDefault \"@material-ui/core/InputLabel\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([FormLabel](https://material-ui.com/api/form-label/)).\n  static member inline inputLabel (text: string) = createElement (importDefault \"@material-ui/core/InputLabel\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([FormLabel](https://material-ui.com/api/form-label/)).\n  static member inline inputLabel (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/InputLabel\") [ Feliz.MaterialUI.inputLabel.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline linearProgress props = createElement (importDefault \"@material-ui/core/LinearProgress\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Typography](https://material-ui.com/api/typography/)).\n  static member inline link props = createElement (importDefault \"@material-ui/core/Link\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Typography](https://material-ui.com/api/typography/)).\n  static member inline link (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Link\") [ Feliz.MaterialUI.link.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline list props = createElement (importDefault \"@material-ui/core/List\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline list (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/List\") [ Feliz.MaterialUI.list.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItem props = createElement (importDefault \"@material-ui/core/ListItem\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItem (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ListItem\") [ Feliz.MaterialUI.listItem.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemAvatar props = createElement (importDefault \"@material-ui/core/ListItemAvatar\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemIcon props = createElement (importDefault \"@material-ui/core/ListItemIcon\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemSecondaryAction props = createElement (importDefault \"@material-ui/core/ListItemSecondaryAction\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemSecondaryAction (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ListItemSecondaryAction\") [ Feliz.MaterialUI.listItemSecondaryAction.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemText props = createElement (importDefault \"@material-ui/core/ListItemText\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemText (primary: string) = createElement (importDefault \"@material-ui/core/ListItemText\") [ listItemText.primary primary ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listItemText (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ListItemText\") [ Feliz.MaterialUI.listItemText.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listSubheader props = createElement (importDefault \"@material-ui/core/ListSubheader\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listSubheader (text: string) = createElement (importDefault \"@material-ui/core/ListSubheader\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline listSubheader (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/ListSubheader\") [ Feliz.MaterialUI.listSubheader.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Popover](https://material-ui.com/api/popover/)).\n  static member inline menu props = createElement (importDefault \"@material-ui/core/Menu\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Popover](https://material-ui.com/api/popover/)).\n  static member inline menu (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Menu\") [ Feliz.MaterialUI.menu.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ListItem](https://material-ui.com/api/list-item/)).\n  static member inline menuItem props = createElement (importDefault \"@material-ui/core/MenuItem\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ListItem](https://material-ui.com/api/list-item/)).\n  static member inline menuItem (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/MenuItem\") [ Feliz.MaterialUI.menuItem.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([List](https://material-ui.com/api/list/)).\n  static member inline menuList props = createElement (importDefault \"@material-ui/core/MenuList\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([List](https://material-ui.com/api/list/)).\n  static member inline menuList (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/MenuList\") [ Feliz.MaterialUI.menuList.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline mobileStepper props = createElement (importDefault \"@material-ui/core/MobileStepper\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline modal props = createElement (importDefault \"@material-ui/core/Modal\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Input](https://material-ui.com/api/input/)).\n  static member inline nativeSelect props = createElement (importDefault \"@material-ui/core/NativeSelect\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Input](https://material-ui.com/api/input/)).\n  static member inline nativeSelect (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/NativeSelect\") [ Feliz.MaterialUI.nativeSelect.children (children :> ReactElement seq) ]\n\n  /// The component cannot hold a ref.\n  static member inline noSsr props = createElement (importDefault \"@material-ui/core/NoSsr\") props\n\n  /// The component cannot hold a ref.\n  static member inline noSsr (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/NoSsr\") [ Feliz.MaterialUI.noSsr.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([InputBase](https://material-ui.com/api/input-base/)).\n  static member inline outlinedInput props = createElement (importDefault \"@material-ui/core/OutlinedInput\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline paper props = createElement (importDefault \"@material-ui/core/Paper\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline paper (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Paper\") [ Feliz.MaterialUI.paper.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Modal](https://material-ui.com/api/modal/)).\n  static member inline popover props = createElement (importDefault \"@material-ui/core/Popover\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Modal](https://material-ui.com/api/modal/)).\n  static member inline popover (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Popover\") [ Feliz.MaterialUI.popover.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline popper props = createElement (importDefault \"@material-ui/core/Popper\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline popper (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Popper\") [ Feliz.MaterialUI.popper.children (children :> ReactElement seq) ]\n\n  /// The component cannot hold a ref.\n  static member inline portal props = createElement (importDefault \"@material-ui/core/Portal\") props\n\n  /// The component cannot hold a ref.\n  static member inline portal (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Portal\") [ Feliz.MaterialUI.portal.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([IconButton](https://material-ui.com/api/icon-button/)).\n  static member inline radio props = createElement (importDefault \"@material-ui/core/Radio\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([FormGroup](https://material-ui.com/api/form-group/)).\n  static member inline radioGroup props = createElement (importDefault \"@material-ui/core/RadioGroup\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([FormGroup](https://material-ui.com/api/form-group/)).\n  static member inline radioGroup (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/RadioGroup\") [ Feliz.MaterialUI.radioGroup.children (children :> ReactElement seq) ]\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline rating props = createElement (importDefault \"@material-ui/lab/Rating\") props\n\n  /// The component cannot hold a ref.\n  static member inline rootRef props = createElement (importDefault \"@material-ui/core/RootRef\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Input](https://material-ui.com/api/input/)).\n  static member inline select props = createElement (importDefault \"@material-ui/core/Select\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Input](https://material-ui.com/api/input/)).\n  static member inline select (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Select\") [ Feliz.MaterialUI.select.children (children :> ReactElement seq) ]\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline skeleton props = createElement (importDefault \"@material-ui/lab/Skeleton\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition/#Transition-props)).\n  static member inline slide props = createElement (importDefault \"@material-ui/core/Slide\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline slider props = createElement (importDefault \"@material-ui/core/Slider\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline snackbar props = createElement (importDefault \"@material-ui/core/Snackbar\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline snackbarContent props = createElement (importDefault \"@material-ui/core/SnackbarContent\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline speedDial props = createElement (importDefault \"@material-ui/lab/SpeedDial\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline speedDial (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/lab/SpeedDial\") [ Feliz.MaterialUI.speedDial.children (children :> ReactElement seq) ]\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Tooltip](https://material-ui.com/api/tooltip/)).\n  static member inline speedDialAction props = createElement (importDefault \"@material-ui/lab/SpeedDialAction\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline speedDialIcon props = createElement (importDefault \"@material-ui/lab/SpeedDialIcon\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline step props = createElement (importDefault \"@material-ui/core/Step\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline step (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Step\") [ Feliz.MaterialUI.step.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline stepButton props = createElement (importDefault \"@material-ui/core/StepButton\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline stepButton (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/StepButton\") [ Feliz.MaterialUI.stepButton.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepConnector props = createElement (importDefault \"@material-ui/core/StepConnector\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepContent props = createElement (importDefault \"@material-ui/core/StepContent\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepContent (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/StepContent\") [ Feliz.MaterialUI.stepContent.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepIcon props = createElement (importDefault \"@material-ui/core/StepIcon\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepLabel props = createElement (importDefault \"@material-ui/core/StepLabel\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepLabel (text: string) = createElement (importDefault \"@material-ui/core/StepLabel\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline stepLabel (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/StepLabel\") [ Feliz.MaterialUI.stepLabel.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline stepper props = createElement (importDefault \"@material-ui/core/Stepper\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Paper](https://material-ui.com/api/paper/)).\n  static member inline stepper (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Stepper\") [ Feliz.MaterialUI.stepper.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline svgIcon props = createElement (importDefault \"@material-ui/core/SvgIcon\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline svgIcon (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/SvgIcon\") [ Feliz.MaterialUI.svgIcon.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Drawer](https://material-ui.com/api/drawer/)).\n  static member inline swipeableDrawer props = createElement (importDefault \"@material-ui/core/SwipeableDrawer\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Drawer](https://material-ui.com/api/drawer/)).\n  static member inline swipeableDrawer (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/SwipeableDrawer\") [ Feliz.MaterialUI.swipeableDrawer.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([IconButton](https://material-ui.com/api/icon-button/)).\n  static member inline switch props = createElement (importDefault \"@material-ui/core/Switch\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline tab props = createElement (importDefault \"@material-ui/core/Tab\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline table props = createElement (importDefault \"@material-ui/core/Table\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline table (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Table\") [ Feliz.MaterialUI.table.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableBody props = createElement (importDefault \"@material-ui/core/TableBody\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableBody (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/TableBody\") [ Feliz.MaterialUI.tableBody.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableCell props = createElement (importDefault \"@material-ui/core/TableCell\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableCell (text: string) = createElement (importDefault \"@material-ui/core/TableCell\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableCell (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/TableCell\") [ Feliz.MaterialUI.tableCell.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableFooter props = createElement (importDefault \"@material-ui/core/TableFooter\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableFooter (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/TableFooter\") [ Feliz.MaterialUI.tableFooter.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableHead props = createElement (importDefault \"@material-ui/core/TableHead\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableHead (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/TableHead\") [ Feliz.MaterialUI.tableHead.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([TableCell](https://material-ui.com/api/table-cell/)).\n  static member inline tablePagination props = createElement (importDefault \"@material-ui/core/TablePagination\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableRow props = createElement (importDefault \"@material-ui/core/TableRow\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tableRow (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/TableRow\") [ Feliz.MaterialUI.tableRow.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline tableSortLabel props = createElement (importDefault \"@material-ui/core/TableSortLabel\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline tableSortLabel (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/TableSortLabel\") [ Feliz.MaterialUI.tableSortLabel.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tabs props = createElement (importDefault \"@material-ui/core/Tabs\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tabs (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Tabs\") [ Feliz.MaterialUI.tabs.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline textareaAutosize props = createElement (importDefault \"@material-ui/core/TextareaAutosize\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([FormControl](https://material-ui.com/api/form-control/)).\n  static member inline textField props = createElement (importDefault \"@material-ui/core/TextField\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline toggleButton props = createElement (importDefault \"@material-ui/lab/ToggleButton\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([ButtonBase](https://material-ui.com/api/button-base/)).\n  static member inline toggleButton (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/lab/ToggleButton\") [ Feliz.MaterialUI.toggleButton.children (children :> ReactElement seq) ]\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline toggleButtonGroup props = createElement (importDefault \"@material-ui/lab/ToggleButtonGroup\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline toggleButtonGroup (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/lab/ToggleButtonGroup\") [ Feliz.MaterialUI.toggleButtonGroup.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline toolbar props = createElement (importDefault \"@material-ui/core/Toolbar\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline toolbar (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Toolbar\") [ Feliz.MaterialUI.toolbar.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline tooltip props = createElement (importDefault \"@material-ui/core/Tooltip\") props\n\n  /// The `ref` is attached to an Imperative Handle. Have a look at the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ButtonBase/TouchRipple.js) for more detail.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline touchRipple props = createElement (importDefault \"@material-ui/core/ButtonBase/TouchRipple.js/TouchRipple\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline treeItem props = createElement (importDefault \"@material-ui/lab/TreeItem\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline treeItem (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/lab/TreeItem\") [ Feliz.MaterialUI.treeItem.children (children :> ReactElement seq) ]\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline treeView props = createElement (importDefault \"@material-ui/lab/TreeView\") props\n\n  /// **This is an experimental component from @material-ui/lab. Breaking changes may occur at any time.**\n  ///\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline treeView (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/lab/TreeView\") [ Feliz.MaterialUI.treeView.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline typography props = createElement (importDefault \"@material-ui/core/Typography\") props\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline typography (text: string) = createElement (importDefault \"@material-ui/core/Typography\") [ prop.children (Html.text text) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element (native element).\n  static member inline typography (children: #seq<ReactElement>) = createElement (importDefault \"@material-ui/core/Typography\") [ Feliz.MaterialUI.typography.children (children :> ReactElement seq) ]\n\n  /// The `ref` is forwarded to the root element.\n  ///\n  /// Any other props supplied will be provided to the root element ([Transition](https://reactcommunity.org/react-transition-group/transition/#Transition-props)).\n  static member inline zoom props = createElement (importDefault \"@material-ui/core/Zoom\") props\n","namespace Feliz\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nmodule internal ReactInterop =\r\n    let useEffectWithDeps (effect:  obj) (deps: obj) : unit = import \"useEffectWithDeps\" \"./ReactInterop.js\"\r\n    let useEffect (effect: obj) : unit =  import \"useEffect\" \"./ReactInterop.js\"\r\n\r\ntype internal Internal() =\r\n    static let propsWithKey (withKey: ('props -> string) option) props =\r\n        match withKey with\r\n        | Some f ->\r\n            props?key <- f props\r\n            props\r\n        | None -> props\r\n    static member\r\n        functionComponent\r\n        (\r\n            renderElement: 'props -> ReactElement,\r\n            ?name: string,\r\n            ?withKey: 'props -> string\r\n        )\r\n        : Fable.React.FunctionComponent<'props> =\r\n            name |> Option.iter (fun name -> renderElement?displayName <- name)\r\n            fun props ->\r\n                let props = props |> propsWithKey withKey\r\n                Interop.reactApi.createElement(renderElement, props)\r\n    static member\r\n        memo\r\n        (\r\n            renderElement: 'props -> ReactElement,\r\n            ?name: string,\r\n            ?areEqual: 'props -> 'props -> bool,\r\n            ?withKey: 'props -> string\r\n        )\r\n        : Fable.React.FunctionComponent<'props> =\r\n            let memoElementType = Interop.reactApi.memo(renderElement, (defaultArg areEqual (unbox null)))\r\n            name |> Option.iter (fun name -> memoElementType?displayName <- name)\r\n            fun props ->\r\n                let props = props |> propsWithKey withKey\r\n                Interop.reactApi.createElement(memoElementType, props)\r\n\r\ntype React =\r\n    /// The `useState` hook that create a state variable for React function components.\r\n    static member useState<'t>(initial: 't) = Interop.reactApi.useState(initial)\r\n    static member useReducer(update, initialState) = Interop.reactApi.useReducer update initialState\r\n    /// The `useEffect` hook that creates a disposable effect for React function components\r\n    /// This effect has no dependencies which means the effect is re-executed on every re-render.\r\n    /// To make the effect run once (for example you subscribe once to web sockets) then provide an empty array\r\n    /// for the dependencies: `React.useEffect(disposableEffect, [| |])`.\r\n    static member useEffect(effect: unit -> IDisposable) : unit = ReactInterop.useEffect(effect)\r\n    /// The `useEffect` hook that creates a disposable effect for React function components.\r\n    /// This effect takes a array of *dependencies*.\r\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\r\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\r\n    static member useEffect(effect: unit -> IDisposable, dependencies: obj []) : unit = ReactInterop.useEffectWithDeps effect dependencies\r\n    /// Creates a disposable instance by providing the implementation of the dispose member\r\n    static member createDisposable(dispose: unit -> unit) =\r\n        { new IDisposable with member this.Dispose() = dispose() }\r\n\r\n    /// React hook to define and use an effect only once when a function component renders for the first time.\r\n    /// This an alias for `React.useEffect(effect, [| |])` which explicitly provide an empty array for the dependencies of the effect which means the effect will only run once.\r\n    static member useEffectOnce(effect: unit -> unit) =\r\n        React.useEffect(effect, [| |])\r\n\r\n    /// React hook to define and use a disposable effect only once when a function component renders for the first time.\r\n    /// This an alias for `React.useEffect(effect, [| |])` which explicitly provide an empty array for the dependencies of the effect which means the effect will only run once.\r\n    static member useEffectOnce(effect: unit -> IDisposable) =\r\n        React.useEffect(effect, [| |])\r\n    /// The `useEffect` hook that creates an effect for React function components.\r\n    /// This effect is executed *every time* the function component re-renders.\r\n    ///\r\n    /// To make the effect run only once, write: `React.useEffect(effect, [| |])` which explicitly states\r\n    /// that this effect has no dependencies and should only run once on initial render.\r\n    static member useEffect(effect: unit -> unit) : unit =\r\n        ReactInterop.useEffect\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n\r\n    /// The `useEffect` hook that creates an effect for React function components. This effect takes a array of *dependencies*.\r\n    /// Whenever any of these dependencies change, the effect is re-executed. To execute the effect only once,\r\n    /// you have to explicitly provide an empty array for the dependencies: `React.useEffect(effect, [| |])`.\r\n    static member useEffect(effect: unit -> unit, dependencies: obj []) : unit =\r\n        ReactInterop.useEffectWithDeps\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n            dependencies\r\n\r\n    /// <summary>\r\n    /// The `useCallback` hook. Returns a memoized callback. Pass an inline callback and an array of dependencies.\r\n    /// `useCallback` will return a memoized version of the callback that only changes if one of the dependencies has changed.\r\n    /// </summary>\r\n    /// <param name='callbackFunction'>A callback function to be memoized.</param>\r\n    /// <param name='dependencies'>An array of dependencies upon which the callback function depends.\r\n    /// If not provided, defaults to empty array, representing dependencies that never change.</param>\r\n    static member useCallback(callbackFunction: 'a -> 'b, ?dependencies: obj array) =\r\n        Interop.reactApi.useCallback callbackFunction (defaultArg dependencies [||])\r\n\r\n    /// <summary>\r\n    /// The `useMemo` hook. Returns a memoized value. Pass a \"create\" function and an array of dependencies.\r\n    /// `useMemo` will only recompute the memoized value when one of the dependencies has changed.\r\n    /// </summary>\r\n    /// <param name='createFunction'>A create function returning a value to be memoized.</param>\r\n    /// <param name='dependencies'>An array of dependencies upon which the create function depends.\r\n    /// If not provided, defaults to empty array, representing dependencies that never change.</param>\r\n    static member useMemo(createFunction: unit -> 'a, ?dependencies: obj array) =\r\n        Interop.reactApi.useMemo createFunction (defaultArg dependencies [||])\r\n\r\n    //\r\n    // React.functionComponent\r\n    //\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member functionComponent(render: 'props -> ReactElement) =\r\n        Internal.functionComponent(render)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member functionComponent(name: string, render: 'props -> ReactElement) =\r\n        Internal.functionComponent(render, name)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member functionComponent(withKey: 'props -> string, render: 'props -> ReactElement) =\r\n        Internal.functionComponent(render, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member functionComponent(name: string, withKey: 'props -> string, render: 'props -> ReactElement) =\r\n        Internal.functionComponent(render, name, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member functionComponent(render: 'props -> #seq<ReactElement>) =\r\n        Internal.functionComponent(render >> Html.fragment)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member functionComponent(name: string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.functionComponent(render >> Html.fragment, name)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member functionComponent(withKey: 'props -> string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.functionComponent(render >> Html.fragment, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// Creates a React function component from a function that accepts a \"props\" object and renders a result.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member functionComponent(name: string, withKey: 'props -> string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.functionComponent(render >> Html.fragment, name, withKey=withKey)\r\n\r\n    //\r\n    // React.memo\r\n    //\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(render: 'props -> ReactElement) =\r\n        Internal.memo(render)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(name: string, render: 'props -> ReactElement) =\r\n        Internal.memo(render, name)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(areEqual: 'props -> 'props -> bool, render: 'props -> ReactElement) =\r\n        Internal.memo(render, areEqual=areEqual)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(withKey: 'props -> string, render: 'props -> ReactElement) =\r\n        Internal.memo(render, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(name: string, areEqual: 'props -> 'props -> bool, render: 'props -> ReactElement) =\r\n        Internal.memo(render, name, areEqual=areEqual)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(name: string, withKey: 'props -> string, render: 'props -> ReactElement) =\r\n        Internal.memo(render, name, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(areEqual: 'props -> 'props -> bool, withKey: 'props -> string, render: 'props -> ReactElement) =\r\n        Internal.memo(render, areEqual=areEqual, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function or a React.functionComponent.</param>\r\n    static member memo(name: string, areEqual: 'props -> 'props -> bool, withKey: 'props -> string, render: 'props -> ReactElement) =\r\n        Internal.memo(render, name, areEqual=areEqual, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(name: string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, name)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(areEqual: 'props -> 'props -> bool, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, areEqual=areEqual)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(withKey: 'props -> string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(name: string, areEqual: 'props -> 'props -> bool, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, name, areEqual=areEqual)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(name: string, withKey: 'props -> string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, name, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(areEqual: 'props -> 'props -> bool, withKey: 'props -> string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, areEqual=areEqual, withKey=withKey)\r\n\r\n    /// <summary>\r\n    /// `React.memo` memoizes the result of a function component. Given the same props, React will skip rendering the component, and reuse the last rendered result.\r\n    /// By default it will only shallowly compare complex objects in the props object. For more control, a custom `areEqual` function can be provided.\r\n    /// A component key can be provided in the props object, or a custom `withKey` function can be provided.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='areEqual'>A custom comparison function to use instead of React's default shallow compare.</param>\r\n    /// <param name='withKey'>A function to derive a component key from the props.</param>\r\n    /// <param name='render'>A render function that returns a list of elements.</param>\r\n    static member memo(name: string, areEqual: 'props -> 'props -> bool, withKey: 'props -> string, render: 'props -> #seq<ReactElement>) =\r\n        Internal.memo(render >> Html.fragment, name, areEqual=areEqual, withKey=withKey)\r\n\r\n    //\r\n    // React.useContext\r\n    //\r\n\r\n    /// <summary>\r\n    /// Creates a Context object. When React renders a component that subscribes to this Context object\r\n    /// it will read the current context value from the closest matching Provider above it in the tree.\r\n    /// </summary>\r\n    /// <param name='name'>The component name to display in the React dev tools.</param>\r\n    /// <param name='defaultValue'>A default value that is only used when a component does not have a matching Provider above it in the tree.</param>\r\n    static member createContext<'a>(?name: string, ?defaultValue: 'a) =\r\n        let contextObject = Interop.reactApi.createContext (defaultArg defaultValue Fable.Core.JS.undefined<'a>)\r\n        name |> Option.iter (fun name -> contextObject?displayName <- name)\r\n        contextObject\r\n\r\n    /// <summary>\r\n    /// A Provider component that allows consuming components to subscribe to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='contextValue'>The context value to be provided to descendant components.</param>\r\n    /// <param name='child'>A child element.</param>\r\n    static member contextProvider(contextObject: Fable.React.IContext<'a>, contextValue: 'a, child: ReactElement) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Provider, createObj [\"value\" ==> contextValue], [child])\r\n    /// <summary>\r\n    /// A Provider component that allows consuming components to subscribe to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='contextValue'>The context value to be provided to descendant components.</param>\r\n    /// <param name='children'>A sequence of child elements.</param>\r\n    static member contextProvider(contextObject: Fable.React.IContext<'a>, contextValue: 'a, children: #seq<ReactElement>) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Provider, createObj [\"value\" ==> contextValue], children)\r\n\r\n    /// <summary>\r\n    /// A Consumer component that subscribes to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='render'>A render function that returns an element.</param>\r\n    static member contextConsumer(contextObject: Fable.React.IContext<'a>, render: 'a -> ReactElement) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Consumer, null, [!!render])\r\n    /// <summary>\r\n    /// A Consumer component that subscribes to context changes.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    /// <param name='render'>A render function that returns a sequence of elements.</param>\r\n    static member contextConsumer(contextObject: Fable.React.IContext<'a>, render: 'a -> #seq<ReactElement>) : ReactElement =\r\n        Interop.reactApi.createElement(contextObject?Consumer, null, [!!(render >> Html.fragment)])\r\n\r\n    /// <summary>\r\n    /// The `useContext` hook. Accepts a context object (the value returned from React.createContext) and returns the current context value for that context.\r\n    /// The current context value is determined by the value prop of the nearest Provider component above the calling component in the tree.\r\n    /// </summary>\r\n    /// <param name='contextObject'>A context object returned from a previous React.createContext call.</param>\r\n    static member useContext(contextObject: Fable.React.IContext<'a>) = Interop.reactApi.useContext contextObject\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.Basic\r\n\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let state,setState = React.useState(DateTime.Now)\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.datePicker [\r\n                        datePicker.label \"Basic Example\"\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                        datePicker.animateYearScrolling true\r\n                    ]\r\n                    Mui.datePicker [\r\n                        datePicker.autoOk true\r\n                        datePicker.label \"Clearable\"\r\n                        datePicker.clearable true\r\n                        datePicker.disableFuture true\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                    Mui.datePicker [\r\n                        datePicker.openTo.year\r\n                        datePicker.format \"dd/MM/yyyy\"\r\n                        datePicker.label \"Date of Birth\"\r\n                        datePicker.disableFuture true\r\n                        datePicker.views [\r\n                            datePicker.views.year\r\n                            datePicker.views.month\r\n                            datePicker.views.date\r\n                        ]\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.KeyboardInput\r\n\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let state,setState = React.useState(DateTime.Now)\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.keyboardDatePicker [\r\n                        keyboardDatePicker.clearable true\r\n                        keyboardDatePicker.value state\r\n                        keyboardDatePicker.placeholder \"10/10/2018\"\r\n                        keyboardDatePicker.onChange (fun d _ -> setState d)\r\n                        keyboardDatePicker.minDate DateTime.Now\r\n                        keyboardDatePicker.format \"MM/dd/yyyy\"\r\n                    ]\r\n                    Mui.keyboardDatePicker [\r\n                        keyboardDatePicker.value state\r\n                        keyboardDatePicker.placeholder \"2018/10/10\"\r\n                        keyboardDatePicker.onChange (fun d _ -> setState d)\r\n                        keyboardDatePicker.format \"yyyy/MM/dd\"\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.DifferentViews\r\n\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let state,setState = React.useState(DateTime.Now)\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.datePicker [\r\n                        datePicker.views datePicker.views.year\r\n                        datePicker.label \"Year only\"\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                    Mui.datePicker [\r\n                        datePicker.views [\r\n                            datePicker.views.year\r\n                            datePicker.views.month\r\n                        ]\r\n                        datePicker.label \"Year and Month\"\r\n                        datePicker.minDate (DateTime(2018, 03, 01))\r\n                        datePicker.maxDate (DateTime(2018, 06, 01))\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                    Mui.datePicker [\r\n                        datePicker.variant.inline'\r\n                        datePicker.openTo.year\r\n                        datePicker.views [\r\n                            datePicker.views.year\r\n                            datePicker.views.month\r\n                        ]\r\n                        datePicker.label \"Year and Month\"\r\n                        datePicker.helperText \"Start from year selection\"\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.InlineMode\r\n\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let state,setState = React.useState(DateTime.Now)\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.datePicker [\r\n                        datePicker.variant.inline'\r\n                        datePicker.label \"Basic Example\"\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                    Mui.datePicker [\r\n                        datePicker.disableToolbar true\r\n                        datePicker.variant.inline'\r\n                        datePicker.label \"Only calendar\"\r\n                        datePicker.helperText \"No year selection\"\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                    Mui.keyboardDatePicker [\r\n                        keyboardDatePicker.autoOk true\r\n                        keyboardDatePicker.format \"MM/dd/yyyy\"\r\n                        keyboardDatePicker.label \"With keyboard\"\r\n                        keyboardDatePicker.value state\r\n                        keyboardDatePicker.InputAdornmentProps [\r\n                            inputAdornment.position.start\r\n                        ]\r\n                        keyboardDatePicker.onChange (fun d _ -> setState d)\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.StaticMode\r\n\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let state,setState = React.useState(DateTime.Now)\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.datePicker [\r\n                        datePicker.autoOk true\r\n                        datePicker.variant.static'\r\n                        datePicker.openTo.year\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                    Mui.datePicker [\r\n                        datePicker.autoOk true\r\n                        datePicker.orientation.landscape\r\n                        datePicker.variant.static'\r\n                        datePicker.openTo.date\r\n                        datePicker.value state\r\n                        datePicker.onChange setState\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.Customization\r\n\r\nopen Fable.Core.JsInterop\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet private useStyles : unit -> _ = Styles.makeStyles <| fun (theme: Theme) ->\r\n    {| dayWrapper = Styles.create [ style.position.relative ]\r\n       day = \r\n           Styles.create\r\n             [ style.width 36\r\n               style.height 36\r\n               style.custom (\"fontSize\", theme.typography.caption.fontSize)\r\n               style.margin (0, 2) ]\r\n       customDayHighlight =\r\n           Styles.create\r\n             [ style.position.absolute\r\n               style.top 0\r\n               style.bottom 0\r\n               style.left 2\r\n               style.right 2\r\n               style.border (1, borderStyle.solid, \"#f50057\")\r\n               style.borderRadius (length.percent 50) ]\r\n       nonCurrentMonthDay = Styles.create [ style.color theme.palette.text.disabled ]\r\n       highlightNonCurrentMonthDay = Styles.create [ style.color \"#676767\" ]\r\n       highlight =\r\n           Styles.create\r\n             [ style.backgroundColor \"#3f51b5\"\r\n               style.color theme.palette.common.white ]\r\n       firstHighlight = \r\n           Styles.create \r\n             [ style.custom (\"extend\", \"highlight\")\r\n               style.custom (\"borderTopLeftRadius\", \"50%\")\r\n               style.custom (\"borderBottomLeftRadius\", \"50%\") ]\r\n       endHighlight = \r\n           Styles.create \r\n             [ style.custom (\"extend\", \"highlight\")\r\n               style.custom (\"borderTopRightRadius\", \"50%\")\r\n               style.custom (\"borderBottomRightRadius\", \"50%\") ] |}\r\n\r\nmodule DateFns =\r\n    open Fable.Core.JsInterop\r\n\r\n    let startOfWeek d : DateTime = importDefault \"date-fns/startOfWeek\"\r\n    let endOfWeek d : DateTime = importDefault \"date-fns/endOfWeek\"\r\n    let isWithinInterval d interval : bool = importDefault \"date-fns/isWithinInterval\"\r\n    let isSameDay d1 d2 : bool = importDefault \"date-fns/isSameDay\"\r\n    let format d fmt : string = importDefault \"date-fns/format\"\r\n    let isValid d : bool = importDefault \"date-fns/isValid\"\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let state,setState = React.useState(DateTime.Now)\r\n\r\n    let c = useStyles()\r\n\r\n    let handleWeekChange (date: DateTime) = date |> DateFns.startOfWeek |> setState\r\n\r\n    let renderDay (day: DateTime) (selectedDate: DateTime) dayInCurrentMonth _ =\r\n        let start' = selectedDate |> DateFns.startOfWeek\r\n        let end' = selectedDate |> DateFns.endOfWeek\r\n\r\n        let dayIsBetween = DateFns.isWithinInterval day (createObj !![\"start\",start'; \"end\",end' ])\r\n        let isFirstDay = DateFns.isSameDay day start' \r\n        let isLastDay = DateFns.isSameDay day end'\r\n\r\n        let wrapperClasses = \r\n            [ if dayIsBetween then c.nonCurrentMonthDay\r\n              if isFirstDay then c.firstHighlight\r\n              if isLastDay then c.endHighlight ]\r\n\r\n        let dayClasses =\r\n            [ if dayInCurrentMonth then c.nonCurrentMonthDay\r\n              if dayInCurrentMonth && dayIsBetween then c.highlightNonCurrentMonthDay ]\r\n\r\n        Html.div [\r\n            prop.classes wrapperClasses\r\n            \r\n            prop.children [\r\n                Mui.iconButton [\r\n                    prop.classes dayClasses\r\n                    prop.text (DateFns.format day \"d\")\r\n                ]\r\n            ]\r\n        ]\r\n\r\n    let labelFunc date invalidLabel =\r\n        if DateFns.isValid date then\r\n            date\r\n            |> DateFns.startOfWeek\r\n            |> fun d -> DateFns.format d \"MMM do\"\r\n        else invalidLabel\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.datePicker [\r\n                        datePicker.label \"Week picker\"\r\n                        datePicker.value state\r\n                        datePicker.onChange handleWeekChange\r\n                        datePicker.renderDay renderDay\r\n                        datePicker.labelFunc labelFunc\r\n                        datePicker.animateYearScrolling true\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","\n[<RequireQualifiedAccess>]\nmodule Promise\n\n#nowarn \"1182\" // Unused values\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\n\nlet inline private (!!) (x:obj): 'T = unbox x\n\n[<Emit(\"new Promise($0)\")>]\n/// The promise function receives two other function parameters: success and fail\nlet create (f: ('T->unit)->(Exception->unit)->unit): JS.Promise<'T> = jsNative\n\n[<Emit(\"new Promise(resolve => setTimeout(resolve, $0))\")>]\nlet sleep (ms: int): JS.Promise<unit> = jsNative\n\n[<Emit(\"Promise.resolve($0)\")>]\nlet lift<'T> (a: 'T): JS.Promise<'T> = jsNative\n\n/// Creates promise (in rejected state) with supplied reason.\nlet reject<'T> reason : JS.Promise<'T> = JS.Promise.reject<'T> reason\n\n[<Emit(\"$1.then($0)\")>]\nlet bind (a: 'T->JS.Promise<'R>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\n\n[<Emit(\"$1.then($0)\")>]\nlet map (a: 'T->'R) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\n\n[<Emit(\"$1.then($0)\")>]\nlet iter (a: 'T->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\n/// This version of `catch` fakes a function returning just 'T, as opposed to `Promise<'T>`. If you need to return `Promise<'T>`, use `catchBind`.\nlet catch (fail: Exception->'T) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\n/// This is a version of `catch` that fakes a function returning Promise<'T> as opposed to just 'T. If you need to return just 'T, use `catch`.\nlet catchBind (fail: Exception->JS.Promise<'T>) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\n/// Used to catch errors at the end of a promise chain.\nlet catchEnd (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$2.then($0,$1)\")>]\n/// A combination of `map/bind` and `catch/catchBind`, this function applies the `success` continuation when the input promise resolves successfully, or `fail` continuation when the input promise fails. Both continuations may return either naked value `'R` or another promise `Promise<'R>`. Use the erased-cast operator `!^` to cast values when returning, for example:\n/// ```\n/// somePromise |> Promise.either (fun x -> !^(string x)) (fun err -> ^!(Promise.lift err.Message))\n/// ```\nlet either (success: 'T->U2<'R, JS.Promise<'R>>) (fail: 'E->U2<'R, JS.Promise<'R>>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\n\n[<Emit(\"$2.then($0,$1)\")>]\nlet eitherEnd (success: 'T->unit) (fail: 'E->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$0.then()\")>]\nlet start (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\nlet tryStart (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"Promise.all($0)\")>]\nlet Parallel (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\n\n[<Emit(\"Promise.all($0)\")>]\nlet all (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\n\nlet result (a: JS.Promise<'A>): JS.Promise<Result<'A, 'E>> =\n    either (U2.Case1 << Ok) (U2.Case1 << Error) a\n\nlet mapResult (fn: 'A -> 'B) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\n    a |> map (Result.map fn)\n\nlet bindResult (fn: 'A -> JS.Promise<'B>) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\n    a |> bind (fun a ->\n        match a with\n        | Ok a ->\n            result (fn a)\n        | Error e ->\n            lift (Error e))\n\nlet mapResultError (fn: 'B -> 'C) (a: JS.Promise<Result<'A,'B>>): JS.Promise<Result<'A,'C>> =\n    a |> map (Result.mapError fn)\n\nlet tap (fn: 'A -> unit) (a: JS.Promise<'A>): JS.Promise<'A> =\n    a |> map (fun x -> fn x; x)\n\ntype PromiseBuilder() =\n    [<Emit(\"$1.then($2)\")>]\n    member x.Bind(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\n\n    [<Emit(\"$1.then(() => $2)\")>]\n    member x.Combine(p1: JS.Promise<unit>, p2: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n    member x.For(seq: seq<'T>, body: 'T->JS.Promise<unit>): JS.Promise<unit> =\n        // (lift (), seq)\n        // ||> Seq.fold (fun p a ->\n        //     bind (fun () -> body a) p)\n        let mutable p = lift ()\n        for a in seq do\n            p <- !!p?``then``(fun () -> body a)\n        p\n\n    [<Emit(\"$1.then($2)\")>]\n    member x.For(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\n\n    member x.While(guard, p): JS.Promise<unit> =\n        if guard()\n        then bind (fun () -> x.While(guard, p)) p\n        else lift()\n\n    [<Emit(\"Promise.resolve($1)\")>]\n    member x.Return(a: 'T): JS.Promise<'T> = jsNative\n\n    [<Emit(\"$1\")>]\n    member x.ReturnFrom(p: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n    [<Emit(\"Promise.resolve()\")>]\n    member x.Zero(): JS.Promise<unit> = jsNative\n\n    member x.TryFinally(p: JS.Promise<'T>, compensation: unit->unit): JS.Promise<'T> =\n        either (fun (x: 'T) -> compensation(); U2.Case1 x) (fun er -> compensation(); raise !!er) p\n\n    [<Emit(\"$1.catch($2)\")>]\n    member x.TryWith(p: JS.Promise<'T>, catchHandler: Exception->JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n    member x.Delay(generator: unit->JS.Promise<'T>): JS.Promise<'T> =\n        !!createObj[\n            \"then\" ==> fun f1 f2 ->\n                try generator()?``then``(f1,f2)\n                with er ->\n                    if box f2 = null\n                    then !!JS.Promise.reject(er)\n                    else\n                        try !!JS.Promise.resolve(f2(er))\n                        with er -> !!JS.Promise.reject(er)\n            \"catch\" ==> fun f ->\n                try generator()?catch(f)\n                with er ->\n                    try !!JS.Promise.resolve(f(er))\n                    with er -> !!JS.Promise.reject(er)\n        ]\n\n    member x.Run(p:JS.Promise<'T>): JS.Promise<'T> =\n        create (fun success fail ->\n            try\n                let p : JS.Promise<'T> = !!JS.Promise.resolve(p)\n                p?``then``(success, fail)\n            with\n              er -> fail(er)\n        )\n\n    member x.Using<'T, 'R when 'T :> IDisposable>(resource: 'T, binder: 'T->JS.Promise<'R>): JS.Promise<'R> =\n        x.TryFinally(binder(resource), fun () -> resource.Dispose())\n\n    [<Emit(\"Promise.all([$1,$2]).then(([a,b]) => $3(a,b))\")>]\n    [<CustomOperation(\"andFor\", IsLikeZip=true)>]\n    member x.Merge(a: JS.Promise<'T1>, b: JS.Promise<'T2>, [<ProjectionParameter>] resultSelector : 'T1 -> 'T2 -> 'R): JS.Promise<'R> = jsNative\n","[<AutoOpen>]\nmodule PromiseImpl\n\nlet promise = Promise.PromiseBuilder()","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Date.DynamicData\r\n\r\nopen Feliz\r\nopen Feliz.MaterialUI\r\nopen Feliz.MaterialUI.Pickers\r\nopen System\r\n\r\nlet rng = Random()\r\n\r\nlet render = React.functionComponent(fun () ->\r\n    let selectedDays, setSelectedDays = React.useState([ 1; 2; 15 ])\r\n    let selectedDate, handleDateChange = React.useState(DateTime.Now)\r\n\r\n    let handleMonthChange _ =\r\n        promise {\r\n            do! Promise.sleep (rng.Next(1000, 3000))\r\n            [ 1 .. 3 ]\r\n            |> List.map (fun _ -> rng.Next(1, 28))\r\n            |> setSelectedDays\r\n        }\r\n\r\n    Mui.pickerUtilsProvider [\r\n        pickerUtilsProvider.utils.dateFns\r\n\r\n        prop.children [\r\n            Mui.grid [\r\n                grid.container true\r\n                grid.direction.row\r\n                grid.justify.spaceEvenly\r\n\r\n                prop.children [\r\n                    Mui.datePicker [\r\n                        datePicker.label \"With server data\"\r\n                        datePicker.value selectedDate\r\n                        datePicker.onChange handleDateChange\r\n                        datePicker.onMonthChange handleMonthChange\r\n                        datePicker.renderDay (fun day selectedDate isInCurrentMonth dayComponent ->\r\n                            let isSelected = isInCurrentMonth && List.contains day.Day selectedDays\r\n\r\n                            Mui.badge [\r\n                                if isSelected then badge.badgeContent \"🌚\"\r\n                                prop.children dayComponent\r\n                            ]\r\n                        )\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ])\r\n","namespace Fable.SimpleHttp\r\n\r\nopen System\r\nopen Browser\r\nopen Browser.Types\r\nopen Fable.Core\r\n\r\n#if !FABLE_COMPILER\r\nopen System.Net.Http\r\n#endif\r\n\r\nmodule Blob =\r\n    /// Creates a Blob from the given input string\r\n    [<Emit(\"new Blob([$0], { 'mimeType':'text/plain' })\")>]\r\n    let fromText (value: string) : Blob = jsNative\r\n\r\n\r\n/// Utility functions to work with blob and file APIs.\r\nmodule FileReader =\r\n    /// Asynchronously reads the blob data content as string\r\n    let readBlobAsText (blob: Blob) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(blob)\r\n\r\n    /// Asynchronously reads the blob data content as string\r\n    let readFileAsText (file: File) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(file)\r\n\r\nmodule FormData =\r\n\r\n    [<Emit(\"new FormData()\")>]\r\n    /// Creates a new FormData object\r\n    let create() : FormData = jsNative\r\n\r\n    /// Appends a key-value pair to the form data\r\n    let append (key:string) (value:string) (form : FormData) : FormData =\r\n        form.append(key, value)\r\n        form\r\n\r\n    /// Appends a file to the form data\r\n    let appendFile (key: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file)\r\n        form\r\n\r\n    /// Appends a named file to the form data\r\n    let appendNamedFile (key: string) (fileName: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file, fileName)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendBlob (key: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendNamedBlob (key: string) (fileName: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob, fileName)\r\n        form\r\n\r\nmodule Headers =\r\n    let contentType value = Header(\"Content-Type\", value)\r\n    let accept value = Header(\"Accept\", value)\r\n    let acceptCharset value = Header(\"Accept-Charset\", value)\r\n    let acceptEncoding value = Header(\"Accept-Encoding\", value)\r\n    let acceptLanguage value = Header(\"Accept-Language\", value)\r\n    let acceptDateTime value = Header(\"Accept-Datetime\", value)\r\n    let authorization value = Header(\"Authorization\", value)\r\n    let cacheControl value = Header(\"Cache-Control\", value)\r\n    let connection value = Header(\"Connection\", value)\r\n    let cookie value = Header(\"Cookie\", value)\r\n    let contentMD5 value = Header(\"Content-MD5\", value)\r\n    let date value = Header(\"Date\", value)\r\n    let expect value = Header(\"Expect\", value)\r\n    let ifMatch value = Header(\"If-Match\", value)\r\n    let ifModifiedSince value = Header(\"If-Modified-Since\", value)\r\n    let ifNoneMatch value = Header(\"If-None-Match\", value)\r\n    let ifRange value = Header(\"If-Range\", value)\r\n    let IfUnmodifiedSince value = Header(\"If-Unmodified-Since\", value)\r\n    let maxForwards value = Header(\"Max-Forwards\", value)\r\n    let origin value = Header (\"Origin\", value)\r\n    let pragma value = Header(\"Pragma\", value)\r\n    let proxyAuthorization value = Header(\"Proxy-Authorization\", value)\r\n    let range value = Header(\"Range\", value)\r\n    let referer value = Header(\"Referer\", value)\r\n    let userAgent value = Header(\"User-Agent\", value)\r\n    let create key value = Header(key, value)\r\n\r\nmodule Http =\r\n\r\n    let private defaultRequest =\r\n        { url = \"\";\r\n          method = HttpMethod.GET\r\n          headers = []\r\n          withCredentials = false\r\n          overridenMimeType = None\r\n          overridenResponseType = None\r\n          content = BodyContent.Empty }\r\n\r\n    let private emptyResponse =\r\n        { statusCode = 0\r\n          responseText = \"\"\r\n          responseType = \"\"\r\n          responseHeaders = Map.empty\r\n          content = ResponseContent.Text \"\" }\r\n\r\n    let private splitAt (delimiter: string) (input: string) : string [] =\r\n        if String.IsNullOrEmpty input then [| input |]\r\n        else input.Split([| delimiter |], StringSplitOptions.None)\r\n\r\n    let private serializeMethod = function\r\n        | HttpMethod.GET -> \"GET\"\r\n        | HttpMethod.POST -> \"POST\"\r\n        | HttpMethod.PATCH -> \"PATCH\"\r\n        | HttpMethod.PUT -> \"PUT\"\r\n        | HttpMethod.DELETE -> \"DELETE\"\r\n        | HttpMethod.OPTIONS -> \"OPTIONS\"\r\n        | HttpMethod.HEAD -> \"HEAD\"\r\n\r\n    /// Starts the configuration of the request with the specified url\r\n    let request (url: string) : HttpRequest =\r\n        { defaultRequest with url = url }\r\n\r\n    /// Sets the Http method of the request\r\n    let method httpVerb (req: HttpRequest) =\r\n        { req with method = httpVerb }\r\n\r\n    /// Appends a header to the request configuration\r\n    let header (singleHeader: Header) (req: HttpRequest) =\r\n        { req with headers = List.append req.headers [singleHeader] }\r\n\r\n    /// Appends a list of headers to the request configuration\r\n    let headers (values: Header list) (req: HttpRequest)  =\r\n        { req with headers = List.append req.headers values }\r\n\r\n    /// Enables cross-site credentials such as cookies\r\n    let withCredentials (enabled: bool) (req: HttpRequest) =\r\n        { req with withCredentials = enabled }\r\n\r\n    /// Specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as \"text/xml\", even if the server does not report it as such.\r\n    let overrideMimeType (value: string) (req: HttpRequest) =\r\n        { req with overridenMimeType = Some value }\r\n\r\n    /// Change the expected response type from the server\r\n    let overrideResponseType (value: ResponseTypes) (req: HttpRequest) =\r\n        { req with overridenResponseType = Some value }\r\n\r\n    /// Sets the body content of the request\r\n    let content (bodyContent: BodyContent) (req: HttpRequest) : HttpRequest =\r\n        { req with content = bodyContent }\r\n\r\n    /// Sends the request to the server, this function does not throw\r\n    let send (req: HttpRequest) : Async<HttpResponse> =\r\n#if FABLE_COMPILER\r\n        Async.FromContinuations <| fun (resolve, reject, _) ->\r\n            let xhr = XMLHttpRequest.Create()\r\n            xhr.``open``(serializeMethod req.method, req.url)\r\n            xhr.onreadystatechange <- fun _ ->\r\n                if xhr.readyState = ReadyState.Done\r\n                then resolve {\r\n                    responseText =\r\n                        match xhr.responseType with\r\n                        | \"\" -> xhr.responseText\r\n                        | \"text\" -> xhr.responseText\r\n                        | _ -> \"\"\r\n\r\n                    statusCode = int xhr.status\r\n                    responseType = xhr.responseType\r\n                    content =\r\n                        match xhr.responseType with\r\n                        | (\"\" | \"text\") -> ResponseContent.Text xhr.responseText\r\n                        | \"arraybuffer\" -> ResponseContent.ArrayBuffer (unbox xhr.response)\r\n                        | \"blob\" -> ResponseContent.Blob (unbox xhr.response)\r\n                        | _ -> ResponseContent.Unknown xhr.response\r\n\r\n                    responseHeaders =\r\n                        xhr.getAllResponseHeaders()\r\n                        |> splitAt \"\\r\\n\"\r\n                        |> Array.choose (fun headerLine ->\r\n                            let parts = splitAt \":\" headerLine\r\n                            match List.ofArray parts with\r\n                            | key :: rest ->  Some (key.ToLower(), (String.concat \":\" rest).Trim())\r\n                            | otherwise -> None)\r\n                        |> Map.ofArray\r\n                }\r\n\r\n            for (Header(key, value)) in req.headers do\r\n                xhr.setRequestHeader(key, value)\r\n\r\n            xhr.withCredentials <- req.withCredentials\r\n\r\n            match req.overridenMimeType with\r\n            | Some mimeType -> xhr.overrideMimeType(mimeType)\r\n            | None -> ()\r\n\r\n            match req.overridenResponseType with\r\n            | Some ResponseTypes.Text -> xhr.responseType <- \"text\"\r\n            | Some ResponseTypes.Blob -> xhr.responseType <- \"blob\"\r\n            | Some ResponseTypes.ArrayBuffer -> xhr.responseType <- \"arraybuffer\"\r\n            | None -> ()\r\n\r\n            match req.method, req.content with\r\n            | GET, _ -> xhr.send(None)\r\n            | _, BodyContent.Empty -> xhr.send(None)\r\n            | _, BodyContent.Text value -> xhr.send(value)\r\n            | _, BodyContent.Form formData -> xhr.send(formData)\r\n            | _, BodyContent.Binary blob -> xhr.send(blob)\r\n#else\r\n        async {\r\n            try\r\n                use requestMessage = new HttpRequestMessage()\r\n                requestMessage.RequestUri <- Uri(req.url)\r\n                requestMessage.Method <-\r\n                    match req.method with\r\n                    | HttpMethod.GET     -> HttpMethod.Get\r\n                    | HttpMethod.POST    -> HttpMethod.Post\r\n                    | HttpMethod.PUT     -> HttpMethod.Put\r\n                    | HttpMethod.PATCH   -> HttpMethod \"PATCH\"\r\n                    | HttpMethod.DELETE  -> HttpMethod.Delete\r\n                    | HttpMethod.HEAD    -> HttpMethod.Head\r\n                    | HttpMethod.OPTIONS -> HttpMethod.Options\r\n                req.headers\r\n                |> Seq.iter (fun (Header (key, value)) ->\r\n                    requestMessage.Headers.Add(key, value))\r\n                use content =\r\n                    match req.content with\r\n                    | BodyContent.Text text -> new StringContent(text)\r\n                    | BodyContent.Empty -> null\r\n                    | _ -> failwith \"Only BodyContent.Text is supported in the dotnet implementation\"\r\n                requestMessage.Content <- content\r\n\r\n                use client = new HttpClient()\r\n                let! response = client.SendAsync requestMessage |> Async.AwaitTask\r\n                let! responseBody = response.Content.ReadAsStringAsync() |> Async.AwaitTask\r\n\r\n                let headers =\r\n                    response.Headers\r\n                    |> Seq.choose (fun kv ->\r\n                        kv.Value\r\n                        |> Seq.tryLast\r\n                        |> Option.map (fun value -> kv.Key, value))\r\n                    |> Map.ofSeq\r\n\r\n                return\r\n                    { statusCode = int response.StatusCode\r\n                      responseText = responseBody\r\n                      responseType = \"text\"\r\n                      responseHeaders = headers\r\n                      content = ResponseContent.Text responseBody }\r\n            with\r\n            // We're catching a lot here to mimic the behaviour of the JS\r\n            // implementation, which isn't able to expose the kind of error.\r\n            | :? ArgumentException ->\r\n                return emptyResponse // invalid uri\r\n            | :? HttpRequestException\r\n            | :? AggregateException as aggrEx when (aggrEx.InnerException :? HttpRequestException) ->\r\n                return emptyResponse // connection errors\r\n        }\r\n#endif\r\n\r\n    /// Safely sends a GET request and returns a tuple(status code * response text). This function does not throw.\r\n    let get url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.GET\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let put url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PUT\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a DELETE request and returns a tuple(status code * response text). This function does not throw.\r\n    let delete url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.DELETE\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let patch url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PATCH\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a POST request and returns a tuple(status code * response text). This function does not throw.\r\n    let post url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.POST\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n","namespace Feliz.ElmishComponents\r\n\r\nopen Feliz\r\nopen Elmish\r\nopen System\r\nopen Fable.Core\r\n\r\ntype ElmishComponentProps<'State, 'Msg> = {\r\n    Initial : 'State * Cmd<'Msg>\r\n    Update : 'Msg -> 'State -> 'State * Cmd<'Msg>\r\n    Render : 'State -> ('Msg -> unit) -> ReactElement\r\n    key : string\r\n}\r\n\r\n/// A React component that implements an internal Elmish dispatch loop using the program parts of `init`, `update` and `render`.\r\ntype ElmishComponent<'State, 'Msg>(props: ElmishComponentProps<'State, 'Msg>) as this =\r\n    inherit Fable.React.Component<ElmishComponentProps<'State, 'Msg>, 'State>(props)\r\n    let mutable mounted = false\r\n\r\n    do\r\n        let initialState = fst this.props.Initial\r\n        this.setInitState(initialState)\r\n\r\n    override this.componentDidMount() =\r\n        mounted <- true\r\n        let initialEffect = snd this.props.Initial\r\n        for subscriber in initialEffect do\r\n            JS.setTimeout (fun _ -> subscriber(this.dispatch)) 0 |> ignore\r\n\r\n    override this.componentDidUpdate(prevProps, prevState) =\r\n        // if props changed reference, re-execute `init` from the program definition\r\n        if not (System.Object.ReferenceEquals(prevProps, this.props)) then\r\n            let initialEffect = snd this.props.Initial\r\n            for subscriber in initialEffect do\r\n                JS.setTimeout (fun _ -> subscriber(this.dispatch)) 0 |> ignore\r\n\r\n    override this.componentWillUnmount() =\r\n        mounted <- false\r\n\r\n    member this.dispatch(msg: 'Msg) =\r\n        let (nextState, nextEffect) = this.props.Update msg this.state\r\n        if mounted then this.setState(fun _ _ -> nextState)\r\n        for subscriber in nextEffect do\r\n            JS.setTimeout (fun _ -> subscriber(this.dispatch)) 0 |> ignore\r\n\r\n    override this.render() =\r\n        this.props.Render this.state this.dispatch\r\n\r\n[<AutoOpen>]\r\nmodule ElmishComponentExtensiosns =\r\n\r\n    type React with\r\n        /// Creates a standalone React component using an Elmish dispatch loop\r\n        static member inline elmishComponent(name, init, update, render, ?key) =\r\n            let fullKey =\r\n                match key with\r\n                | None -> name\r\n                | Some key -> name + \"-\" + key\r\n            Fable.React.Helpers.ofType<ElmishComponent<_, _>, _, _>\r\n                { Initial = init; Update = update; Render = render; key = fullKey }\r\n                [ ]\r\n\r\n        /// Creates a standalone React component using an Elmish dispatch loop\r\n        static member inline elmishComponent(name, init, update, render, ?key) =\r\n            let fullKey =\r\n                match key with\r\n                | None -> name\r\n                | Some key -> name + \"-\" + key\r\n            Fable.React.Helpers.ofType<ElmishComponent<_, _>, _, _>\r\n                { Initial = init, Cmd.none; Update = update; Render = render; key = fullKey }\r\n                [ ]\r\n\r\n        /// Creates a standalone React component using an Elmish dispatch loop\r\n        static member inline elmishComponent(name, init, update, render, ?key) =\r\n            let fullKey =\r\n                match key with\r\n                | None -> name\r\n                | Some key -> name + \"-\" + key\r\n            Fable.React.Helpers.ofType<ElmishComponent<_, _>, _, _>\r\n                { Initial = init, Cmd.none;\r\n                  Update = fun msg state -> update msg state, Cmd.none;\r\n                  Render = render\r\n                  key = fullKey }\r\n                [ ]\r\n\r\n        /// Creates a standalone React component using an Elmish dispatch loop\r\n        static member inline elmishComponent(name, init, update, render, ?key) =\r\n            let fullKey =\r\n                match key with\r\n                | None -> name\r\n                | Some key -> name + \"-\" + key\r\n            Fable.React.Helpers.ofType<ElmishComponent<_, _>, _, _>\r\n                { Initial = init;\r\n                  Update = fun msg state -> update msg state, Cmd.none;\r\n                  Render = render\r\n                  key = fullKey }\r\n                [ ]","namespace Fable.React\n\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Browser\nopen Props\n\n#if !FABLE_COMPILER\ntype HTMLNode =\n    | Text of string\n    | RawText of string\n    | Node of string * IProp seq * ReactElement seq\n    | List of ReactElement seq\n    | Empty\nwith interface ReactElement\n\ntype ServerElementType =\n    | Tag\n    | Fragment\n    | Component\n\ntype ReactElementTypeWrapper<'P> =\n    | Comp of obj\n    | Fn of ('P -> ReactElement)\n    | HtmlTag of string\n    interface ReactElementType<'P>\n\n[<RequireQualifiedAccess>]\nmodule ServerRendering =\n    let [<Literal>] private ChildrenName = \"children\"\n\n    let private createServerElementPrivate(tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        match elementType with\n        | ServerElementType.Tag ->\n            HTMLNode.Node (string tag, props :?> IProp seq, children) :> ReactElement\n        | ServerElementType.Fragment ->\n            HTMLNode.List children :> ReactElement\n        | ServerElementType.Component ->\n            let tag = tag :?> System.Type\n            let comp = System.Activator.CreateInstance(tag, props)\n            let childrenProp = tag.GetProperty(ChildrenName)\n            childrenProp.SetValue(comp, children |> Seq.toArray)\n            let render = tag.GetMethod(\"render\")\n            render.Invoke(comp, null) :?> ReactElement\n\n    let private createServerElementByFnPrivate(f, props, children) =\n        let propsType = props.GetType()\n        let props =\n            if propsType.GetProperty (ChildrenName) |> isNull then\n                props\n            else\n                let values = ResizeArray<obj> ()\n                let properties = propsType.GetProperties()\n                for p in properties do\n                    if p.Name = ChildrenName then\n                        values.Add (children |> Seq.toArray)\n                    else\n                        values.Add (FSharp.Reflection.FSharpValue.GetRecordField(props, p))\n                FSharp.Reflection.FSharpValue.MakeRecord(propsType, values.ToArray()) :?> 'P\n        f props\n\n    // In most cases these functions are inlined (mainly for Fable optimizations)\n    // so we create a proxy to avoid inlining big functions every time\n\n    let createServerElement(tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        createServerElementPrivate(tag, props, children, elementType)\n\n    let createServerElementByFn(f, props, children) =\n        createServerElementByFnPrivate(f, props, children)\n#endif\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule ReactElementType =\n    let inline ofComponent<'comp, 'props, 'state when 'comp :> Component<'props, 'state>> : ReactElementType<'props> =\n#if FABLE_REPL_LIB\n        failwith \"Cannot create React components from types in Fable REPL\"\n#else\n#if FABLE_COMPILER\n        jsConstructor<'comp> |> unbox\n#else\n        Comp (typeof<'comp>) :> _\n#endif\n#endif\n\n    let inline ofFunction<'props> (f: 'props -> ReactElement): ReactElementType<'props> =\n#if FABLE_COMPILER\n        f |> unbox\n#else\n        Fn f :> _\n#endif\n\n    let inline ofHtmlElement<'props> (name: string): ReactElementType<'props> =\n#if FABLE_COMPILER\n        unbox name\n#else\n        HtmlTag name :> ReactElementType<'props>\n#endif\n\n    /// Create a ReactElement to be rendered from an element type, props and children\n    let inline create<'props> (comp: ReactElementType<'props>) (props: 'props) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(comp, props, children)\n#else\n        match (comp :?> ReactElementTypeWrapper<'props>) with\n        | Comp obj -> ServerRendering.createServerElement(obj, props, children, ServerElementType.Component)\n        | Fn f -> ServerRendering.createServerElementByFn(f, props, children)\n        | HtmlTag obj -> ServerRendering.createServerElement(obj, props, children, ServerElementType.Tag)\n#endif\n\n    /// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of classes.\n    /// If your function component renders the same result given the same props, you can wrap it in a call to React.memo.\n    /// React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can use `memoWith`.\n    let memo<'props> (render: 'props -> ReactElement) =\n#if FABLE_COMPILER\n        ReactBindings.React.memo(render, unbox null)\n#else\n        ofFunction render\n#endif\n\n    /// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of classes.\n    /// If your function renders the same result given the \"same\" props (according to `areEqual`), you can wrap it in a call to React.memo.\n    /// React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can use `memoWith`.\n    /// This version allow you to control the comparison used instead of the default shallow one by provide a custom comparison function.\n    let memoWith<'props> (areEqual: 'props -> 'props -> bool) (render: 'props -> ReactElement) =\n#if FABLE_COMPILER\n        ReactBindings.React.memo(render, areEqual)\n#else\n        ofFunction render\n#endif\n\n\n[<AutoOpen>]\nmodule Helpers =\n    [<System.Obsolete(\"Use ReactBindings.React.createElement\")>]\n    let inline createElement(comp: obj, props: obj, [<ParamList>] children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(comp, props, children)\n#else\n        HTMLNode.Empty :> _\n#endif\n\n    /// Instantiate a component from a type inheriting React.Component\n    /// Example: `ofType<MyComponent,_,_> { myProps = 5 } []`\n    let inline ofType<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n        ReactElementType.create ReactElementType.ofComponent<'T,_,_> props children\n\n    [<System.Obsolete(\"Use ofType\")>]\n    let inline com<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n        ofType<'T, 'P, 'S> props children\n\n    let inline ofFunction<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n        ReactElementType.create (ReactElementType.ofFunction f) props children\n\n    /// Instantiate an imported React component. The first two arguments must be string literals, \"default\" can be used for the first one.\n    /// Example: `ofImport \"Map\" \"leaflet\" { x = 10; y = 50 } []`\n    let inline ofImport<'P> (importMember: string) (importPath: string) (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_REPL_LIB\n        failwith \"Cannot import React components in Fable REPL\"\n#else\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(import importMember importPath, props, children)\n#else\n        failwith \"Cannot import React components in .NET\"\n#endif\n#endif\n\n#if FABLE_COMPILER\n    [<Emit(\"typeof $0 === 'function'\")>]\n    let private isFunction (x: obj): bool = jsNative\n\n    [<Emit(\"typeof $0 === 'object' && !$0[Symbol.iterator]\")>]\n    let private isNonEnumerableObject (x: obj): bool = jsNative\n#endif\n\n    /// Normal structural F# comparison, but ignores top-level functions (e.g. Elmish dispatch).\n    /// Can be used e.g. with the `FunctionComponent.Of` `memoizeWith` parameter.\n    let equalsButFunctions (x: 'a) (y: 'a) =\n#if FABLE_COMPILER\n        if obj.ReferenceEquals(x, y) then\n            true\n        elif isNonEnumerableObject x && not(isNull(box y)) then\n            let keys = JS.Object.keys x\n            let length = keys.Count\n            let mutable i = 0\n            let mutable result = true\n            while i < length && result do\n                let key = keys.[i]\n                i <- i + 1\n                let xValue = x?(key)\n                result <- isFunction xValue || xValue = y?(key)\n            result\n        else\n            (box x) = (box y)\n#else\n        // Server rendering, won't be actually used\n        // Avoid `x = y` because it will force 'a to implement structural equality\n        false\n#endif\n\n    /// Comparison similar to default React.memo, but ignores functions (e.g. Elmish dispatch).\n    /// Performs a memberwise comparison where value types and strings are compared by value,\n    /// and other types by reference.\n    /// Can be used e.g. with the `FunctionComponent.Of` `memoizeWith` parameter.\n    let memoEqualsButFunctions (x: 'a) (y: 'a) =\n#if FABLE_COMPILER\n        if obj.ReferenceEquals(x, y) then\n            true\n        elif isNonEnumerableObject x && not(isNull(box y)) then\n            let keys = JS.Object.keys x\n            let length = keys.Count\n            let mutable i = 0\n            let mutable result = true\n            while i < length && result do\n                let key = keys.[i]\n                i <- i + 1\n                let xValue = x?(key)\n                result <- isFunction xValue || obj.ReferenceEquals(xValue, y?(key))\n            result\n        else\n            false\n#else\n        // Server rendering, won't be actually used\n        // Avoid `x = y` because it will force 'a to implement structural equality\n        false\n#endif\n\n    [<System.Obsolete(\"Use FunctionComponent.Of with memoizeWith\")>]\n    let memoBuilder<'props> (name: string) (render: 'props -> ReactElement) : 'props -> ReactElement =\n#if FABLE_COMPILER\n        render?displayName <- name\n#endif\n        let memoType = ReactElementType.memo render\n        fun props ->\n            ReactElementType.create memoType props []\n\n    [<System.Obsolete(\"Use FunctionComponent.Of with memoizeWith\")>]\n    let memoBuilderWith<'props> (name: string) (areEqual: 'props -> 'props -> bool) (render: 'props -> ReactElement) : 'props -> ReactElement =\n#if FABLE_COMPILER\n        render?displayName <- name\n#endif\n        let memoType = ReactElementType.memoWith areEqual render\n        fun props ->\n            ReactElementType.create memoType props []\n\n    [<System.Obsolete(\"Use ReactElementType.create\")>]\n    let inline from<'P> (com: ReactElementType<'P>) (props: 'P) (children: ReactElement seq): ReactElement =\n        ReactElementType.create com props children\n\n    /// Alias of `ofString`\n    let inline str (s: string): ReactElement =\n#if FABLE_COMPILER\n        unbox s\n#else\n        HTMLNode.Text s :> ReactElement\n#endif\n\n    /// Cast a string to a React element (erased in runtime)\n    let inline ofString (s: string): ReactElement =\n        str s\n\n    /// Cast an option value to a React element (erased in runtime)\n    let inline ofOption (o: ReactElement option): ReactElement =\n        match o with Some o -> o | None -> null // Option.toObj(o)\n\n    [<System.Obsolete(\"Use ofOption\")>]\n    let opt (o: ReactElement option): ReactElement =\n        ofOption o\n\n    /// Cast an int to a React element (erased in runtime)\n    let inline ofInt (i: int): ReactElement =\n#if FABLE_COMPILER\n        unbox i\n#else\n        HTMLNode.RawText (string i) :> ReactElement\n#endif\n\n    /// Cast a float to a React element (erased in runtime)\n    let inline ofFloat (f: float): ReactElement =\n#if FABLE_COMPILER\n        unbox f\n#else\n        HTMLNode.RawText (string f) :> ReactElement\n#endif\n\n    /// Returns a list **from .render() method**\n    let inline ofList (els: ReactElement list): ReactElement =\n#if FABLE_COMPILER\n        unbox(List.toArray els)\n#else\n        HTMLNode.List els :> ReactElement\n#endif\n\n    /// Returns an array **from .render() method**\n    let inline ofArray (els: ReactElement array): ReactElement =\n#if FABLE_COMPILER\n        unbox els\n#else\n        HTMLNode.List els :> ReactElement\n#endif\n\n    /// A ReactElement when you don't want to render anything (null in javascript)\n    let nothing: ReactElement =\n#if FABLE_COMPILER\n        null\n#else\n        HTMLNode.Empty :> ReactElement\n#endif\n\n    /// Instantiate a DOM React element\n    let inline domEl (tag: string) (props: IHTMLProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n    /// Instantiate a DOM React element (void)\n    let inline voidEl (tag: string) (props: IHTMLProp seq) : ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, [])\n#else\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), [], ServerElementType.Tag)\n#endif\n\n    /// Instantiate an SVG React element\n    let inline svgEl (tag: string) (props: IProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n    /// Instantiate a React fragment\n    let inline fragment (props: IFragmentProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(ReactBindings.React.Fragment, keyValueList CaseRules.LowerFirst props, children)\n#else\n        ServerRendering.createServerElement(typeof<Fragment>, (props |> Seq.cast<IProp>), children, ServerElementType.Fragment)\n#endif\n\n    /// Accepts a context value to be passed to consuming components that are descendants of this Provider.\n    /// One Provider can be connected to many consumers. Providers can be nested to override values deeper within the tree.\n    /// Important: In SSR, this is ignored, and the DEFAULT value is consumed!\n    /// More info at https://reactjs.org/docs/context.html#contextprovider\n    let inline contextProvider (ctx: IContext<'T>) (value: 'T) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(ctx?Provider, createObj [\"value\" ==> value], children)\n#else\n        fragment [] children\n#endif\n\n    /// Consumes a context value, either from the nearest parent in the tree, or from the default value.\n    /// Important: in SSR, this will always consume the context DEFAULT value!\n    /// More info at https://reactjs.org/docs/context.html#contextconsumer\n    let inline contextConsumer (ctx: IContext<'T>) (children: 'T -> ReactElement): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(ctx?Consumer, null, [!!children])\n#else\n        let ctx = ctx :?> ISSRContext<_>\n        fragment [] [children(ctx.DefaultValue)]\n#endif\n\n    /// Creates a Context object. When React renders a component that subscribes to this Context\n    /// object it will read the current context value from the closest matching Provider above it\n    /// in the tree. More info at https://reactjs.org/docs/context.html#reactcreatecontext\n    let inline createContext (defaultValue: 'T): IContext<'T> =\n#if FABLE_COMPILER\n        ReactBindings.React.createContext(defaultValue)\n#else\n        upcast { new ISSRContext<_> with member __.DefaultValue = defaultValue }\n#endif\n\n    /// To be used in constructors of class components\n    /// (for function components use `useRef` hook)\n    let inline createRef (initialValue: 'T): IRefValue<'T> =\n#if FABLE_COMPILER\n        ReactBindings.React.createRef(initialValue)\n#else\n        { new IRefValue<_> with\n            member __.current with get() = initialValue and set _ = () }\n#endif\n\n    // Class list helpers\n    let classBaseList baseClass classes =\n        classes\n        |> Seq.choose (fun (name, condition) ->\n            if condition && not(System.String.IsNullOrEmpty(name)) then Some name\n            else None)\n        |> Seq.fold (fun state name -> state + \" \" + name) baseClass\n        |> ClassName\n\n    let classList classes = classBaseList \"\" classes\n\n    /// Finds a DOM element by its ID and mounts the React element there\n    /// Important: Not available in SSR\n    let inline mountById (domElId: string) (reactEl: ReactElement): unit =\n#if FABLE_COMPILER\n        ReactDom.render(reactEl, document.getElementById(domElId))\n#else\n        failwith \"mountById is not available for SSR\"\n#endif\n    /// Finds the first DOM element matching a CSS selector and mounts the React element there\n    /// Important: Not available in SSR\n    let inline mountBySelector (domElSelector: string) (reactEl: ReactElement): unit =\n#if FABLE_COMPILER\n        ReactDom.render(reactEl, document.querySelector(domElSelector))\n#else\n        failwith \"mountBySelector is not available for SSR\"\n#endif\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","namespace Feliz.Router\r\n\r\nopen System\r\nopen Browser.Dom\r\nopen Fable.React\r\nopen Elmish\r\nopen Fable.Core\r\n\r\ntype IUrlSearchParamters =\r\n    abstract entries : unit -> seq<string array>\r\n\r\n/// Determines whether the router will push a new entry to the history of modify the current one.\r\n[<RequireQualifiedAccess>]\r\ntype HistoryMode =\r\n    /// A new history will be added to the entries such that if the user clicks the back button,\r\n    /// the previous page will be shown, this is the default bahavior of the router.\r\n    | PushState = 1\r\n    /// Only modifies the current history entry and does not add a new one to the history stack. Clicking the back button will *not* have the effect of retuning to the previous page.\r\n    | ReplaceState = 2\r\n\r\n/// Determines whether the router will use path or hash based routes\r\n[<RequireQualifiedAccess>]\r\ntype RouteMode =\r\n    | Hash = 1\r\n    | Path = 2\r\n\r\n[<RequireQualifiedAccess>]\r\nmodule internal Router =\r\n    let mutable routeMode = RouteMode.Hash\r\n\r\n    let customNavigationEvent = \"CUSTOM_NAVIGATION_EVENT\"\r\n    let hashPrefix = sprintf \"#/%s\"\r\n    let combine xs = String.concat \"/\" xs\r\n\r\n    [<Emit(\"encodeURIComponent($0)\")>]\r\n    let encodeURIComponent (value: string) : string = jsNative\r\n    [<Emit(\"decodeURIComponent($0)\")>]\r\n    let decodeURIComponent (value: string) : string = jsNative\r\n\r\n    let encodeQueryString queryStringPairs =\r\n        queryStringPairs\r\n        |> List.map (fun (key, value) -> encodeURIComponent key, encodeURIComponent value)\r\n        |> List.map (fun (key, value) -> String.concat \"=\" [ key; value ])\r\n        |> String.concat \"&\"\r\n        |> function\r\n            | \"\" -> \"\"\r\n            | pairs -> sprintf \"?%s\" pairs\r\n\r\n    let encodeQueryStringInts queryStringIntPairs =\r\n        queryStringIntPairs\r\n        |> List.map (fun (key, value: int) -> encodeURIComponent key, (string value))\r\n        |> List.map (fun (key, value) -> String.concat \"=\" [ key; value ])\r\n        |> String.concat \"&\"\r\n        |> function\r\n            | \"\" -> \"\"\r\n            | pairs -> sprintf \"?%s\" pairs\r\n\r\n    let encodeParts xs =\r\n        let normalizeRoute : (string -> string) =\r\n            if routeMode = RouteMode.Hash then\r\n                function\r\n                | path when path.StartsWith \"/\" -> sprintf \"#%s\" path\r\n                | path when path.StartsWith \"#/\" -> path\r\n                | path when path.StartsWith \"#\" -> \"#/\" + path.Substring(1, path.Length - 1)\r\n                | path -> sprintf \"#/%s\" path\r\n            else\r\n                (fun path -> if path.StartsWith \"/\" then path else sprintf \"/%s\" path)\r\n\r\n        xs\r\n        |> List.map (fun (part: string) ->\r\n            if part.Contains \"?\" || part.StartsWith \"#\" || part.StartsWith \"/\"\r\n            then part\r\n            else encodeURIComponent part)\r\n        |> combine\r\n        |> normalizeRoute\r\n\r\n    let nav xs (mode: HistoryMode) : Elmish.Cmd<_> =\r\n        Cmd.ofSub (fun _ ->\r\n            if mode = HistoryMode.PushState\r\n            then history.pushState ((), \"\", encodeParts xs)\r\n            else history.replaceState((), \"\", encodeParts xs)\r\n            let ev = document.createEvent(\"CustomEvent\")\r\n            ev.initEvent (customNavigationEvent, true, true)\r\n            window.dispatchEvent ev |> ignore\r\n        )\r\n\r\n    /// Parses the URL into multiple path segments\r\n    let urlSegments (path: string) =\r\n        if path.StartsWith \"#\"\r\n        // remove the hash sign\r\n        then path.Substring(1, path.Length - 1)\r\n        // return as is\r\n        else path\r\n        |> fun p -> p.Split '/' // split the url segments\r\n        |> List.ofArray\r\n        |> List.filter (String.IsNullOrWhiteSpace >> not)\r\n        |> List.collect (fun segment ->\r\n            if segment = \"?\"\r\n            then [ ]\r\n            elif segment.StartsWith \"?\"\r\n            then [ segment ]\r\n            else\r\n            match segment.Split [| '?' |] with\r\n            | [| value |] -> [decodeURIComponent value]\r\n            | [| value; \"\" |] -> [decodeURIComponent value]\r\n            | [| value; query |] -> [ decodeURIComponent value; \"?\" + query ]\r\n            | _ -> [])\r\n\r\n    [<Emit(\"new URLSearchParams($0)\")>]\r\n    let createUrlSearchParams (queryString: string) : IUrlSearchParamters = jsNative\r\n\r\ntype RouterProperties = {\r\n    urlChanged: string list -> unit\r\n    application: ReactElement\r\n    routeMode: RouteMode\r\n}\r\n\r\ntype RouterComponent(props: RouterProperties)  =\r\n    inherit Fable.React.PureStatelessComponent<RouterProperties>(props)\r\n\r\n    override this.render() =\r\n        this.props.application\r\n\r\n    override this.componentDidUpdate(nextProps, nextState) =\r\n        // register global route mode\r\n        Router.routeMode <- props.routeMode\r\n\r\n    override this.componentDidMount() =\r\n        let onChange (ev: _) =\r\n            match window.location.hash with\r\n            | \"\" -> window.location.pathname + window.location.search\r\n            | _ -> window.location.hash\r\n            |> Router.urlSegments\r\n            |> this.props.urlChanged\r\n\r\n        // register global route mode\r\n        Router.routeMode <- props.routeMode\r\n        // listen to path changes\r\n        window.addEventListener(\"popstate\", unbox onChange)\r\n        // listen to manual hash changes or page refresh\r\n        window.addEventListener(\"hashchange\", unbox onChange)\r\n        // listen to custom navigation events published by `Router.navigate()`\r\n        window.addEventListener(Router.customNavigationEvent, unbox onChange)\r\n        // trigger event here\r\n        onChange()\r\n\r\n    override this.componentWillUnmount() =\r\n        // clean up when the router isn't in view anymore\r\n        window.removeEventListener(\"popstate\", unbox null)\r\n        window.removeEventListener(\"hashchange\", unbox null)\r\n        window.removeEventListener(Router.customNavigationEvent, unbox null)\r\n\r\n/// Defines a property for the `router` element\r\ntype IRouterProperty = interface end\r\n\r\ntype Router =\r\n    /// An event that is triggered when the URL in the address bar changes, whether by hand or programmatically using `Router.navigate(...)`.\r\n    /// The event arguments are the parts of the URL, segmented into strings:\r\n    ///\r\n    /// `segment \"#/\" => [ ]`\r\n    ///\r\n    /// `segment \"#/home\" => [ \"home\" ]`\r\n    ///\r\n    /// `segment \"#/home/settings\" => [ \"home\"; \"settings\" ]`\r\n    ///\r\n    /// `segment \"#/users/1\" => [ \"users\"; \"1\" ]`\r\n    ///\r\n    /// `segment \"#/users/1/details\" => [ \"users\"; \"1\"; \"details\" ]`\r\n    ///\r\n    /// with query string parameters\r\n    ///\r\n    /// `segment \"#/users?id=1\" => [ \"users\"; \"?id=1\" ]`\r\n    ///\r\n    /// `segment \"#/home/users?id=1\" => [ \"home\"; \"users\"; \"?id=1\" ]`\r\n    ///\r\n    /// `segment \"#/users?id=1&format=json\" => [ \"users\"; \"?id=1&format=json\" ]`\r\n    ///\r\n    /// escaped query string parameters are decoded when the url is segmented\r\n    ///\r\n    /// `segment @\"#/search?q=whats%20up\" => [ \"search\"; \"?q=whats up\" ]`\r\n    static member onUrlChanged (eventHandler: string list -> unit) : IRouterProperty = unbox (\"onUrlChanged\", eventHandler)\r\n\r\n    /// The element that is rendered inside where the `router` is placed. Usually this contains the root application but it could also be part of another root element.\r\n    ///\r\n    /// It will keep listening for URL changes as long as the `router` is rendered on screen somewhere.\r\n    static member application (app: ReactElement) : IRouterProperty = unbox (\"application\", app)\r\n\r\n    /// The content that is rendered inside where the `router` is placed. Usually this contains the root application but it could also be part of another root element.\r\n    ///\r\n    /// It will keep listening for URL changes as long as the `router` is rendered on screen somewhere.\r\n    static member application (app: ReactElement list) : IRouterProperty = unbox (\"application\", Feliz.Html.fragment app)\r\n\r\n    /// Use # based routes (default)\r\n    static member hashMode : IRouterProperty = unbox (\"routeMode\", RouteMode.Hash)\r\n\r\n    /// Use full (HTML 5) based routes instead of # based.\r\n    /// You have to be careful about which requests you want forwarded to the server and which ones should be handled locally.\r\n    /// To keep the request local, you have to use the 'Router.navigate' function for all the URL transitions.\r\n    static member pathMode : IRouterProperty = unbox (\"routeMode\", RouteMode.Path)\r\n\r\n    /// Initializes the router as an element of the page to starts listening to URL changes.\r\n    static member router (properties: IRouterProperty list) : ReactElement =\r\n        let defaultProperties : RouterProperties =\r\n            { urlChanged = fun _ -> ignore()\r\n              application = nothing\r\n              routeMode = RouteMode.Hash }\r\n\r\n        let modifiedProperties =\r\n            (defaultProperties, properties)\r\n            ||> List.fold (fun state prop ->\r\n                let (key, value) = unbox<string * obj> prop\r\n                match key with\r\n                | \"onUrlChanged\" -> { state with urlChanged  = unbox value  }\r\n                | \"application\"  -> { state with application = unbox value  }\r\n                | \"routeMode\"    -> { state with routeMode   = unbox value  }\r\n                | _ -> state)\r\n\r\n        ofType<RouterComponent, _, _>(modifiedProperties) [| |]\r\n\r\n    static member navigate([<ParamArray>] xs: string array) =\r\n        Router.nav (List.ofArray xs) HistoryMode.PushState\r\n    static member navigate(segment: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2;string  segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(fullPath: string) : Cmd<_> =\r\n        Router.nav [ fullPath ] HistoryMode.PushState\r\n    static member navigate(fullPath: string, mode) : Cmd<_> =\r\n        Router.nav [ fullPath ] mode\r\n    static member navigate(segment: string, value: int) : Cmd<_> =\r\n        Router.nav [segment; string value ] HistoryMode.PushState\r\n    static member navigate(segment: string, value: int, mode) : Cmd<_> =\r\n        Router.nav [segment; string value ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2 ] mode\r\n    static member navigate(segment1: string, segment2: string, value1: int) : Cmd<_> =\r\n        Router.nav [segment1; segment2; string value1 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, value1: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; segment2; string value1 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; segment4 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; segment4 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; string value3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; string value3 ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int, value3: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; string value3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, value3: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; string value3 ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int, segment2: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; segment2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, segment2: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; segment2 ] mode\r\n\r\nmodule Route =\r\n    let (|Int|_|) (input: string) =\r\n        match Int32.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Int64|_|) (input: string) =\r\n        match Int64.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Guid|_|) (input: string) =\r\n        match Guid.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Number|_|) (input: string) =\r\n        match Double.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Decimal|_|) (input: string) =\r\n        match Decimal.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Bool|_|) (input: string) =\r\n        match input.ToLower() with\r\n        | (\"1\"|\"true\")  -> Some true\r\n        | (\"0\"|\"false\") -> Some false\r\n        | \"\" -> Some true\r\n        | _ -> None\r\n\r\n    /// Used to parse the query string parameter of the route.\r\n    ///\r\n    /// For example to match against\r\n    ///\r\n    /// `/users?id={value}`\r\n    ///\r\n    /// You can pattern match:\r\n    ///\r\n    /// `[ \"users\"; Route.Query [ \"id\", value ] ] -> value`\r\n    ///\r\n    /// When `{value}` is an integer then you can pattern match:\r\n    ///\r\n    /// `[ \"users\"; Route.Query [ \"id\", Route.Int userId ] ] -> userId`\r\n    let (|Query|_|) (input: string) =\r\n        try\r\n            let urlParams = Router.createUrlSearchParams input\r\n            Some [ for entry in urlParams.entries() -> entry.[0], entry.[1] ]\r\n        with | _ -> None","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10), 0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items, wix, rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items, wix)\n            | _ ->\n                state <- ReadWritable(items, wix, rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items, ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items, wix, ix)\n        | ReadWritable (items, wix, rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n            | _ -> \n                state <- ReadWritable(items, wix', rix)","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = private {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n    syncDispatch: Dispatch<'msg> -> Dispatch<'msg>\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let update msg model =\n            let state,cmd = program.update msg model\n            trace msg state\n            state,cmd\n        { program\n            with update = update }\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// For library authors only: map existing error handler and return new `Program` \n    let mapErrorHandler map (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = map program.onError }\n\n    /// For library authors only: get the current error handler \n    let onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        program.onError\n\n    /// For library authors only: function to render the view with the latest state \n    let withSetState (setState:'model -> Dispatch<'msg> -> unit)\n                     (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with setState = setState }\n\n    /// For library authors only: return the function to render the state \n    let setState (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.setState\n\n    /// For library authors only: return the view function \n    let view (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.view\n\n    /// For library authors only: function to synchronize the dispatch function\n    let withSyncDispatch (syncDispatch:Dispatch<'msg> -> Dispatch<'msg>)\n                         (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with syncDispatch = syncDispatch }\n\n    /// For library authors only: map the program type\n    let map mapInit mapUpdate mapView mapSetState mapSubscribe\n            (program: Program<'arg, 'model, 'msg, 'view>) =\n        { init = mapInit program.init\n          update = mapUpdate program.update\n          view = mapView program.view\n          setState = mapSetState program.setState\n          subscribe = mapSubscribe program.subscribe\n          onError = program.onError\n          syncDispatch = id }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let rb = RingBuffer 10\n        let mutable reentered = false\n        let mutable state = model        \n        let rec dispatch msg = \n            if reentered then\n                rb.Push msg\n            else\n                reentered <- true\n                let mutable nextMsg = Some msg\n                while Option.isSome nextMsg do\n                    let msg = nextMsg.Value\n                    try\n                        let (model',cmd') = program.update msg state\n                        program.setState model' syncDispatch\n                        cmd' |> Cmd.exec syncDispatch\n                        state <- model'\n                    with ex ->\n                        program.onError (sprintf \"Unable to process the message: %A\" msg, ex)\n                    nextMsg <- rb.Pop()\n                reentered <- false\n        and syncDispatch = program.syncDispatch dispatch            \n\n        program.setState model syncDispatch\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        sub @ cmd |> Cmd.exec syncDispatch\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","module App\n\nopen Elmish\nopen Elmish.React\nopen Fable.MaterialUI.MaterialDesignIcons\nopen Fable.React\nopen Fable.SimpleHttp\nopen Feliz\nopen Feliz.Markdown\nopen Feliz.MaterialUI\nopen Feliz.Router\nopen Fable.Core.JsInterop\n\ntype AppTheme =\n    { PaletteType: PaletteType\n      Primary: string\n      Secondary: string\n      PrimaryCT: string\n      Error: string }\n\n    static member Dark =\n        { PaletteType = PaletteType.Dark\n          Primary = \"#03DAC6\"\n          PrimaryCT = \"#FFF\"\n          Secondary = \"#7700b3\"\n          Error = \"#CF6679\" }\n\n    static member Light =\n        { PaletteType = PaletteType.Light\n          Primary = \"#00D1B2\"\n          PrimaryCT = \"#FFF\"\n          Secondary = \"#6200EE\"\n          Error = \"#B00020\" }\n\nmodule AppTheme =\n    let private buildTheme (theme: AppTheme) = Styles.createMuiTheme(jsOptions<Theme> <| fun t ->\n        t.palette <-\n            jsOptions<Palette> (fun p ->\n                p.``type`` <- theme.PaletteType\n                p.primary <-\n                    !^(jsOptions<PaletteIntention> (fun pi -> \n                        pi.main <- theme.Primary\n                        pi.contrastText <- theme.PrimaryCT))\n                p.secondary <-\n                    !^(jsOptions<PaletteIntention> (fun pi -> pi.main <- theme.Secondary))\n                p.error <-\n                    !^(jsOptions<PaletteIntention> (fun pi -> pi.main <- theme.Error))))\n\n    let getTheme b =\n        if b then AppTheme.Dark\n        else AppTheme.Light\n        |> buildTheme\n\n    let useStyles : unit -> _ = Styles.makeStyles <| fun (theme: Theme) ->\n        let drawerWidth = 200\n\n        {| appBar =\n            Styles.create\n                [ style.zIndex (theme.zIndex.drawer + 1)\n                  style.cursor \"default\"\n                  style.userSelect.none\n                  style.display.grid ]\n           code = Styles.create [ style.userSelect.text ]\n           containerCard =\n               Styles.create \n                   [ style.padding (length.em 1) ]\n           content =\n               Styles.create\n                   [ style.flexGrow 1\n                     style.height.inheritFromParent\n                     style.paddingTop (length.em 6)\n                     style.paddingLeft (length.em 2)\n                     style.paddingRight (length.em 2)\n                     style.paddingBottom (length.em 1) ]\n           drawer =\n               Styles.create\n                   [ style.zIndex theme.zIndex.drawer\n                     style.width drawerWidth\n                     style.flexShrink 0 ]\n           drawerPaper = Styles.create [ style.width drawerWidth ]\n           fullSizeCard =\n               Styles.create\n                   [ style.paddingTop (length.em 1)\n                     style.paddingBottom (length.em 1)\n                     style.paddingLeft (length.em 5)\n                     style.paddingRight (length.em 5)\n                     style.flexGrow 1 ]\n           githubButton = Styles.create [ style.custom (\"color\", \"inherit\"); style.custom (\"backgroundColor\", \"inherit\") ]\n           githubText = Styles.create [ style.textTransform.none; style.margin 0 ]\n           root =\n               Styles.create\n                   [ style.display.flex\n                     style.height.inheritFromParent\n                     style.userSelect.none ]\n           sampleApp = Styles.create [ style.paddingTop (length.em 2); style.paddingBottom (length.em 2) ]\n           title = Styles.create [ style.width (length.percent 100) ]\n           titleButton =\n               Styles.create\n                   [ style.padding 5\n                     style.paddingRight 10\n                     style.paddingLeft 10\n                     style.color.white\n                     style.borderRadius (length.percent 20) ]\n           toolbar = Styles.create [ yield! theme.mixins.toolbarStyles ]\n           unselectable = Styles.create [ style.userSelect.none ]|}\n\nmodule Store =\n    open Browser.WebStorage\n\n    [<RequireQualifiedAccess>]\n    type Field = DarkTheme\n\n    type Msg = ToggleDarkTheme\n\n    type Model = { DarkTheme: bool }\n\n    let private getItem (field: Field) f def =\n        let tryF value =\n            try\n                f value |> Some\n            with _ -> None\n\n        localStorage.getItem (string field)\n        |> function\n        | value when isNull value -> None\n        | value -> Some value\n        |> Option.bind tryF\n        |> defaultArg\n        <| def\n\n    let private setItem (field: Field) (value: string) = localStorage.setItem (string field, value)\n\n    let private asBool (s: string) =\n        match s.ToLower() with\n        | \"true\" -> true\n        | _ -> false\n\n    let init() = { DarkTheme = getItem Field.DarkTheme asBool true }\n\n    let update (msg: Msg) (model: Model) =\n        match msg with\n        | ToggleDarkTheme ->\n            let newB = model.DarkTheme |> not\n            string newB |> setItem Field.DarkTheme\n            { model with DarkTheme = newB }, Cmd.none\n\ntype Highlight =\n    static member inline highlight (properties: IReactProperty list) =\n        Interop.reactApi.createElement(importDefault \"react-highlight\", createObj !!properties)\n\ntype Model = \n    { CurrentPath : string list\n      CurrentTab: string list\n      Store: Store.Model }\n\n\nlet init () = \n    { CurrentPath = [ ]\n      CurrentTab = [ ]\n      Store = Store.init() }, Cmd.none\n\ntype Msg =\n    | StoreMsg of Store.Msg\n    | TabToggled of string list\n    | UrlChanged of string list\n\nlet update msg model =\n    match msg with\n    | StoreMsg msg' ->\n        let m, cmd = Store.update msg' model.Store\n        { model with Store = m }, Cmd.map StoreMsg cmd\n    | TabToggled tabs ->\n        match tabs with\n        | [ ] -> { model with CurrentTab = [ ] }, Cmd.none\n        | _ -> { model with CurrentTab = tabs }, Cmd.none\n    | UrlChanged segments -> \n        { model with CurrentPath = segments }, \n        match model.CurrentTab with\n        | [ ] when segments.Length > 2 -> \n            segments\n            |> TabToggled\n            |> Cmd.ofMsg\n        | _ -> Cmd.none\n\nlet centeredSpinner =\n    Html.div [\n        prop.style [\n            style.textAlign.center\n            style.marginLeft length.auto\n            style.marginRight length.auto\n            style.marginTop 50\n        ]\n        prop.children [\n            Mui.circularProgress []\n        ]\n    ]\n\nlet samples = \n    [ \"pickers-date-basic\", Samples.Date.Basic.render()\n      \"pickers-date-keyboardinput\", Samples.Date.KeyboardInput.render()\n      \"pickers-date-differentviews\", Samples.Date.DifferentViews.render()\n      \"pickers-date-inlinemode\", Samples.Date.InlineMode.render()\n      \"pickers-date-staticmode\", Samples.Date.StaticMode.render()\n      \"pickers-date-customization\", Samples.Date.Customization.render()\n      \"pickers-date-dynamicdata\", Samples.Date.DynamicData.render() ]\n\nmodule MarkdownView =\n\n    let private githubPath (rawPath: string) =\n        let parts = rawPath.Split('/')\n        if parts.Length > 5\n        then sprintf \"http://www.github.com/%s/%s\" parts.[3] parts.[4]\n        else rawPath\n\n    /// Renders a code block from markdown using react-highlight.\n    /// Injects sample React components when the code block has language of the format <language>:<sample-name>\n    let private codeBlockRenderer' = React.functionComponent (fun (input: {| codeProps: Markdown.ICodeProperties |}) ->\n        let c = AppTheme.useStyles()\n\n        if input.codeProps.language <> null && input.codeProps.language.Contains \":\" then\n            let languageParts = input.codeProps.language.Split(':')\n            let sampleName = languageParts.[1]\n            let sampleApp =\n                samples\n                |> List.tryFind (fun (name, _) -> name = sampleName)\n                |> Option.map snd\n                |> Option.defaultValue (Html.h1 [\n                    prop.style [ style.color.crimson ];\n                    prop.text (sprintf \"Could not find sample app '%s'\" sampleName)\n                ])\n            Mui.grid [\n                grid.direction.column\n                grid.container true\n\n                prop.children [\n                    Html.div [\n                        prop.className c.sampleApp\n                        prop.children sampleApp\n                    ]\n                    Highlight.highlight [\n                        prop.classes [ \"fsharp\"; c.code ]\n                        prop.text(input.codeProps.value)\n                    ]\n                ]\n            ]\n        else\n            Highlight.highlight [\n                prop.classes [ \"fsharp\"; c.code ]\n                prop.text(input.codeProps.value)\n            ])\n\n    let codeBlockRenderer codeProps = codeBlockRenderer' {| codeProps = codeProps |}\n\n    let private renderMarkdown = React.functionComponent (fun (input: {|path: string; content: string |}) ->\n        let c = AppTheme.useStyles()\n\n        Mui.grid [\n            grid.container true\n            prop.className \"scrollbar\"\n\n            prop.children [\n                Mui.card [\n                    prop.className c.fullSizeCard\n\n                    prop.children [\n                        if input.path.StartsWith \"https://raw.githubusercontent.com\" then\n                            Mui.button [\n                                button.size.small\n                                button.variant.text\n                                button.disableRipple true\n                                button.disableFocusRipple true\n                                button.disableTouchRipple true\n                                button.href (githubPath input.path)\n                                prop.custom (\"target\", \"_blank\")\n                                prop.children [\n                                    Mui.grid [\n                                        grid.container true\n                                        grid.direction.row\n                                        grid.justify.spaceEvenly\n                                        \n                                        prop.children [\n                                            Mui.avatar [ \n                                                prop.className c.githubButton\n                                                prop.children [ githubCircleIcon [] ]\n                                            ]\n                                            Mui.typography [\n                                                prop.className c.githubText\n                                                typography.variant.button\n                                                typography.align.right\n                                                typography.variant.h4\n                                                typography.color.primary\n                                                prop.children [\n                                                    Html.p [\n                                                        prop.className c.githubText\n                                                        prop.text \"View on Github\"\n                                                    ]\n                                                ]\n                                            ]\n                                        ]\n                                    ]\n                                ]\n                            ]\n\n                        Markdown.markdown [\n                            markdown.source input.content\n                            markdown.escapeHtml false\n                            markdown.disallowedTypes [ nodeTypes.link ]\n                            Interop.mkAttr \"unwrapDisallowed\" true\n                            markdown.renderers [\n                                markdown.renderers.code codeBlockRenderer\n                            ]\n                        ]\n                    ]\n                ]\n            ]\n        ])\n\n    let render path content = renderMarkdown {| path = path; content = content |}\n\nmodule MarkdownLoader =\n\n    open Feliz.ElmishComponents\n\n    type State =\n        | Initial\n        | Loading\n        | Errored of string\n        | LoadedMarkdown of content: string\n\n    type Model = { State: State }\n\n    type Msg =\n        | StartLoading of path: string list\n        | Loaded of Result<string, int * string>\n\n    let init (path: string list) = \n        { State = Initial }, Cmd.ofMsg (StartLoading path)\n\n    let resolvePath = function\n    | [ one: string ] when one.StartsWith \"http\" -> one\n    | segments -> String.concat \"/\" segments\n\n    let update (msg: Msg) (model: Model) =\n        match msg with\n        | StartLoading path ->\n            let loadMarkdownAsync() = async {\n                let! (statusCode, responseText) = Http.get (resolvePath path)\n                if statusCode = 200\n                then return Loaded (Ok responseText)\n                else return Loaded (Error (statusCode, responseText))\n            }\n\n            { model with State = Loading }, Cmd.OfAsync.perform loadMarkdownAsync () id\n\n        | Loaded (Ok content) ->\n            { model with State = State.LoadedMarkdown content}, Cmd.none\n\n        | Loaded (Error (status, _)) ->\n            { model with State = State.LoadedMarkdown (sprintf \"Status %d: could not load markdown\" status) }, Cmd.none\n\n    let render path (model: Model) dispatch =\n        match model.State with\n        | Initial -> Html.none\n        | Loading -> centeredSpinner\n        | LoadedMarkdown content -> MarkdownView.render (resolvePath path) content\n        | Errored error ->\n            Html.h1 [\n                prop.style [ style.color.crimson ]\n                prop.text error\n            ]\n\n    let loadMarkdown' (path: string list) =\n        React.elmishComponent(\"LoadMarkdown\", init path, update, render path, key = resolvePath path)\n\nlet loadMarkdown (path: string list) = MarkdownLoader.loadMarkdown' path\n\nlet nestedMenuList' = FunctionComponent.Of((fun (model: Model, name: string, basePath: string list, elems: (string list -> Fable.React.ReactElement) list, dispatch) ->\n    let c = AppTheme.useStyles()\n\n    Mui.listItem [\n        prop.className c.unselectable\n        listItem.children [\n            Mui.grid [\n                grid.container true\n                grid.direction.column\n\n                prop.children [\n                    Mui.listItemText name\n                    Mui.divider []\n                    yield! elems |> List.map (fun f -> f basePath)\n                ]\n            ]\n        ]\n    ]), memoizeWith = memoEqualsButFunctions)\n\nlet sidebar (model: Model) dispatch =\n    let nestedMenuList (name: string) (basePath: string list) (items: (string list -> Fable.React.ReactElement) list) =\n        nestedMenuList'(model, name, basePath, items, dispatch)\n\n    let menuItem (name: string) (path: string list) =\n        Mui.link [\n            prop.href (sprintf \"#/%s\" (String.concat \"/\" path))\n            link.underline.none\n            typography.color.inherit'\n\n            prop.children [\n                Mui.listItem [\n                    listItem.selected (model.CurrentPath = path)\n                    listItem.button true\n                    prop.href (path |> String.concat \"/\" |> (+) \"#\")\n                    //prop.onClick <| fun _ -> dispatch (UrlChanged path)\n                    prop.text name\n                ]\n            ]\n        ]\n\n    let nestedMenuItem (name: string) (extendedPath: string list) (basePath: string list) =\n        menuItem name (basePath @ extendedPath)\n\n    Mui.list [\n        menuItem \"Overview\" [ ]\n        menuItem \"Installation\" [ Urls.Pickers; Urls.Installation ]\n        menuItem \"Release Notes\" [ Urls.Pickers; Urls.ReleaseNotes ]\n        menuItem \"Contributing\" [ Urls.Pickers; Urls.Contributing ]\n\n        nestedMenuList \"Date Picker\" [ Urls.Pickers; Urls.Examples; Urls.Date ] [\n            nestedMenuItem \"Basic\" [ Urls.Basic ]\n            nestedMenuItem \"Keyboard Input\" [ Urls.KeyboardInput ]\n            nestedMenuItem \"Different Views\" [ Urls.DifferentViews ]\n            nestedMenuItem \"Inline Mode\" [ Urls.InlineMode ]\n            nestedMenuItem \"Static Mode\" [ Urls.StaticMode ]\n            nestedMenuItem \"Customization\" [ Urls.Customization ]\n            nestedMenuItem \"Dynamic Data\" [ Urls.DynamicData ]\n        ]\n    ]\n\nlet readme = sprintf \"https://raw.githubusercontent.com/%s/%s/master/README.md\"\nlet contributing = sprintf \"https://raw.githubusercontent.com/Zaid-Ajaj/Feliz/master/public/Feliz/Contributing.md\"\n\nlet examples (currentPath: string list) =\n    match currentPath with\n    | Urls.Date :: rest -> \n        match rest with\n        | [ Urls.Basic ] -> [ \"Basic.md\" ]\n        | [ Urls.KeyboardInput ] -> [ \"KeyboardInput.md\" ]\n        | [ Urls.DifferentViews ] -> [ \"DifferentViews.md\" ]\n        | [ Urls.InlineMode ] -> [ \"InlineMode.md\" ]\n        | [ Urls.StaticMode ] -> [ \"StaticMode.md\" ]\n        | [ Urls.Customization ] -> [ \"Customization.md\" ]\n        | [ Urls.DynamicData ] -> [ \"DynamicData.md\" ]\n        | _ -> []\n        |> List.append [ Urls.Date ]\n    | _ -> []\n\nlet content model dispatch =\n    let tryTakePath (basePath: string list) (path: string list) =\n        let num = path.Length\n        if basePath.Length >= num then\n            basePath |> List.take num = path\n        else false\n\n    match model.CurrentPath with\n    | [ Urls.Pickers; Urls.Overview; ] -> lazyView loadMarkdown [ \"Pickers\"; \"README.md\" ]\n    | [ Urls.Pickers; Urls.Installation ] -> lazyView loadMarkdown [ \"Pickers\"; \"Installation.md\" ]\n    | [ Urls.Pickers; Urls.ReleaseNotes ] -> lazyView loadMarkdown [ \"Pickers\"; \"RELEASE_NOTES.md\" ]\n    | [ Urls.Pickers; Urls.Contributing ] -> lazyView loadMarkdown [ contributing ]\n    | _ when tryTakePath model.CurrentPath [ Urls.Pickers; Urls.Examples ] -> \n        match model.CurrentPath |> List.skip 1 with\n        | datePath when tryTakePath datePath [ Urls.Examples ] -> datePath |> List.skip 1 |> examples\n        | _ -> [ ]\n        |> fun path ->\n            if path |> List.isEmpty then Html.div [ for segment in model.CurrentPath -> Html.p segment ]\n            else [ Urls.Pickers; Urls.Examples ] @ path |> (lazyView loadMarkdown)\n    | _ -> lazyView loadMarkdown [ \"Pickers\"; \"README.md\" ]\n\nlet render' = React.functionComponent (fun (input: {| model: Model; dispatch: Msg -> unit |}) ->\n    let currentTheme = AppTheme.getTheme input.model.Store.DarkTheme\n    let c = AppTheme.useStyles()\n\n    Mui.themeProvider [ \n        themeProvider.theme currentTheme\n        themeProvider.children [ \n            Html.div [ \n                prop.className c.root\n                prop.children [ \n                    Mui.cssBaseline []\n                    Mui.appBar [ \n                        prop.className c.appBar\n                        appBar.color.secondary\n                        appBar.position.fixed'\n                        appBar.children [ \n                            Mui.toolbar [ \n                                toolbar.children [ \n                                    Mui.typography [\n                                        prop.className c.title\n                                        prop.text \"Feliz.MaterialUI.Pickers\"\n                                        typography.align.left\n                                    ]\n                                    Mui.iconButton [ \n                                        prop.className c.titleButton\n                                        iconButton.disableRipple true\n                                        prop.onClick <| fun _ ->\n                                            Store.ToggleDarkTheme\n                                            |> StoreMsg\n                                            |> input.dispatch\n                                        prop.children [ \n                                            themeLightDarkIcon [] \n                                        ] \n                                    ]\n                                    Mui.iconButton [\n                                        prop.className c.titleButton\n                                        prop.href \"https://github.com/Shmew/Feliz.MaterialUI.Pickers\"\n                                        prop.custom (\"target\", \"_blank\")\n                                        iconButton.disableRipple true\n\n                                        prop.children [\n                                            githubCircleIcon []\n                                        ]\n                                    ]\n                                ] \n                            ] \n                        ] \n                    ]\n                    Mui.drawer [ \n                        prop.className c.drawer\n                        drawer.variant.permanent\n                        drawer.classes [ classes.drawer.paper c.drawerPaper ]\n                        drawer.children [ \n                            Html.div [ \n                                prop.className c.toolbar \n                            ]\n                            Mui.list [ \n                                prop.className \"scrollbar\"\n                                list.component' \"nav\"\n                                list.children (sidebar input.model input.dispatch)\n                            ] \n                        ] \n                    ]\n                    Html.main [ \n                        prop.className c.content\n                        prop.children [ content input.model input.dispatch ] \n                    ] \n                ] \n            ] \n        ] \n    ])\n\nlet render (model: Model) dispatch =\n    Router.router [\n        Router.onUrlChanged (UrlChanged >> dispatch)\n        Router.application (render' {| model = model; dispatch = dispatch |})\n    ]\n\nProgram.mkProgram init update render\n|> Program.withReactSynchronous \"root\"\n|> Program.withConsoleTrace\n|> Program.run\n","namespace Fable.React\n\nopen Fable.Core\nopen Fable.Core.JsInterop\n\ntype FunctionComponent<'Props> = 'Props -> ReactElement\ntype LazyFunctionComponent<'Props> = 'Props -> ReactElement\n\ntype FunctionComponent =\n#if !FABLE_REPL_LIB\n    /// Creates a lazy React component from a function in another file\n    /// ATTENTION: Requires fable-compiler 2.3, pass the external reference\n    /// directly to the argument position (avoid pipes)\n    static member inline Lazy(f: 'Props -> ReactElement,\n                                fallback: ReactElement)\n                            : LazyFunctionComponent<'Props> =\n#if FABLE_COMPILER\n        let elemType = ReactBindings.React.``lazy``(fun () ->\n            // React.lazy requires a default export\n            (importValueDynamic f).``then``(fun x -> createObj [\"default\" ==> x]))\n        fun props ->\n            ReactElementType.create\n                ReactBindings.React.Suspense\n                (createObj [\"fallback\" ==> fallback])\n                [ReactElementType.create elemType props []]\n#else\n        fun _ ->\n            div [] [] // React.lazy is not compatible with SSR, so just use an empty div\n#endif\n#endif\n\n    /// Creates a function React component that can use hooks to manage the component's life cycle,\n    /// and is displayed in React dev tools (use `displayName` to customize the name).\n    /// Uses React.memo if `memoizeWith` is specified (check `equalsButFunctions` and `memoEqualsButFunctions` helpers).\n    /// When you need a key to optimize collections in React you can use `withKey` argument or define a `key` field in the props object.\n    static member Of(render: 'Props->ReactElement,\n                       ?displayName: string,\n                       ?memoizeWith: 'Props -> 'Props -> bool,\n                       ?withKey: 'Props -> string)\n                    : FunctionComponent<'Props> =\n#if FABLE_COMPILER\n        match displayName with\n        | Some name -> render?displayName <- name\n        | None -> ()\n#endif\n        let elemType =\n            match memoizeWith with\n            | Some areEqual ->\n                let memoElement = ReactElementType.memoWith areEqual render\n#if FABLE_COMPILER\n                match displayName with\n                | Some name -> memoElement?displayName <- \"Memo(\" + name + \")\"\n                | None -> ()\n#endif\n                memoElement\n            | None -> ReactElementType.ofFunction render\n        fun props ->\n#if FABLE_COMPILER\n            let props =\n                match withKey with\n                | Some f -> props?key <- f props; props\n                | None -> props\n#endif\n            ReactElementType.create elemType props []\n"],"sourceRoot":""}